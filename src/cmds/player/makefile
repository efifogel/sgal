BASEDIR =.
MULTITHREAD =1
USE_SHARED =1

ifeq ($(USE_CGAL), 1)
include $(ROOT)/make/cgaldef.mak
include $(MAKEDIR)/scgaldef.mak
else
include $(ROOT)/make/comdef.mak
endif

BASENAME = player
TARGET0 = $(BASENAME)$(EXEFILESUFFIX)
INSTALLDIR0 = "$(BINDIR)"

ifeq ($(DE), msvc)
ifeq ($(COMPILER_VER), 1400)
MANIFEST_FILE = $(TARGET0).manifest
TARGET1 = $(MANIFEST_FILE)
INSTALLDIR1 = "$(BINDIR)"
else
ifeq ($(COMPILER_VER), 1500)
MANIFEST_FILE = $(TARGET0).manifest
TARGET1 = $(MANIFEST_FILE)
INSTALLDIR1 = "$(BINDIR)"
else
ifeq ($(COMPILER_VER), 1600)
MANIFEST_FILE = $(TARGET0).manifest
TARGET1 = $(MANIFEST_FILE)
INSTALLDIR1 = "$(BINDIR)"
endif
endif
endif

LMAKEDEPENDFLAGS+= -DBOOST_TOKENIZER_JRB070303_HPP_
LMAKEDEPENDFLAGS+= -DBOOST_TRANSFORM_ITERATOR_23022003THW_HPP
LMAKEDEPENDFLAGS+= -DBOOST_FILESYSTEM_PATH_HPP
LMAKEDEPENDFLAGS+= -DBOOST_FILESYSTEM_DIRECTORY_HPP
LMAKEDEPENDFLAGS+= -DBOOST_FILESYSTEM_EXCEPTION_HPP
LMAKEDEPENDFLAGS+= -DBOOST_FILESYSTEM_OPERATIONS_HPP
LMAKEDEPENDFLAGS+= -DBOOST_RANDOM_HPP
LMAKEDEPENDFLAGS+= -DBOOST_RANDOM_CONST_MOD_HPP
LMAKEDEPENDFLAGS+= -DBOOST_RANDOM_LINEAR_CONGRUENTIAL_HPP
LMAKEDEPENDFLAGS+= -DBOOST_RANDOM_UNIFORM_INT_HPP
LMAKEDEPENDFLAGS+= -DPROGRAM_OPTIONS_VP_2003_05_19
LMAKEDEPENDFLAGS+= -D_MACHINE__DEFAULT_TYPES_H
LMAKEDEPENDFLAGS+= -DBOOST_RESULT_OF_HPP
LMAKEDEPENDFLAGS+= -DBOOST_TYPE_TRAITS_HPP
LMAKEDEPENDFLAGS+= -DBOOST_MPL_AND_HPP_INCLUDED
LMAKEDEPENDFLAGS+= -DBOOST_MPL_OR_HPP_INCLUDED
LMAKEDEPENDFLAGS+= -DBOOST_MPL_TAG_HPP_INCLUDED
LMAKEDEPENDFLAGS+= -DBOOST_MPL_EQUAL_TO_HPP_INCLUDED
LMAKEDEPENDFLAGS+= -DBOOST_MPL_LOGICAL_HPP_INCLUDED
LMAKEDEPENDFLAGS+= -DBOOST_MPL_ASSERT_HPP_INCLUDED
LMAKEDEPENDFLAGS+= -DBOOST_MPL_NOT_HPP_INCLUDED
LMAKEDEPENDFLAGS+= -DBOOST_MPL_IF_HPP_INCLUDED
LMAKEDEPENDFLAGS+= -DBOOST_UTILITY_HPP
LMAKEDEPENDFLAGS+= -DBOOST_OPTIONAL_FLC_19NOV2002_HPP
LMAKEDEPENDFLAGS+= -DBOOST_VARIANT_HPP
LMAKEDEPENDFLAGS+= -DCGAL_LAZY_H
LMAKEDEPENDFLAGS+= -DBOOST_FOREACH
LMAKEDEPENDFLAGS+= -DBOOST_UNORDERED_MAP_HPP_INCLUDED
LMAKEDEPENDFLAGS+= -DBOOST_MATH_SPECIAL_FUNCTIONS_HPP
LMAKEDEPENDFLAGS+= -DBOOST_MATH_FPCLASSIFY_HPP
endif

CPPSOURCES = player.cpp
CPPSOURCES+= Player_scene.cpp
CPPSOURCES+= Player_option_parser.cpp

LCPPINCS = -I$(BASEDIR)

# Add BOOST, GMP, MPFR, and Magick include directory:
ifdef BOOST_INC_DIR
LCPPINCS+= -I"$(BOOST_INC_DIR)"
endif

ifdef GMP_INC_DIR
LCPPINCS+= -I"$(GMP_INC_DIR)"
endif

ifdef MPFR_INC_DIR
LCPPINCS+= -I"$(MPFR_INC_DIR)"
endif

ifdef MAGICK_INC_DIR
LCPPINCS+= -I"$(MAGICK_INC_DIR)"
endif

ifeq ($(USE_CGAL), 1)
ifeq ($(USE_CGM), 1)
LCPPDEFS+= -DUSE_CGM
SGAL_INCLUDE_AOS=1
endif

ifeq ($(USE_LTS), 1)
LCPPDEFS+= -DUSE_LTS
SGAL_INCLUDE_AOS=1
endif

ifeq ($(USE_SGM), 1)
LCPPDEFS+= -DUSE_SGM
SGAL_INCLUDE_AOS=1
endif

ifeq ($(USE_AOS), 1)
LCPPDEFS+= -DUSE_AOS
SGAL_INCLUDE_AOS=1
endif

ifeq ($(USE_NEF), 1)
LCPPDEFS+= -DUSE_NEF
endif

ifeq ($(USE_ENV), 1)
LCPPDEFS+= -DUSE_ENV
endif

ifeq ($(USE_EGO), 1)
LCPPDEFS+= -DUSE_EGO
endif

# Include:
ifeq ($(USE_CGM), 1)
LCPPINCS+= -I$(CGM_3_WORKDIR)/include
endif

ifeq ($(USE_LTS), 1)
LCPPINCS+= -I$(LTS_3_WORKDIR)/include
endif

ifeq ($(SGAL_INCLUDE_AOS), 1)
LCPPINCS+= -I$(CGAL_WORKDIR)/Arrangement_on_surface_2/include
endif
ifeq ($(USE_VOS), 1)
LCPPINCS+= -I$(ENVELOPE_VORONOI_2_WORKDIR)/include
endif
ifeq ($(USE_NEF), 1)
# LCPPINCS+= -I$(CGAL_WORKDIR)/Nef_2/include
# LCPPINCS+= -I$(CGAL_WORKDIR)/Nef_S2/include
# LCPPINCS+= -I$(CGAL_WORKDIR)/Nef_3/include
endif
LCPPINCS+= $(CGALCPPINCS)

LCPPDEFS+= -DSCGAL_NT=$(SCGAL_NT)
LCPPDEFS+= -DCGAL_CGM_TRAITS=$(CGAL_CGM_TRAITS)
LCPPDEFS+= -DSCGAL_KERNEL=$(SCGAL_KERNEL)
LCPPDEFS+= -DUSE_CGAL
endif

ifdef CGAL_ARR_TRACING_TRAITS
LCPPDEFS+= -DCGAL_ARR_TRACING_TRAITS
LOBJDIR :=$(LOBJDIR)_arr_tracing_traits
endif

ifdef CGAL_ARR_GEODESIC_ARC_ON_SPHERE_DETAILS
LCPPDEFS+= -DCGAL_ARR_GEODESIC_ARC_ON_SPHERE_DETAILS
LOBJDIR :=$(LOBJDIR)_arr_geodesic_arc_on_sphere_details
endif

ifeq ($(CGAL_ARR_SPHERICAL_GAUSSIAN_MAP_3_DEBUG), 1)
LCPPDEFS+= -DCGAL_ARR_SPHERICAL_GAUSSIAN_MAP_3_DEBUG=1
LOBJDIR :=$(LOBJDIR)_arr_spherical_gaussian_map_3_debug
endif

ifeq ($(CGAL_IDENTIFICATION_XY), $(CGAL_X_MINUS_8_Y_6))
LCPPDEFS+= -DCGAL_IDENTIFICATION_XY=CGAL_X_MINUS_8_Y_6
LOBJDIR :=$(LOBJDIR)_identification_xy_x_minus_8_y_6
else
ifeq ($(CGAL_IDENTIFICATION_XY), $(CGAL_X_MINUS_11_Y_7))
LCPPDEFS+= -DCGAL_IDENTIFICATION_XY=CGAL_X_MINUS_11_Y_7
LOBJDIR :=$(LOBJDIR)_identification_xy_x_minus_11_y_7
endif
endif

ifeq ($(DE), gnu)
LCPPDEFS+= -DGL_GLEXT_PROTOTYPES
endif

ifeq ($(DE), msvc)
LCPPDEFS+=-DBOOST_ALL_DYN_LINK
LCPPOPTS =-GR
LCPPOPTS+= -vmg
LCPPOPTS+= -W3
ifeq ($(COMPILER_VER), 1400)
LCPPOPTS+= -errorReport:prompt
else
ifeq ($(COMPILER_VER), 1500)
LCPPOPTS+= -errorReport:prompt
else
ifeq ($(COMPILER_VER), 1600)
LCPPOPTS+= -errorReport:prompt
endif
endif
endif

# Add BOOST, GMP, MFFR, and Magick lib directories:
ifdef MAGICK_LIB_DIR
LLDOPTS+= -libpath:"$(MAGICK_LIB_DIR)"
endif
ifdef BOOST_LIB_DIR
LLDOPTS+= -libpath:"$(BOOST_LIB_DIR)"
endif
ifdef GMP_LIB_DIR
LLDOPTS+= -libpath:"$(GMP_LIB_DIR)"
endif
ifdef MPFR_LIB_DIR
LLDOPTS+= -libpath:"$(MPFR_LIB_DIR)"
endif

# 
ifeq ($(USE_CGAL), 1)
LLDLIBS+= SCGAL.lib
endif
ifeq ($(USE_EGO), 1)
LLDLIBS+= SEGO.lib
endif
LLDLIBS+= SGAL.lib gl2ps.lib
ifeq ($(DEBUG), 1)
LLDLIBS+= CORE_DB_Magick++_.lib
else
LLDLIBS+= CORE_RL_Magick++_.lib
endif
VC_NUM=80
ifeq ($(COMPILER_VER), 1400)
VC_NUM=90
endif
ifeq ($(COMPILER_VER), 1600)
VC_NUM=100
endif
# LLDLIBS+= boost_system-vc$(VC_NUM)-mt-1_47.lib
# LLDLIBS+= boost_thread-vc$(VC_NUM)-mt-1_47.lib
# LLDLIBS+= boost_program_options-vc$(VC_NUM)-mt-1_47.lib
# LLDLIBS+= boost_filesystem-vc$(VC_NUM)-mt-1_47.lib
ifeq ($(USE_CGAL), 1)
LLDLIBS+= mpfr-vc$(VC_NUM)-mt.lib
LLDLIBS+= gmp-vc$(VC_NUM)-mt.lib
endif
LLDLIBS+= glu32.lib opengl32.lib
LLDLIBS+= $(LDSYSLIBS)
ifeq ($(COMPILER_VER), 1200)
ifeq ($(DEBUG), 1)
LLDLIBS+= stlport_vc6_stldebug_static.lib
else
LLDLIBS+= stlport_vc6_static.lib
endif
endif
ifeq ($(DEBUG), 1)
ifeq ($(COMPILER_VER), 1200)
LLDOPTS+= -nodefaultlib:libcd
LLDOPTS+= -nodefaultlib:libcmtd
endif
ifeq ($(COMPILER_VER), 1310)
LLDOPTS+= -nodefaultlib:libc
LLDOPTS+= -nodefaultlib:msvcrt
endif
else
endif
LIBS = "$(LIBDIR)/SGAL.lib"
LIBS+= "$(LIBDIR)/gl2ps.lib"
ifeq ($(USE_CGAL), 1)
LIBS+= "$(LIBDIR)/SCGAL.lib"
endif
ifeq ($(USE_EGO), 1)
LIBS+= $(LIBDIR)/SEGO.lib
endif
endif

ifeq ($(DE), gnu)
LCPPOPTS+= -Wall
LCPPOPTS+= -frounding-math
# LCPPOPTS+= -pedantic
LLDOPTS = $(CGALLDOPTS)

ifeq ($(USE_CGAL), 1)
LLDLIBS = -lSCGAL
LLDLIBS+= $(CGALLDLIBS)
ifeq ($(USE_QUADRIC), 1)
LLDLIBS+= -lQdX -lNiX -lSoX
endif
endif

ifeq ($(USE_EGO), 1)
LLDLIBS+= -lSEGO
endif

ifeq ($(USE_GMP), 1)
LLDLIBS+= -lgmp -lmpfr -lgmpxx
endif
LLDLIBS+= -lSGAL -lgl2ps
LLDLIBS+= -lMagick++
LLDLIBS+= -lboost_program_options$(BOOST_LIBNAME_SUFFIX)
LLDLIBS+= -lboost_filesystem$(BOOST_LIBNAME_SUFFIX)
LLDLIBS+= -lboost_thread$(BOOST_LIBNAME_SUFFIX)
LLDLIBS+= -lboost_system$(BOOST_LIBNAME_SUFFIX)
LLDLIBS+= -lXxf86vm
LLDLIBS+= -lGLU -lGL
LLDLIBS+= -lXi
# LLDLIBS+= -lXmu
LLDLIBS+= -lX11 -lm

LIBS = $(LIBDIR)/libSGAL.a
LIBS+= $(LIBDIR)/libgl2ps.a
ifeq ($(USE_CGAL), 1)
LIBS+= $(LIBDIR)/libSCGAL.a
endif
ifeq ($(USE_EGO), 1)
LIBS+= $(LIBDIR)/libSEGO.a
endif
endif

LDIRT = parse.output

include $(MAKEDIR)/basedir.mak
include $(MAKEDIR)/comrul.mak
include $(MAKEDIR)/bisoncpp.mak
include $(MAKEDIR)/lexcpp.mak
include $(MAKEDIR)/comp.mak
include $(MAKEDIR)/targlink.mak

seg_cached_lazy_sc_cgal_gmpq_inst:
	$(MAKEF) "SCGAL_NT=$(SCGAL_CGAL_GMPQ_NT)" "SCGAL_KERNEL=$(SCGAL_LAZY_SIMPLE_CARTESIAN_KERNEL)" "CGAL_CGM_TRAITS=$(CGAL_ARR_SEGMENT_TRAITS)" install

# Linker additional command line options:
# /OPT:REF /OPT:ICF

x:
	echo $(LIBDIR)
