{"version":3,"file":"button.es5.js","sources":["../../../src/lib/button/index.ts","../../../src/lib/button/public-api.ts","../../../src/lib/button/button-module.ts","../../../src/lib/button/button.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './button-module';\nexport * from './button';\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {\n  MatAnchor,\n  MatButton,\n  MatMiniFab,\n  MatButtonCssMatStyler,\n  MatFab,\n  MatIconButtonCssMatStyler,\n  MatRaisedButtonCssMatStyler\n} from './button';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    MatCommonModule,\n    A11yModule,\n  ],\n  exports: [\n    MatButton,\n    MatAnchor,\n    MatMiniFab,\n    MatFab,\n    MatCommonModule,\n    MatButtonCssMatStyler,\n    MatRaisedButtonCssMatStyler,\n    MatIconButtonCssMatStyler,\n  ],\n  declarations: [\n    MatButton,\n    MatAnchor,\n    MatMiniFab,\n    MatFab,\n    MatButtonCssMatStyler,\n    MatRaisedButtonCssMatStyler,\n    MatIconButtonCssMatStyler,\n  ],\n})\nexport class MatButtonModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  OnDestroy,\n  Optional,\n  Self,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanDisable,\n  CanDisableRipple,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple\n} from '@angular/material/core';\n\n\n// TODO(kara): Convert attribute selectors to classes when attr maps become available\n\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'button[mat-button], a[mat-button]',\n  host: {'class': 'mat-button'}\n})\nexport class MatButtonCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'button[mat-raised-button], a[mat-raised-button]',\n  host: {'class': 'mat-raised-button'}\n})\nexport class MatRaisedButtonCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'button[mat-icon-button], a[mat-icon-button]',\n  host: {'class': 'mat-icon-button'}\n})\nexport class MatIconButtonCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'button[mat-fab], a[mat-fab]',\n  host: {'class': 'mat-fab'}\n})\nexport class MatFab {\n  constructor(@Self() @Optional() @Inject(forwardRef(() => MatButton)) button: MatButton,\n              @Self() @Optional() @Inject(forwardRef(() => MatAnchor)) anchor: MatAnchor) {\n    // Set the default color palette for the mat-fab components.\n    (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n  }\n}\n\n/**\n * Directive that targets mini-fab buttons and anchors. It's used to apply the `mat-` class\n * to all mini-fab buttons and also is responsible for setting the default color palette.\n * @docs-private\n */\n@Directive({\n  selector: 'button[mat-mini-fab], a[mat-mini-fab]',\n  host: {'class': 'mat-mini-fab'}\n})\nexport class MatMiniFab {\n  constructor(@Self() @Optional() @Inject(forwardRef(() => MatButton)) button: MatButton,\n              @Self() @Optional() @Inject(forwardRef(() => MatAnchor)) anchor: MatAnchor) {\n    // Set the default color palette for the mat-mini-fab components.\n    (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n  }\n}\n\n\n// Boilerplate for applying mixins to MatButton.\n/** @docs-private */\nexport class MatButtonBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nexport const _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n\n\n/**\n * Material design button.\n */\n@Component({\n  moduleId: module.id,\n  selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab]`,\n  exportAs: 'matButton',\n  host: {\n    '[disabled]': 'disabled || null',\n  },\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  inputs: ['disabled', 'disableRipple', 'color'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatButton extends _MatButtonMixinBase\n    implements OnDestroy, CanDisable, CanColor, CanDisableRipple {\n\n  /** Whether the button is round. */\n  _isRoundButton: boolean = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n\n  /** Whether the button is icon button. */\n  _isIconButton: boolean = this._hasHostAttributes('mat-icon-button');\n\n  constructor(elementRef: ElementRef,\n              private _platform: Platform,\n              private _focusMonitor: FocusMonitor) {\n    super(elementRef);\n    this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n\n  /** Focuses the button. */\n  focus(): void {\n    this._getHostElement().focus();\n  }\n\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n\n  /** Gets whether the button has one of the given attributes. */\n  _hasHostAttributes(...attributes: string[]) {\n    // If not on the browser, say that there are none of the attributes present.\n    // Since these only affect how the ripple displays (and ripples only happen on the client),\n    // detecting these attributes isn't necessary when not on the browser.\n    if (!this._platform.isBrowser) {\n      return false;\n    }\n\n    return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n  }\n}\n\n/**\n * Raised Material design button.\n */\n@Component({\n  moduleId: module.id,\n  selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab]`,\n  exportAs: 'matButton, matAnchor',\n  host: {\n    '[attr.tabindex]': 'disabled ? -1 : 0',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '(click)': '_haltDisabledEvents($event)',\n  },\n  inputs: ['disabled', 'disableRipple', 'color'],\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatAnchor extends MatButton {\n  constructor(\n      platform: Platform,\n      focusMonitor: FocusMonitor,\n      elementRef: ElementRef) {\n    super(elementRef, platform, focusMonitor);\n  }\n\n  _haltDisabledEvents(event: Event) {\n    // A disabled button shouldn't apply any actions\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}