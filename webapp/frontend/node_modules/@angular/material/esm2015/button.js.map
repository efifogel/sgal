{"version":3,"file":"button.js","sources":["../../../src/lib/button/index.ts","../../../src/lib/button/public-api.ts","../../../src/lib/button/button-module.ts","../../../src/lib/button/button.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './button-module';\nexport * from './button';\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {\n  MatAnchor,\n  MatButton,\n  MatMiniFab,\n  MatButtonCssMatStyler,\n  MatFab,\n  MatIconButtonCssMatStyler,\n  MatRaisedButtonCssMatStyler\n} from './button';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    MatCommonModule,\n    A11yModule,\n  ],\n  exports: [\n    MatButton,\n    MatAnchor,\n    MatMiniFab,\n    MatFab,\n    MatCommonModule,\n    MatButtonCssMatStyler,\n    MatRaisedButtonCssMatStyler,\n    MatIconButtonCssMatStyler,\n  ],\n  declarations: [\n    MatButton,\n    MatAnchor,\n    MatMiniFab,\n    MatFab,\n    MatButtonCssMatStyler,\n    MatRaisedButtonCssMatStyler,\n    MatIconButtonCssMatStyler,\n  ],\n})\nexport class MatButtonModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  OnDestroy,\n  Optional,\n  Self,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanDisable,\n  CanDisableRipple,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple\n} from '@angular/material/core';\n\n\n// TODO(kara): Convert attribute selectors to classes when attr maps become available\n\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'button[mat-button], a[mat-button]',\n  host: {'class': 'mat-button'}\n})\nexport class MatButtonCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'button[mat-raised-button], a[mat-raised-button]',\n  host: {'class': 'mat-raised-button'}\n})\nexport class MatRaisedButtonCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'button[mat-icon-button], a[mat-icon-button]',\n  host: {'class': 'mat-icon-button'}\n})\nexport class MatIconButtonCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'button[mat-fab], a[mat-fab]',\n  host: {'class': 'mat-fab'}\n})\nexport class MatFab {\n  constructor(@Self() @Optional() @Inject(forwardRef(() => MatButton)) button: MatButton,\n              @Self() @Optional() @Inject(forwardRef(() => MatAnchor)) anchor: MatAnchor) {\n    // Set the default color palette for the mat-fab components.\n    (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n  }\n}\n\n/**\n * Directive that targets mini-fab buttons and anchors. It's used to apply the `mat-` class\n * to all mini-fab buttons and also is responsible for setting the default color palette.\n * @docs-private\n */\n@Directive({\n  selector: 'button[mat-mini-fab], a[mat-mini-fab]',\n  host: {'class': 'mat-mini-fab'}\n})\nexport class MatMiniFab {\n  constructor(@Self() @Optional() @Inject(forwardRef(() => MatButton)) button: MatButton,\n              @Self() @Optional() @Inject(forwardRef(() => MatAnchor)) anchor: MatAnchor) {\n    // Set the default color palette for the mat-mini-fab components.\n    (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n  }\n}\n\n\n// Boilerplate for applying mixins to MatButton.\n/** @docs-private */\nexport class MatButtonBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nexport const _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n\n\n/**\n * Material design button.\n */\n@Component({\n  moduleId: module.id,\n  selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab]`,\n  exportAs: 'matButton',\n  host: {\n    '[disabled]': 'disabled || null',\n  },\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  inputs: ['disabled', 'disableRipple', 'color'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatButton extends _MatButtonMixinBase\n    implements OnDestroy, CanDisable, CanColor, CanDisableRipple {\n\n  /** Whether the button is round. */\n  _isRoundButton: boolean = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n\n  /** Whether the button is icon button. */\n  _isIconButton: boolean = this._hasHostAttributes('mat-icon-button');\n\n  constructor(elementRef: ElementRef,\n              private _platform: Platform,\n              private _focusMonitor: FocusMonitor) {\n    super(elementRef);\n    this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n\n  /** Focuses the button. */\n  focus(): void {\n    this._getHostElement().focus();\n  }\n\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n\n  /** Gets whether the button has one of the given attributes. */\n  _hasHostAttributes(...attributes: string[]) {\n    // If not on the browser, say that there are none of the attributes present.\n    // Since these only affect how the ripple displays (and ripples only happen on the client),\n    // detecting these attributes isn't necessary when not on the browser.\n    if (!this._platform.isBrowser) {\n      return false;\n    }\n\n    return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n  }\n}\n\n/**\n * Raised Material design button.\n */\n@Component({\n  moduleId: module.id,\n  selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab]`,\n  exportAs: 'matButton, matAnchor',\n  host: {\n    '[attr.tabindex]': 'disabled ? -1 : 0',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '(click)': '_haltDisabledEvents($event)',\n  },\n  inputs: ['disabled', 'disableRipple', 'color'],\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatAnchor extends MatButton {\n  constructor(\n      platform: Platform,\n      focusMonitor: FocusMonitor,\n      elementRef: ElementRef) {\n    super(elementRef, platform, focusMonitor);\n  }\n\n  _haltDisabledEvents(event: Event) {\n    // A disabled button shouldn't apply any actions\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n}\n"],"names":[],"mappings":"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"}