{"version":3,"file":"search-box.component.js","sourceRoot":"","sources":["../../../../../src/platform/core/search/search-box/search-box.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ViewChild, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { trigger, state, style, transition, animate, AUTO_STYLE } from '@angular/animations';\n\nimport { TdSearchInputComponent } from '../search-input/search-input.component';\nimport { IControlValueAccessor, mixinControlValueAccessor } from '../../common/common.module';\n\nexport class TdSearchBoxBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) { }\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchBoxMixinBase = mixinControlValueAccessor(TdSearchBoxBase);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdSearchBoxComponent),\n    multi: true,\n  }],\n  selector: 'td-search-box',\n  templateUrl: './search-box.component.html',\n  styleUrls: ['./search-box.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('inputState', [\n      state('0', style({\n        width: '0%',\n        margin: '0px',\n      })),\n      state('1',  style({\n        width: '100%',\n        margin: AUTO_STYLE,\n      })),\n      transition('0 => 1', animate('200ms ease-in')),\n      transition('1 => 0', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchBoxComponent extends _TdSearchBoxMixinBase implements IControlValueAccessor {\n\n  private _searchVisible: boolean = false;\n  @ViewChild(TdSearchInputComponent) _searchInput: TdSearchInputComponent;\n\n  get searchVisible(): boolean {\n    return this._searchVisible;\n  }\n\n  /**\n   * backIcon?: string\n   * The icon used to close the search toggle, only shown when [alwaysVisible] is false.\n   * Defaults to 'search' icon.\n   */\n  @Input('backIcon') backIcon: string = 'search';\n\n  /**\n   * searchIcon?: string\n   * The icon used to open/focus the search toggle.\n   * Defaults to 'search' icon.\n   */\n  @Input('searchIcon') searchIcon: string = 'search';\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input('clearIcon') clearIcon: string = 'cancel';\n  \n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input('showUnderline') showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input('debounce') debounce: number = 400;\n\n  /**\n   * alwaysVisible?: boolean\n   * Sets if the input should always be visible. Defaults to 'false'.\n   */\n  @Input('alwaysVisible') alwaysVisible: boolean = false;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output('search') onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output('clear') onClear: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when the search icon is clicked.\n   */\n  searchClicked(): void {\n    if (this.alwaysVisible || !this._searchVisible) {\n      this._searchInput.focus();\n    }\n    this.toggleVisibility();\n  }\n\n  toggleVisibility(): void {\n    this._searchVisible = !this._searchVisible;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  handleSearchDebounce(value: string): void {\n    this.onSearchDebounce.emit(value);\n  }\n\n  handleSearch(value: string): void {\n    this.onSearch.emit(value);\n  }\n\n  handleClear(): void {\n    this.onClear.emit(undefined);\n  }\n\n}\n"]}