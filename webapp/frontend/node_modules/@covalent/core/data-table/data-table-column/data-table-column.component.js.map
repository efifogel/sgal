{"version":3,"file":"data-table-column.component.js","sourceRoot":"","sources":["../../../../../src/platform/core/data-table/data-table-column/data-table-column.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, EventEmitter, Renderer2, ElementRef, HostBinding, HostListener, ViewChild } from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\nexport interface ITdDataTableSortChangeEvent {\n  order: TdDataTableSortingOrder;\n  name: string;\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'th[td-data-table-column]',\n  styleUrls: ['./data-table-column.component.scss' ],\n  templateUrl: './data-table-column.component.html',\n})\nexport class TdDataTableColumnComponent {\n\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  @ViewChild('columnContent', {read: ElementRef}) _columnContent: ElementRef;\n\n  get projectedWidth(): number {\n    if (this._columnContent && this._columnContent.nativeElement) {\n      return (<HTMLElement>this._columnContent.nativeElement).getBoundingClientRect().width;\n    }\n    return 100;\n  }\n\n  /**\n   * name?: string\n   * Sets unique column [name] for [sortable] events.\n   */\n  @Input('name') name: string = '';\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable') sortable: boolean = false;\n\n  /**\n   * active?: boolean\n   * Sets column to active state when 'true'.\n   * Defaults to 'false'\n   */\n  @Input('active') active: boolean = false;\n\n  /**\n   * numeric?: boolean\n   * Makes column follow the numeric data-table specs and sort icon.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of column.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ?\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\n                        new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  @HostBinding('class.mat-clickable')\n  get bindClickable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-sortable')\n  get bingSortable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-active')\n  get bindActive(): boolean {\n    return this.active;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column');\n  }\n\n  /**\n   * Listening to click event on host to throw a sort event\n   */\n  @HostListener('click', ['event'])\n  handleClick(): void {\n    if (this.sortable) {\n      this.onSortChange.emit({name: this.name, order: this._sortOrder});\n    }\n  }\n\n  isAscending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Ascending;\n  }\n\n  isDescending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Descending;\n  }\n\n}\n"]}