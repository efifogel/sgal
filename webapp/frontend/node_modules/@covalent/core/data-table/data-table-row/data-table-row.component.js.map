{"version":3,"file":"data-table-row.component.js","sourceRoot":"","sources":["../../../../../src/platform/core/data-table/data-table-row/data-table-row.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,SAAS,EAAE,UAAU,EAA8B,YAAY,EAAE,MAAM,eAAe,CAAC;AAW1H;IAEE,uCAAsB,WAAuB,EAAY,SAAoB;QAAvD,gBAAW,GAAX,WAAW,CAAY;QAAY,cAAS,GAAT,SAAS,CAAW;QAC3E,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,0BAA0B,CAAC,CAAC;IACtF,CAAC;IAJU,6BAA6B;QANzC,SAAS,CAAC;YACT,8BAA8B;YAC9B,QAAQ,EAAE,8BAA8B;YACxC,SAAS,EAAE,CAAC,iCAAiC,CAAE;YAC/C,WAAW,EAAE,iCAAiC;SAC/C,CAAC;iDAGmC,UAAU,EAAuB,SAAS;OAFlE,6BAA6B,CAMzC;IAAD,oCAAC;CAAA,AAND,IAMC;SANY,6BAA6B;AAc1C;IAyBE,iCAAoB,WAAuB,EAAU,SAAoB;QAArD,gBAAW,GAAX,WAAW,CAAY;QAAU,cAAS,GAAT,SAAS,CAAW;QAvBjE,cAAS,GAAY,KAAK,CAAC;QAwBjC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,mBAAmB,CAAC,CAAC;IAC/E,CAAC;IAtBD,sBAAI,6CAAQ;aAQZ;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAVD,UAAa,QAAiB;YAC5B,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YACzE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAC5E,CAAC;YACD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,CAAC;;;OAAA;IAKD,sBAAI,2CAAM;aAAV;YACE,IAAI,MAAM,GAAW,EAAE,CAAC;YACxB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;gBACnC,MAAM,GAAiB,IAAI,CAAC,WAAW,CAAC,aAAc,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC;YACxF,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD;;OAEG;IAEH,+CAAa,GAAb;QACE,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,uCAAK,GAAL;QACE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACzC,CAAC;IAlCD;QADC,KAAK,CAAC,UAAU,CAAC;;;2DAQjB;IAqBD;QADC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;gEAGjC;IAnCU,uBAAuB;QANnC,SAAS,CAAC;YACT,8BAA8B;YAC9B,QAAQ,EAAE,uBAAuB;YACjC,SAAS,EAAE,CAAC,iCAAiC,CAAE;YAC/C,WAAW,EAAE,iCAAiC;SAC/C,CAAC;iDA0BiC,UAAU,EAAqB,SAAS;OAzB9D,uBAAuB,CAyCnC;IAAD,8BAAC;CAAA,AAzCD,IAyCC;SAzCY,uBAAuB","sourcesContent":["import { Component, Input, Output, Renderer2, ElementRef, ContentChildren, QueryList, HostListener } from '@angular/core';\n\nimport { TdDataTableCellComponent } from '../data-table-cell/data-table-cell.component';\nimport { TdDataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-column-row]',\n  styleUrls: ['./data-table-row.component.scss' ],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableColumnRowComponent {\n\n  constructor(protected _elementRef: ElementRef, protected _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column-row');\n  }\n\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-row]',\n  styleUrls: ['./data-table-row.component.scss' ],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableRowComponent {\n\n  private _selected: boolean = false;\n\n  @Input('selected')\n  set selected(selected: boolean) {\n    if (selected) {\n      this._renderer.addClass(this._elementRef.nativeElement, 'td-selected');\n    } else {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'td-selected');\n    }\n    this._selected = selected;\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  get height(): number {\n    let height: number = 48;\n    if (this._elementRef.nativeElement) {\n      height = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return height;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-row');\n  }\n\n  /**\n   * Listening to click event to explicitly focus the row element.\n   */\n  @HostListener('click', ['$event'])\n  clickListener(): void {\n    this.focus();\n  }\n\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n}\n"]}