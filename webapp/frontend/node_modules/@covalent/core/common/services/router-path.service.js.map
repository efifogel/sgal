{"version":3,"file":"router-path.service.js","sourceRoot":"","sources":["../../../../../src/platform/core/common/services/router-path.service.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAE3D,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAGnD;IAEE,2BAAoB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QACjC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CACtB,MAAM,CAAC,UAAC,CAAM,IAAK,OAAA,CAAC,YAAY,gBAAgB,EAA7B,CAA6B,CAAC,EACjD,QAAQ,EAAE,CACX,CAAC,SAAS,CAAC,UAAC,CAAQ;YACnB,mBAAiB,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;0BATU,iBAAiB;IAW5B;;;MAGE;IACF,4CAAgB,GAAhB;QACE,MAAM,CAAC,mBAAiB,CAAC,cAAc,CAAC;IAC1C,CAAC;IAhBY,gCAAc,GAAW,GAAG,CAAC;IAD/B,iBAAiB;QAD7B,UAAU,EAAE;iDAGkB,MAAM;OAFxB,iBAAiB,CAkB7B;IAAD,wBAAC;;CAAA,AAlBD,IAkBC;SAlBY,iBAAiB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, RoutesRecognized } from '@angular/router';\n\nimport { filter } from 'rxjs/operators/filter';\nimport { pairwise } from 'rxjs/operators/pairwise';\n\n@Injectable()\nexport class RouterPathService {\nprivate static _previousRoute: string = '/';\n  constructor(private _router: Router) {\n    this._router.events.pipe(\n      filter((e: any) => e instanceof RoutesRecognized),\n      pairwise(),\n    ).subscribe((e: any[]) => {\n      RouterPathService._previousRoute = e[0].urlAfterRedirects;\n    });\n  }\n\n  /*\n  * Utility function to get the route the user previously went to\n  * good for use in a \"back button\"\n  */\n  getPreviousRoute(): string {\n    return RouterPathService._previousRoute;\n  }\n}\n"]}