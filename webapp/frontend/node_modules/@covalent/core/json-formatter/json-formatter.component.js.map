{"version":3,"file":"json-formatter.component.js","sourceRoot":"","sources":["../../../../src/platform/core/json-formatter/json-formatter.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,uBAAuB,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACvG,OAAO,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAC;AACxC,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAW9D;IAgFE,kCAAoB,kBAAqC,EACzB,IAAS;QADrB,uBAAkB,GAAlB,kBAAkB,CAAmB;QACzB,SAAI,GAAJ,IAAI,CAAK;QA7DjC,UAAK,GAAY,KAAK,CAAC;QACvB,gBAAW,GAAW,CAAC,CAAC;IA6DhC,CAAC;iCAlFU,wBAAwB;IA4BnC,sBAAI,gDAAU;aAOd;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;QAdD;;;WAGG;aAEH,UAAe,UAAkB;YAC/B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAClC,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;YAC1D,CAAC;YACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,KAAK,GAAG,UAAU,GAAG,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAKD,sBAAI,0CAAI;aAAR;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAOD,sBAAI,yCAAG;aAGP;YACE,IAAI,OAAO,GAAW,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,0BAAwB,CAAC,cAAc,GAAG,GAAG,GAAG,EAAE,CAAC;YACzG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,0BAAwB,CAAC,cAAc,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3G,CAAC;QAXD;;;WAGG;aAEH,UAAQ,GAAW;YACjB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAClB,CAAC;;;OAAA;IAWD,sBAAI,0CAAI;aAIR;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;QAXD;;;WAGG;aAEH,UAAS,IAAS;YAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;;;OAAA;IAKD,sBAAI,8CAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAI,2CAAK;aAAT;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC;YACjC,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;;;OAAA;IAMD;;OAEG;IACH,0CAAO,GAAP;QACE,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,yCAAM,GAAN;QACE,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;IAC3B,CAAC;IAED,2CAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,QAAQ,CAAC;IAC/C,CAAC;IAED,0CAAO,GAAP;QACE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,8CAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;IACrD,CAAC;IAED;;OAEG;IACH,2CAAQ,GAAR,UAAS,KAAU;QACjB,IAAI,IAAI,GAAW,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvC,EAAE,CAAC,CAAC,IAAI,KAAK,WAAW,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAC3B,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC7B,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;YAC/B,iCAAiC;YACjC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE;iBAClB,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;iBACtB,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;QAC1D,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED;;;OAGG;IACH,0CAAO,GAAP,UAAQ,MAAW;QACjB,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC/B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,MAAM,CAAC;YAChB,CAAC;YACD,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,QAAQ,CAAC;YAClB,CAAC;YACD,IAAI,IAAI,GAAS,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;YAClC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,eAAe,CAAC,CAAC,CAAC;gBAC7D,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;oBAClC,MAAM,CAAC,MAAM,CAAC;gBAChB,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,OAAO,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,gDAAa,GAAb;QACE,IAAI,MAAM,GAAQ,IAAI,CAAC,KAAK,CAAC;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC;QACD,IAAI,aAAa,GAAW,oBAAoB,CAAC;QACjD,IAAI,OAAO,GAAoB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;QACrF,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED;;OAEG;IACH,6CAAU,GAAV;QAAA,iBAsBC;QArBC,IAAI,WAAqB,CAAC;QAC1B,IAAI,SAAS,GAAW,IAAI,CAAC;QAC7B,IAAI,OAAO,GAAW,IAAI,CAAC;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,YAAY,GAAU,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,0BAAwB,CAAC,aAAa,CAAC,CAAC;YACtF,WAAW,GAAG,YAAY,CAAC,GAAG,CAAC,UAAC,GAAQ;gBACtC,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;YACH,SAAS,GAAG,GAAG,CAAC;YAChB,OAAO,GAAG,GAAG,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,WAAW,GAAa,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,0BAAwB,CAAC,aAAa,CAAC,CAAC;YAC5F,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,UAAC,GAAW;gBACxC,MAAM,CAAC,GAAG,GAAG,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACL,CAAC;QACD,IAAI,aAAa,GAAY,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,QAAQ,GAAW,WAAW,CAAC,MAAM,IAAI,0BAAwB,CAAC,aAAa;YAC5D,aAAa,CAAC,MAAM,GAAG,0BAAwB,CAAC,yBAAyB,GAAG,GAAG,GAAG,EAAE,CAAC;QAC5G,MAAM,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,0BAAwB,CAAC,yBAAyB,CAAC;YAC1F,QAAQ,GAAG,OAAO,CAAC;IAC5B,CAAC;IAEO,gDAAa,GAArB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC3B,CAAC;QACH,CAAC;IACH,CAAC;IA5MD;;OAEG;IACY,uCAAc,GAAW,EAAE,CAAC;IAE3C;;OAEG;IACY,kDAAyB,GAAW,EAAE,CAAC;IAEtD;;OAEG;IACY,sCAAa,GAAW,CAAC,CAAC;IAazC;QADC,KAAK,CAAC,YAAY,CAAC;;;8DAOnB;IAcD;QADC,KAAK,CAAC,KAAK,CAAC;;;uDAGZ;IAWD;QADC,KAAK,CAAC,MAAM,CAAC;;;wDAIb;IAhEU,wBAAwB;QATpC,SAAS,CAAC;YACT,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE,CAAC,iCAAiC,CAAE;YAC/C,WAAW,EAAE,iCAAiC;YAC9C,UAAU,EAAE;gBACV,mBAAmB,EAAE;aACtB;SACF,CAAC;QAkFa,mBAAA,QAAQ,EAAE,CAAA;iDADiB,iBAAiB;YACnB,GAAG;OAjF9B,wBAAwB,CAgNpC;IAAD,+BAAC;;CAAA,AAhND,IAgNC;SAhNY,wBAAwB","sourcesContent":["import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\nimport { Dir } from '@angular/cdk/bidi';\nimport { TdCollapseAnimation } from '../common/common.module';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-json-formatter',\n  styleUrls: ['./json-formatter.component.scss' ],\n  templateUrl: './json-formatter.component.html',\n  animations: [\n    TdCollapseAnimation(),\n  ],\n})\nexport class TdJsonFormatterComponent {\n\n  /**\n   * Max length for property names. Any names bigger than this get trunctated.\n   */\n  private static KEY_MAX_LENGTH: number = 30;\n\n  /**\n   * Max length for preview string. Any names bigger than this get trunctated.\n   */\n  private static PREVIEW_STRING_MAX_LENGTH: number = 80;\n\n  /**\n   * Max tooltip preview elements.\n   */\n  private static PREVIEW_LIMIT: number = 5;\n\n  private _key: string;\n  private _data: any;\n  private _children: string[];\n  private _open: boolean = false;\n  private _levelsOpen: number = 0;\n\n  /**\n   * levelsOpen?: number\n   * Levels opened by default when JS object is formatted and rendered.\n   */\n  @Input('levelsOpen')\n  set levelsOpen(levelsOpen: number) {\n    if (!Number.isInteger(levelsOpen)) {\n      throw new Error('[levelsOpen] needs to be an integer.');\n    }\n    this._levelsOpen = levelsOpen;\n    this._open = levelsOpen > 0;\n  }\n  get levelsOpen(): number {\n    return this._levelsOpen;\n  }\n\n  get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * key?: string\n   * Tag to be displayed next to formatted object.\n   */\n  @Input('key')\n  set key(key: string) {\n    this._key = key;\n  }\n  get key(): string {\n    let elipsis: string = this._key && this._key.length > TdJsonFormatterComponent.KEY_MAX_LENGTH ? '…' : '';\n    return this._key ? this._key.substring(0, TdJsonFormatterComponent.KEY_MAX_LENGTH) + elipsis : this._key;\n  }\n\n  /**\n   * data: any\n   * JS object to be formatted.\n   */\n  @Input('data')\n  set data(data: any) {\n    this._data = data;\n    this.parseChildren();\n  }\n  get data(): any {\n    return this._data;\n  }\n\n  get children(): string[] {\n    return this._children;\n  }\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Dir) {\n  }\n\n  /**\n   * Refreshes json-formatter and rerenders [data]\n   */\n  refresh(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Toggles collapse/expanded state of component.\n   */\n  toggle(): void {\n    this._open = !this._open;\n  }\n\n  isObject(): boolean {\n    return this.getType(this._data) === 'object';\n  }\n\n  isArray(): boolean {\n    return Array.isArray(this._data);\n  }\n\n  hasChildren(): boolean {\n    return this._children && this._children.length > 0;\n  }\n\n  /**\n   * Gets parsed value depending on value type.\n   */\n  getValue(value: any): string {\n    let type: string = this.getType(value);\n    if (type === 'undefined' || (type === 'null')) {\n      return type;\n    } else if (type === 'date') {\n      value = new Date(value).toString();\n    } else if (type === 'string') {\n      value = '\"' + value + '\"';\n    } else if (type === 'function') {\n      // Remove content of the function\n      return value.toString()\n          .replace(/[\\r\\n]/g, '')\n          .replace(/\\{.*\\}/, '') + '{…}';\n    } else if (Array.isArray(value)) {\n      return this.getObjectName() + ' [' + value.length + ']';\n    }\n    return value;\n  }\n\n  /**\n   * Gets type of object.\n   * returns 'null' if object is null and 'date' if value is object and can be parsed to a date.\n   */\n  getType(object: any): string {\n    if (typeof object === 'object') {\n      if (!object) {\n        return 'null';\n      }\n      if (Array.isArray(object)) {\n        return 'object';\n      }\n      let date: Date = new Date(object);\n      if (Object.prototype.toString.call(date) === '[object Date]') {\n        if (!Number.isNaN(date.getTime())) {\n          return 'date';\n        }\n      }\n    }\n    return typeof object;\n  }\n\n  /**\n   * Generates string representation depending if its an object or function.\n   * see: http://stackoverflow.com/a/332429\n   */\n  getObjectName(): string {\n    let object: any = this._data;\n    if (this.isObject() && !object.constructor) {\n        return 'Object';\n    }\n    let funcNameRegex: RegExp = /function (.{1,})\\(/;\n    let results: RegExpExecArray = (funcNameRegex).exec((object).constructor.toString());\n    if (results && results.length > 1) {\n      return results[1];\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Creates preview of nodes children to render in tooltip depending if its an array or an object.\n   */\n  getPreview(): string {\n    let previewData: string[];\n    let startChar: string = '{ ';\n    let endChar: string = ' }';\n    if (this.isArray()) {\n      let previewArray: any[] = this._data.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewArray.map((obj: any) => {\n        return this.getValue(obj);\n      });\n      startChar = '[';\n      endChar = ']';\n    } else {\n      let previewKeys: string[] = this._children.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewKeys.map((key: string) => {\n        return key + ': ' + this.getValue(this._data[key]);\n      });\n    }\n    let previewString: string =  previewData.join(', ');\n    let ellipsis: string = previewData.length >= TdJsonFormatterComponent.PREVIEW_LIMIT ||\n                           previewString.length > TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH ? '…' : '';\n    return startChar + previewString.substring(0, TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH) +\n           ellipsis + endChar;\n  }\n\n  private parseChildren(): void {\n    if (this.isObject()) {\n      this._children = [];\n      for (let key in this._data) {\n        this._children.push(key);\n      }\n    }\n  }\n\n}\n"]}