{"version":3,"file":"file-drop.directive.js","sourceRoot":"","sources":["../../../../../src/platform/core/file/directives/file-drop.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '../../common/common.module';\n\nexport class TdFileDropBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\n\n@Directive({\n  selector: '[tdFileDrop]',\n  inputs: ['disabled'],\n})\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\n\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileDrop?: function\n   * Event emitted when a file or files are dropped in host element after being validated.\n   * Emits a [FileList | File] object.\n   */\n  @Output('fileDrop') onFileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  /**\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\n   */\n  @HostBinding('attr.disabled')\n  get disabledBinding(): string {\n    return this.disabled ? '' : undefined;\n  }\n\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\n    super();\n  }\n\n  /**\n   * Listens to 'drop' host event to get validated transfer items.\n   * Emits the 'onFileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Stops event propagation and default action from browser for 'drop' event.\n   */\n  @HostListener('drop', ['$event'])\n  onDrop(event: Event): void {\n    if (!this.disabled) {\n      let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n      let files: FileList = transfer.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.onFileDrop.emit(value);\n      }\n    }\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragover' host event to validate transfer items.\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\n   * Stops event propagation and default action from browser for 'dragover' event.\n   */\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: Event): void {\n    let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n    transfer.dropEffect = this._typeCheck(transfer.types);\n    if (this.disabled || (!this._multiple &&\n      ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {\n      transfer.dropEffect = 'none';\n    } else {\n      transfer.dropEffect = 'copy';\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\n   * Stops event propagation and default action from browser for 'dragenter' event.\n   */\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(event: Event): void {\n    if (!this.disabled) {\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\n   * Stops event propagation and default action from browser for 'dragleave' event.\n   */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: Event): void {\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Validates if the transfer item types are 'Files'.\n   */\n  private _typeCheck(types: string[] | DOMStringList): string {\n    let dropEffect: string = 'none';\n    if (types) {\n      if (((<any>types).contains && (<any>types).contains('Files'))\n      || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {\n        dropEffect = 'copy';\n      }\n    }\n    return dropEffect;\n  }\n\n  private _stopEvent(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n"]}