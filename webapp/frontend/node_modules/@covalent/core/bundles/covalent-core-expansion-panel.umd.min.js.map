{
  "version": 3,
  "file": "covalent-core-expansion-panel.umd.min.js",
  "sources": [
    "ng://@covalent/core/expansion-panel/expansion-panel/expansion-panel.component.ts",
    "ng://@covalent/core/expansion-panel/expansion-panel/expansion-panel-group.component.ts"
  ],
  "sourcesContent": [
    "import { Component, Directive, Input, Output, TemplateRef, ViewContainerRef, ContentChild,\n         ElementRef, Renderer2 } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  TdCollapseAnimation,\n  ICanDisable,\n  mixinDisabled,\n  ICanDisableRipple,\n  mixinDisableRipple,\n  TdRotateAnimation,\n} from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-expansion-panel-header]ng-template',\n})\nexport class TdExpansionPanelHeaderDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-label]ng-template',\n})\nexport class TdExpansionPanelLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-sublabel]ng-template',\n})\nexport class TdExpansionPanelSublabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Component({\n  selector: 'td-expansion-summary',\n  template: '<ng-content></ng-content>',\n})\nexport class TdExpansionPanelSummaryComponent {}\n\nexport class TdExpansionPanelBase {}\n\n/* tslint:disable-next-line */\nexport const _TdExpansionPanelMixinBase = mixinDisableRipple(mixinDisabled(TdExpansionPanelBase));\n\n@Component({\n  selector: 'td-expansion-panel',\n  styles: [`:host {\n  display: block; }\n  :host .td-expansion-panel-header {\n    position: relative;\n    outline: none; }\n    :host .td-expansion-panel-header:focus:not(.mat-disabled), :host .td-expansion-panel-header:hover:not(.mat-disabled) {\n      cursor: pointer; }\n    :host .td-expansion-panel-header .td-expansion-panel-header-content {\n      height: 48px;\n      padding: 0 24px;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      -webkit-box-pack: start;\n          -ms-flex-pack: start;\n              justify-content: start;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -ms-flex-line-pack: center;\n          align-content: center;\n      max-width: 100%; }\n      :host .td-expansion-panel-header .td-expansion-panel-header-content .td-expansion-label,\n      :host .td-expansion-panel-header .td-expansion-panel-header-content .td-expansion-sublabel {\n        -webkit-box-flex: 1;\n            -ms-flex: 1;\n                flex: 1; }\n  :host .td-expansion-content.ng-animating,\n  :host .td-expansion-summary.ng-animating {\n    overflow: hidden; }\n\n.td-expansion-label,\n.td-expansion-sublabel {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-right: 16px; }\n  ::ng-deep [dir='rtl'] .td-expansion-label, ::ng-deep [dir='rtl']\n  .td-expansion-sublabel {\n    margin-left: 16px;\n    margin-right: inherit; }\n`],\n  template: `<div class=\"td-expansion-panel-header\"\n      [class.mat-disabled]=\"disabled\"\n      matRipple\n      [matRippleDisabled]=\"disabled || disableRipple\"\n      [tabIndex]=\"disabled? -1 : 0\"\n      (keydown.enter)=\"clickEvent()\"\n      (click)=\"clickEvent()\">\n  <ng-template [cdkPortalHost]=\"expansionPanelHeader\"></ng-template>\n  <div class=\"td-expansion-panel-header-content\"\n        [class.mat-disabled]=\"disabled\"\n        *ngIf=\"!expansionPanelHeader\">\n    <div *ngIf=\"label || expansionPanelLabel\" class=\"td-expansion-label\">\n      <ng-template [cdkPortalHost]=\"expansionPanelLabel\"></ng-template>\n      <ng-template [ngIf]=\"!expansionPanelLabel\">{{label}}</ng-template>\n    </div>\n    <div *ngIf=\"sublabel || expansionPanelSublabel\" class=\"td-expansion-sublabel\">\n      <ng-template [cdkPortalHost]=\"expansionPanelSublabel\"></ng-template>\n      <ng-template [ngIf]=\"!expansionPanelSublabel\">{{sublabel}}</ng-template>\n    </div>\n    <mat-icon class=\"td-expand-icon\" *ngIf=\"!disabled\" [@tdRotate]=\"expand\">keyboard_arrow_down</mat-icon>\n  </div>\n</div>\n<div class=\"td-expansion-content\"\n      [@tdCollapse]=\"!expand\">\n  <ng-content></ng-content>\n</div>\n<div class=\"td-expansion-summary\"\n      [@tdCollapse]=\"expand\">\n  <ng-content select=\"td-expansion-summary\"></ng-content>\n</div>\n`,\n  inputs: ['disabled', 'disableRipple'],\n  animations: [\n    TdCollapseAnimation(),\n    TdRotateAnimation({ anchor: 'tdRotate' }),\n  ],\n})\nexport class TdExpansionPanelComponent extends _TdExpansionPanelMixinBase implements ICanDisable, ICanDisableRipple {\n\n  private _expand: boolean = false;\n\n  @ContentChild(TdExpansionPanelHeaderDirective) expansionPanelHeader: TdExpansionPanelHeaderDirective;\n  @ContentChild(TdExpansionPanelLabelDirective) expansionPanelLabel: TdExpansionPanelLabelDirective;\n  @ContentChild(TdExpansionPanelSublabelDirective) expansionPanelSublabel: TdExpansionPanelSublabelDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdExpansionPanelComponent] header.\n   * Defaults to 'Click to expand'\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdExpansionPanelComponent] header.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * expand?: boolean\n   * Toggles [TdExpansionPanelComponent] between expand/collapse.\n   */\n  @Input('expand')\n  set expand(expand: boolean) {\n    this._setExpand(coerceBooleanProperty(expand));\n  }\n  get expand(): boolean {\n    return this._expand;\n  }\n\n  /**\n   * expanded?: function\n   * Event emitted when [TdExpansionPanelComponent] is expanded.\n   */\n  @Output() expanded: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * collapsed?: function\n   * Event emitted when [TdExpansionPanelComponent] is collapsed.\n   */\n  @Output() collapsed: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    super();\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel');\n  }\n\n  /**\n   * Method executed when [TdExpansionPanelComponent] is clicked.\n   */\n  clickEvent(): void {\n    this._setExpand(!this._expand);\n  }\n\n  /**\n   * Toggle expand state of [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setExpand(!this._expand);\n  }\n\n  /**\n   * Opens [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setExpand(true);\n  }\n\n  /**\n   * Closes [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setExpand(false);\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._expand) {\n      this._expand = false;\n      this._onCollapsed();\n    }\n  }\n\n  /**\n   * Method to change expand state internally and emit the [onExpanded] event if 'true' or [onCollapsed]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   */\n  private _setExpand(newExpand: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._expand !== newExpand) {\n      this._expand = newExpand;\n      if (newExpand) {\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onExpanded();\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onCollapsed();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onExpanded(): void {\n    this.expanded.emit(undefined);\n  }\n\n  private _onCollapsed(): void {\n    this.collapsed.emit(undefined);\n  }\n}\n",
    "import { Component, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'td-expansion-panel-group',\n  styles: [``],\n  template: `<ng-content></ng-content>`,\n})\nexport class TdExpansionPanelGroupComponent {\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel-group');\n  }\n\n}\n"
  ],
  "names": [
    "_super",
    "call",
    "this",
    "templateRef",
    "viewContainerRef",
    "__extends",
    "TdExpansionPanelHeaderDirective",
    "TemplatePortalDirective",
    "ctorParameters",
    "TdExpansionPanelLabelDirective",
    "selector",
    "type",
    "TemplateRef",
    "ViewContainerRef",
    "TdExpansionPanelSublabelDirective",
    "decorators",
    "Directive",
    "args",
    "TdExpansionPanelSummaryComponent",
    "Component",
    "template",
    "TdExpansionPanelBase",
    "_TdExpansionPanelMixinBase",
    "mixinDisableRipple",
    "mixinDisabled",
    "TdExpansionPanelComponent",
    "_this",
    "_renderer",
    "expanded",
    "EventEmitter",
    "collapsed",
    "addClass",
    "_elementRef",
    "nativeElement",
    "get",
    "_expand",
    "set",
    "expand",
    "_setExpand",
    "coerceBooleanProperty",
    "prototype",
    "toggle",
    "close",
    "onDisabledChange",
    "v",
    "newExpand",
    "disabled",
    "Output",
    "TD_EXPANSION_PANEL",
    "TdExpansionPanelGroupComponent",
    "CovalentExpansionPanelModule",
    "NgModule",
    "imports",
    "CommonModule",
    "MatRippleModule",
    "MatIconModule"
  ],
  "mappings": "ylCAAA,OAAAA,EAAAC,KAAAC,KAAAC,EAAAC,IAAAF,YAeAG,EAAAC,EAAAN,MAYAO,EAAAA,sHAGAD,EAAAE,eAAA,WAAA,wDALA,IAAAC,EAAA,SAAAT,GAzBA,SAAAS,EAAAN,EAAAC,wCA0BAC,EAAAI,EAAAT,KADA,mEAYcU,SAAd,gFAJAC,KAACC,EAAAA,cACDD,KAAAE,EAAAA,sCAYA,SAAAC,EAAAX,EAAAC,iCAJA,cAAAU,GACAP,EAAAA,yBACAO,EAAAC,aACAJ,KAAAK,EAAAA,UAAAC,+DAGAH,EAAAN,eAAA,WAAA,6BAGaG,KAAbE,EAAAA,4DA2IAK,EAAAH,aAFAJ,KAAAQ,EAAAA,UAAAF,OACAP,SAAA,uBA5CAU,SAAA,sEAmCA,IAAAC,EAAmE,+BAAxB,GAW3CC,EAAAC,EAAAA,mBAAAC,EAAAA,cAAAH,IACAI,EAAA,SAAAzB,mBAvBM,IAAN0B,EAAA1B,EAAAC,KAAAC,OAAAA,KA8BA,OA7BIwB,EAAJC,UAAAA,+BAIAD,EAAAE,SAAA,IAAAC,EAAAA,aAuBAH,EAAYI,UAAZ,IAAAD,EAAAA,aACIH,EAAJC,UAAoBI,SAApBL,EAAmCM,YAAnCC,cAAA,sBACAP,4DAMAQ,IAAA,WACA,OAAehC,KAAfiC,SAQIC,IAAJ,SAAAC,GACAnC,KAAAoC,WAAAC,EAAAA,sBAAAF,uGAcAZ,EAAAe,UAAAC,OAAA,WACA,OAAAvC,KAAAoC,YAAApC,KAAAiC,sCAOA,OAAqBjC,KAArBoC,YAAA,IAOAb,EAAsBe,UAAUE,MAAhC,WACA,OAAAxC,KAAYoC,YAAZ,IAMAb,EAAAe,UAAAG,iBAAA,SAAAC,GACAA,GAAA1C,KAAAiC,gDAOUV,EAAVe,UAAAF,WAAA,SAAAO,GACI,OAAI3C,KAAR4C,8BA/MC5C,KAADiC,QAAAU,EACEA,GACA3C,KAAFyB,UAAAI,SAAA7B,KAAA8B,YAAAC,cAAA,gRAyIA,6kHAvFAH,YAAAnB,KAAAoC,EAAAA,uXAkCA,IAAAC,GACAC,EACAxB,EACAnB,SA7IA4C,EAAA,WAkJA,oBAlJA,GAoJAA,EAAAnC,aAOAJ,KAAAwC,EAAAA,SAAGlC,OAMHmC,SAMAC,EAAAA,aAYAC,EAAAA,gBAMAC,EAAAA,wDC1LAP,OASAE,EAAA1C,eAAA,WAAA"
}
