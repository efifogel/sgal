{
  "version": 3,
  "file": "covalent-core.umd.js",
  "sources": [
    "ng://@covalent/core/media/directives/media-toggle.directive.ts",
    "ng://@covalent/core/media/services/media.service.ts",
    "ng://@covalent/core/loading/loading.module.ts",
    "ng://@covalent/core/loading/directives/loading.directive.ts",
    "ng://@covalent/core/loading/services/loading.service.ts",
    "ng://@covalent/core/loading/services/loading.factory.ts",
    "ng://@covalent/core/loading/loading.component.ts",
    "ng://@covalent/core/layout/layout.module.ts",
    "ng://@covalent/core/layout/navigation-drawer/navigation-drawer.component.ts",
    "ng://@covalent/core/layout/layout-footer/layout-footer.component.ts",
    "ng://@covalent/core/layout/layout-manage-list/layout-manage-list.directives.ts",
    "ng://@covalent/core/layout/layout-manage-list/layout-manage-list.component.ts",
    "ng://@covalent/core/layout/layout-card-over/layout-card-over.component.ts",
    "ng://@covalent/core/layout/layout-nav-list/layout-nav-list.directives.ts",
    "ng://@covalent/core/layout/layout-nav-list/layout-nav-list.component.ts",
    "ng://@covalent/core/layout/layout-nav/layout-nav.component.ts",
    "ng://@covalent/core/layout/layout.directives.ts",
    "ng://@covalent/core/layout/layout-toggle.class.ts",
    "ng://@covalent/core/layout/layout.component.ts",
    "ng://@covalent/core/json-formatter/json-formatter.module.ts",
    "ng://@covalent/core/json-formatter/json-formatter.component.ts",
    "ng://@covalent/core/file/file.module.ts",
    "ng://@covalent/core/file/services/file.service.ts",
    "ng://@covalent/core/file/file-upload/file-upload.component.ts",
    "ng://@covalent/core/file/file-input/file-input.component.ts",
    "ng://@covalent/core/file/directives/file-drop.directive.ts",
    "ng://@covalent/core/file/directives/file-select.directive.ts",
    "ng://@covalent/core/expansion-panel/expansion-panel.module.ts",
    "ng://@covalent/core/expansion-panel/expansion-panel-group.component.ts",
    "ng://@covalent/core/expansion-panel/expansion-panel.component.ts",
    "ng://@covalent/core/dialogs/dialogs.module.ts",
    "ng://@covalent/core/dialogs/services/dialog.service.ts",
    "ng://@covalent/core/dialogs/prompt-dialog/prompt-dialog.component.ts",
    "ng://@covalent/core/dialogs/confirm-dialog/confirm-dialog.component.ts",
    "ng://@covalent/core/dialogs/alert-dialog/alert-dialog.component.ts",
    "ng://@covalent/core/dialogs/dialog.component.ts",
    "ng://@covalent/core/data-table/data-table.module.ts",
    "ng://@covalent/core/data-table/services/data-table.service.ts",
    "ng://@covalent/core/data-table/data-table-table/data-table-table.component.ts",
    "ng://@covalent/core/data-table/data-table-cell/data-table-cell.component.ts",
    "ng://@covalent/core/data-table/data-table-column/data-table-column.component.ts",
    "ng://@covalent/core/data-table/data-table.component.ts",
    "ng://@covalent/core/data-table/directives/data-table-template.directive.ts",
    "ng://@covalent/core/data-table/data-table-row/data-table-row.component.ts",
    "ng://@covalent/core/chips/chips.module.ts",
    "ng://@covalent/core/chips/chips.component.ts",
    "ng://@covalent/core/message/message.module.ts",
    "ng://@covalent/core/message/message.component.ts",
    "ng://@covalent/core/common/forms/validators/validators.ts",
    "ng://@covalent/core/common/behaviors/disable-ripple.mixin.ts",
    "ng://@covalent/core/common/behaviors/disabled.mixin.ts",
    "ng://@covalent/core/common/behaviors/control-value-accesor.mixin.ts",
    "ng://@covalent/core/common/animations/pulse/pulse.animation.ts",
    "ng://@covalent/core/common/animations/jello/jello.animation.ts",
    "ng://@covalent/core/common/animations/headshake/headshake.animation.ts",
    "ng://@covalent/core/common/animations/flash/flash.animation.ts",
    "ng://@covalent/core/common/animations/bounce/bounce.animation.ts",
    "ng://@covalent/core/common/animations/fade/fadeInOut.animation.ts",
    "ng://@covalent/core/common/animations/collapse/collapse.animation.ts",
    "ng://@covalent/core/common/animations/rotate/rotate.animation.ts",
    "ng://@covalent/core/common/common.module.ts",
    "ng://@covalent/core/common/services/icon.service.ts",
    "ng://@covalent/core/common/services/router-path.service.ts",
    "ng://@covalent/core/common/pipes/truncate/truncate.pipe.ts",
    "ng://@covalent/core/common/pipes/digits/digits.pipe.ts",
    "ng://@covalent/core/common/pipes/bytes/bytes.pipe.ts",
    "ng://@covalent/core/common/pipes/time-difference/time-difference.pipe.ts",
    "ng://@covalent/core/common/pipes/time-ago/time-ago.pipe.ts",
    "ng://@covalent/core/common/forms/auto-trim/auto-trim.directive.ts",
    "ng://@covalent/core/common/animations/fade/fade.directive.ts",
    "ng://@covalent/core/common/animations/toggle/toggle.directive.ts",
    "ng://@covalent/core/notifications/notifications.module.ts",
    "ng://@covalent/core/notifications/notification-count.component.ts",
    "ng://@covalent/core/virtual-scroll/virtual-scroll.module.ts",
    "ng://@covalent/core/virtual-scroll/virtual-scroll-container.component.ts",
    "ng://@covalent/core/virtual-scroll/virtual-scroll-row.directive.ts",
    "ng://@covalent/core/paging/paging.module.ts",
    "ng://@covalent/core/paging/paging-bar.component.ts"
  ],
  "sourcesContent": [
    "import { Directive, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { TdMediaService } from '../services/media.service';\n\n@Directive({\n  selector: '[tdMediaToggle]',\n})\nexport class TdMediaToggleDirective implements OnInit, OnDestroy {\n\n  private _subscription: Subscription;\n\n  private _query: string;\n  private _matches: boolean = false;\n  private _attributes: {[key: string]: string} = {};\n  private _styles: {[key: string]: string} = {};\n  private _classes: string[] = [];\n\n  /**\n   * tdMediaToggle: string\n   * Media query used to evaluate screen/window size.\n   * Toggles attributes, classes and styles if media query is matched.\n   */\n  @Input('tdMediaToggle')\n  set query(query: string) {\n    if (!query) {\n      throw new Error('Query needed for [tdMediaToggle] directive.');\n    }\n    this._query = query;\n  }\n\n  /**\n   * mediaAttributes: {[key: string]: string}\n   * Attributes to be toggled when media query matches.\n   */\n  @Input('mediaAttributes')\n  set attributes(attributes: any) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * mediaClasses: string[]\n   * CSS Classes to be toggled when media query matches.\n   */\n  @Input('mediaClasses')\n  set classes(classes: string[]) {\n    this._classes = classes;\n  }\n\n  /**\n   * mediaStyles: {[key: string]: string}\n   * CSS Styles to be toggled when media query matches.\n   */\n  @Input('mediaStyles')\n  set styles(styles: any) {\n    this._styles = styles;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef, private _mediaService: TdMediaService) { }\n\n  ngOnInit(): void {\n    this._mediaChange(this._mediaService.query(this._query));\n    this._subscription = this._mediaService.registerQuery(this._query).subscribe((matches: boolean) => {\n      this._mediaChange(matches);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private _mediaChange(matches: boolean): void {\n    this._matches = matches;\n    this._changeAttributes();\n    this._changeClasses();\n    this._changeStyles();\n  }\n\n  private _changeAttributes(): void {\n    for (let attr in this._attributes) {\n      if (this._matches) {\n        this._renderer.setAttribute(this._elementRef.nativeElement, attr, this._attributes[attr]);\n      } else {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, attr);\n      }\n    }\n  }\n\n  private _changeClasses(): void {\n    this._classes.forEach((className: string) => {\n      if (this._matches) {\n        this._renderer.addClass(this._elementRef.nativeElement, className);\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, className);\n      }\n    });\n  }\n\n  private _changeStyles(): void {\n    for (let style in this._styles) {\n      if (this._matches) {\n        this._renderer.setStyle(this._elementRef.nativeElement, style, this._styles[style]);\n      } else {\n        this._renderer.removeStyle(this._elementRef.nativeElement, style);\n      }\n    }\n  }\n\n}\n",
    "import { Injectable, NgZone, SkipSelf, Optional, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\n\n@Injectable()\nexport class TdMediaService {\n\n  private _resizing: boolean = false;\n  private _globalSubscription: Subscription;\n  private _queryMap: Map<string, string> = new Map<string, string>();\n  private _querySources: { [key: string]: BehaviorSubject<boolean>} = {};\n  private _queryObservables: {[key: string]: Observable<boolean>} = {};\n\n  constructor(private _ngZone: NgZone) {\n    this._queryMap.set('xs', '(max-width: 599px)');\n    this._queryMap.set('gt-xs', '(min-width: 600px)');\n    this._queryMap.set('sm', '(min-width: 600px) and (max-width: 959px)');\n    this._queryMap.set('gt-sm', '(min-width: 960px)');\n    this._queryMap.set('md', '(min-width: 960px) and (max-width: 1279px)');\n    this._queryMap.set('gt-md', '(min-width: 1280px)');\n    this._queryMap.set('lg', '(min-width: 1280px) and (max-width: 1919px)');\n    this._queryMap.set('gt-lg', '(min-width: 1920px)');\n    this._queryMap.set('xl', '(min-width: 1920px)');\n    this._queryMap.set('landscape', '(orientation: landscape)');\n    this._queryMap.set('portrait', '(orientation: portrait)');\n    this._queryMap.set('print', 'print');\n\n    this._resizing = false;\n    // we make sure that the resize checking happend outside of angular since it happens often\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      return fromEvent(window, 'resize').subscribe(() => {\n        // way to prevent the resize event from triggering the match media if there is already one event running already.\n        if (!this._resizing) {\n          this._resizing = true;\n          setTimeout(() => {\n            this._onResize();\n            this._resizing = false;\n          }, 100);\n        }\n      });\n    });\n  }\n\n  /**\n   * Deregisters a query so its stops being notified or used.\n   */\n  deregisterQuery(query: string): void {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    this._querySources[query].unsubscribe();\n    delete this._querySources[query];\n    delete this._queryObservables[query];\n  }\n\n  /**\n   * Used to evaluate whether a given media query is true or false given the current device's screen / window size.\n   */\n  public query(query: string): boolean {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    return this._ngZone.run(() => {\n      return matchMedia(query).matches;\n    });\n  }\n\n  /**\n   * Registers a media query and returns an [Observable] that will re-evaluate and\n   * return if the given media query matches on window resize.\n   * Note: don't forget to unsubscribe from [Observable] when finished watching.\n   */\n  public registerQuery(query: string): Observable<boolean> {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    if (!this._querySources[query]) {\n      this._querySources[query] = new BehaviorSubject<boolean>(matchMedia(query).matches);\n      this._queryObservables[query] = this._querySources[query].asObservable();\n    }\n    return this._queryObservables[query];\n  }\n\n  /**\n   * Trigger a match media event on all subscribed observables.\n   */\n  public broadcast(): void {\n    this._onResize();\n  }\n\n  private _onResize(): void {\n    for (let query in this._querySources) {\n      this._ngZone.run(() => {\n        this._matchMediaTrigger(query);\n      });\n    }\n  }\n\n  private _matchMediaTrigger(query: string): void {\n    this._querySources[query].next(matchMedia(query).matches);\n  }\n}\n\nexport function MEDIA_PROVIDER_FACTORY(\n    parent: TdMediaService, ngZone: NgZone): TdMediaService {\n  return parent || new TdMediaService(ngZone);\n}\n\nexport const MEDIA_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdMediaService,\n  deps: [[new Optional(), new SkipSelf(), TdMediaService], NgZone],\n  useFactory: MEDIA_PROVIDER_FACTORY,\n};\n",
    "import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TdLoadingService, LOADING_PROVIDER } from './services/loading.service';\nimport { TdLoadingFactory, LOADING_FACTORY_PROVIDER } from './services/loading.factory';\nimport { TdLoadingDirective } from './directives/loading.directive';\nimport { TdLoadingComponent } from './loading.component';\n\nconst TD_LOADING: Type<any>[] = [\n  TdLoadingComponent,\n  TdLoadingDirective,\n];\n\nconst TD_LOADING_ENTRY_COMPONENTS: Type<any>[] = [\n  TdLoadingComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    OverlayModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_LOADING,\n  ],\n  exports: [\n    TD_LOADING,\n  ],\n  providers: [\n    LOADING_FACTORY_PROVIDER,\n    LOADING_PROVIDER,\n  ],\n  entryComponents: [\n    TD_LOADING_ENTRY_COMPONENTS,\n  ],\n})\nexport class CovalentLoadingModule {\n\n}\n",
    "import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\n\nimport { LoadingType, LoadingMode, LoadingStrategy, TdLoadingComponent } from '../loading.component';\nimport { TdLoadingService } from '../services/loading.service';\nimport { ILoadingRef } from '../services/loading.factory';\n\n/**\n * Context class for variable reference\n */\nexport class TdLoadingContext {\n  public $implicit: any = undefined;\n  public tdLoading: any = undefined;\n}\n\n// Constant for generation of the id for the next component\nlet TD_LOADING_NEXT_ID: number = 0;\n\n@Directive({\n  selector: '[tdLoading]',\n})\nexport class TdLoadingDirective implements OnInit, OnDestroy {\n\n  private _context: TdLoadingContext = new TdLoadingContext();\n  private _type: LoadingType;\n  private _mode: LoadingMode;\n  private _strategy: LoadingStrategy;\n  private _name: string;\n  private _loadingRef: ILoadingRef;\n\n  /**\n   * tdLoading: string\n   * Name reference of the loading mask, used to register/resolve requests to the mask.\n   */\n  @Input('tdLoading')\n  set name(name: string) {\n    if (!this._name) {\n      if (name) {\n        this._name = name;\n      }\n    }\n  }\n\n  /**\n   * tdLoadingUntil?: any\n   * If its null, undefined or false it will be used to register requests to the mask.\n   * Else if its any value that can be resolved as true, it will resolve the mask.\n   * [name] is optional when using [until], but can still be used to register/resolve it manually.\n   */\n  @Input('tdLoadingUntil')\n  set until(until: any) {\n    if (!this._name) {\n      this._name = 'td-loading-until-' + TD_LOADING_NEXT_ID++;\n    }\n    this._context.$implicit = this._context.tdLoading = until;\n    if (!until) {\n      this._loadingService.register(this._name);\n    } else {\n      this._loadingService.resolveAll(this._name);\n    }\n  }\n\n  /**\n   * tdLoadingType?: LoadingType or ['linear' | 'circular']\n   * Sets the type of loading mask depending on value.\n   * Defaults to [LoadingType.Circular | 'circular'].\n   */\n  @Input('tdLoadingType')\n  set type(type: LoadingType) {\n    switch (type) {\n      case LoadingType.Linear:\n        this._type = LoadingType.Linear;\n        break;\n      default:\n        this._type = LoadingType.Circular;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingMode?: LoadingMode or ['determinate' | 'indeterminate']\n   * Sets the mode of loading mask depending on value.\n   * Defaults to [LoadingMode.Indeterminate | 'indeterminate'].\n   */\n  @Input('tdLoadingMode')\n  set mode(mode: LoadingMode) {\n    switch (mode) {\n      case LoadingMode.Determinate:\n        this._mode = LoadingMode.Determinate;\n        break;\n      default:\n        this._mode = LoadingMode.Indeterminate;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingStrategy?: LoadingStrategy or ['replace' | 'overlay']\n   * Sets the strategy of loading mask depending on value.\n   * Defaults to [LoadingMode.Replace | 'replace'].\n   */\n  @Input('tdLoadingStrategy')\n  set strategy(stategy: LoadingStrategy) {\n    switch (stategy) {\n      case LoadingStrategy.Overlay:\n        this._strategy = LoadingStrategy.Overlay;\n        break;\n      default:\n        this._strategy = LoadingStrategy.Replace;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingColor?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the loading component. Defaults to \"primary\"\n   */\n  @Input('tdLoadingColor') color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _viewContainerRef: ViewContainerRef,\n              private _templateRef: TemplateRef<TdLoadingContext>,\n              private _loadingService: TdLoadingService) {}\n\n  /**\n   * Registers component in the DOM, so it will be available when calling resolve/register.\n   */\n  ngOnInit(): void {\n    this._registerComponent();\n  }\n\n  /**\n   * Remove component when directive is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._loadingService.removeComponent(this._name);\n    this._loadingRef = undefined;\n  }\n\n  /**\n   * Creates [TdLoadingComponent] and attaches it to this directive's [ViewContainerRef].\n   * Passes this directive's [TemplateRef] to modify DOM depending on loading `strategy`.\n   */\n  private _registerComponent(): void {\n    if (!this._name) {\n      throw new Error('Name is needed to register loading directive');\n    }\n    // Check if `TdLoadingComponent` has been created before trying to add one again.\n    // There is a weird edge case when using `[routerLinkActive]` that calls the `ngOnInit` twice in a row\n    if (!this._loadingRef) {\n      this._loadingRef = this._loadingService.createComponent({\n        name: this._name,\n        type: this._type,\n        mode: this._mode,\n        color: this.color,\n        strategy: this._strategy,\n      }, this._viewContainerRef, this._templateRef, this._context);\n    }\n  }\n}\n",
    "import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingMode, LoadingStrategy, LoadingType } from '../loading.component';\nimport { TdLoadingFactory, ILoadingRef } from './loading.factory';\n\nexport interface ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n}\n\nexport class TdLoadingConfig implements ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n\n  constructor(config: ITdLoadingConfig) {\n    this.name = config.name;\n    if (!this.name) {\n      throw Error('Name is required for [TdLoading] configuration.');\n    }\n    this.mode = config.mode ? config.mode : LoadingMode.Indeterminate;\n    this.type = config.type ? config.type : LoadingType.Circular;\n    this.color = config.color ? config.color : 'primary';\n  }\n}\n\nexport interface ITdLoadingDirectiveConfig extends ITdLoadingConfig {\n  strategy?: LoadingStrategy;\n}\n\nexport class TdLoadingDirectiveConfig extends TdLoadingConfig implements ITdLoadingDirectiveConfig {\n  name: string;\n  type: LoadingType;\n  mode: LoadingMode;\n  strategy: LoadingStrategy;\n\n  constructor(config: ITdLoadingDirectiveConfig) {\n    super(config);\n    this.strategy = config.strategy ? config.strategy : LoadingStrategy.Replace;\n  }\n}\n\n@Injectable()\nexport class TdLoadingService {\n\n  private _context: {[key: string]: ILoadingRef} = {};\n  private _timeouts: {[key: string]: any} = {};\n\n  constructor(private _loadingFactory: TdLoadingFactory) {\n    this.create({\n      name: 'td-loading-main',\n    });\n  }\n\n  /**\n   * params:\n   * - config: ILoadingDirectiveConfig\n   * - viewContainerRef: ViewContainerRef\n   * - templateRef: TemplateRef<Object>\n   *\n   * Creates an replace loading mask and attaches it to the viewContainerRef.\n   * Replaces the templateRef with the mask when a request is registered on it.\n   *\n   * NOTE: @internal usage only.\n   */\n  createComponent(config: ITdLoadingDirectiveConfig, viewContainerRef: ViewContainerRef,\n                  templateRef: TemplateRef<Object>, context: TdLoadingContext): ILoadingRef {\n    let directiveConfig: TdLoadingDirectiveConfig = new TdLoadingDirectiveConfig(config);\n    if (this._context[directiveConfig.name]) {\n      throw Error(`Name duplication: [TdLoading] directive has a name conflict with ${directiveConfig.name}.`);\n    }\n    if (directiveConfig.strategy === LoadingStrategy.Overlay) {\n      this._context[directiveConfig.name] = this._loadingFactory.createOverlayComponent(directiveConfig, viewContainerRef, templateRef);\n    } else {\n      this._context[directiveConfig.name] = this._loadingFactory.createReplaceComponent(directiveConfig, viewContainerRef, templateRef, context);\n    }\n    return this._context[directiveConfig.name];\n  }\n\n  /**\n   * params:\n   * - config: ITdLoadingConfig\n   *\n   * Creates a fullscreen loading mask and attaches it to the DOM with the given configuration.\n   * Only displayed when the mask has a request registered on it.\n   */\n  public create(config: ITdLoadingConfig): void {\n    let fullscreenConfig: TdLoadingConfig = new TdLoadingConfig(config);\n    this.removeComponent(fullscreenConfig.name);\n    this._context[fullscreenConfig.name] = this._loadingFactory.createFullScreenComponent(fullscreenConfig);\n  }\n\n  /**\n   * params:\n   * - name: string\n   *\n   * Removes `loading` component from service context.\n   */\n  public removeComponent(name: string): void {\n    if (this._context[name]) {\n      this._context[name].subject.unsubscribe();\n      if (this._context[name].componentRef) {\n        this._context[name].componentRef.destroy();\n      }\n      this._context[name] = undefined;\n      delete this._context[name];\n    }\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - registers?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass registers argument to set a number of register calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.register()\n   */\n  public register(name: string = 'td-loading-main', registers: number = 1): boolean {\n    // try registering into the service if the loading component has been instanciated or if it exists.\n    if (this._context[name]) {\n      registers = registers < 1 ? 1 : registers;\n      this._context[name].times += registers;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    } else {\n      // if it doesnt exist, set a timeout so its registered after change detection happens\n      // this in case \"register\" occured on the `ngOnInit` lifehook cycle.\n      if (!this._timeouts[name]) {\n        this._timeouts[name] = setTimeout(() => {\n          this.register(name, registers);\n        });\n      } else {\n        // if it timeout occured and still doesnt exist, it means the tiemout wasnt needed so we clear it.\n        this._clearTimeout(name);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - resolves?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass resolves argument to set a number of resolve calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolve()\n   */\n  public resolve(name: string = 'td-loading-main', resolves: number = 1): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      resolves = resolves < 1 ? 1 : resolves;\n      if (this._context[name].times > 0) {\n        let times: number = this._context[name].times;\n        times -= resolves;\n        this._context[name].times = times < 0 ? 0 : times;\n      }\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * returns: true if successful\n   *\n   * Resolves all request for the loading mask referenced by the name parameter.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolveAll()\n   */\n  public resolveAll(name: string = 'td-loading-main'): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      this._context[name].times = 0;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - value: number\n   * returns: true if successful\n   *\n   * Set value on a loading mask referenced by the name parameter.\n   * Usage only available if its mode is 'determinate' and if loading is showing.\n   */\n  public setValue(name: string, value: number): boolean {\n    if (this._context[name]) {\n      let instance: TdLoadingComponent = this._context[name].componentRef.instance;\n      if (instance.mode === LoadingMode.Determinate && instance.animation) {\n        instance.value = value;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Clears timeout linked to the name.\n   * @param name Name of the loading component to be cleared\n   */\n  private _clearTimeout(name: string): void {\n    clearTimeout(this._timeouts[name]);\n    delete this._timeouts[name];\n  }\n}\n\nexport function LOADING_PROVIDER_FACTORY(\n    parent: TdLoadingService, loadingFactory: TdLoadingFactory): TdLoadingService {\n  return parent || new TdLoadingService(loadingFactory);\n}\n\nexport const LOADING_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingService,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingService], TdLoadingFactory],\n  useFactory: LOADING_PROVIDER_FACTORY,\n};\n",
    "import { Injectable, ComponentFactoryResolver, ChangeDetectorRef, Provider, SkipSelf, Optional } from '@angular/core';\nimport { Injector, ComponentRef, ViewContainerRef, TemplateRef } from '@angular/core';\nimport { TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingType, LoadingMode, LoadingStrategy, LoadingStyle } from '../loading.component';\nimport { ITdLoadingConfig } from './loading.service';\n\nexport interface IInternalLoadingOptions extends ITdLoadingConfig {\n  height?: number;\n  style?: LoadingStyle;\n}\n\nexport interface ILoadingRef {\n  observable: Observable<any>;\n  componentRef: ComponentRef<any>;\n  subject?: Subject<any>;\n  times?: number;\n}\n\n/**\n * NOTE: @internal usage only.\n */\n@Injectable()\nexport class TdLoadingFactory {\n\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _overlay: Overlay,\n              private _injector: Injector) {\n  }\n\n  /**\n   * Uses material `Overlay` services to create a DOM element and attach the loading component\n   * into it. Leveraging the state and configuration from it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createFullScreenComponent(options: ITdLoadingConfig): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.FullScreen;\n    let loadingRef: ILoadingRef = this._initializeContext();\n    let loading: boolean = false;\n    let overlayRef: OverlayRef;\n    loadingRef.observable\n    .subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        overlayRef = this._createOverlay();\n        loadingRef.componentRef = overlayRef.attach(new ComponentPortal(TdLoadingComponent));\n        this._mapOptions(options, loadingRef.componentRef.instance);\n        loadingRef.componentRef.instance.startInAnimation();\n        loadingRef.componentRef.changeDetectorRef.detectChanges();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          loadingRef.componentRef.destroy();\n          overlayRef.detach();\n          overlayRef.dispose();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Leverages TemplatePortals from material to inject the template inside of it so it fits\n   * perfectly when overlaying it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createOverlayComponent(options: ITdLoadingConfig, viewContainerRef: ViewContainerRef,\n                                templateRef: TemplateRef<Object>): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.Overlay;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    loadingRef.componentRef.instance.content = new TemplatePortal(templateRef, viewContainerRef);\n    viewContainerRef.clear();\n    viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n    loadingRef.observable\n    .subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        loadingRef.componentRef.instance.startOutAnimation();\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Replaces the template with the loading component depending if it was registered or resolved.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createReplaceComponent(options: ITdLoadingConfig, viewContainerRef: ViewContainerRef,\n                                templateRef: TemplateRef<Object>, context: TdLoadingContext): ILoadingRef {\n    let nativeElement: HTMLElement = <HTMLElement>templateRef.elementRef.nativeElement;\n    (<IInternalLoadingOptions>options).height = nativeElement.nextElementSibling ?\n      nativeElement.nextElementSibling.scrollHeight : undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.None;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    viewContainerRef.createEmbeddedView(templateRef, context);\n    loadingRef.observable\n    .subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        let index: number = viewContainerRef.indexOf(loadingRef.componentRef.hostView);\n        if (index < 0) {\n          viewContainerRef.clear();\n          viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n        }\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          // passing context so when the template is re-attached, we can keep the reference of the variables\n          let cdr: ChangeDetectorRef = viewContainerRef.createEmbeddedView(templateRef, context);\n          viewContainerRef.detach(viewContainerRef.indexOf(loadingRef.componentRef.hostView));\n          /**\n           * Need to call \"markForCheck\" and \"detectChanges\" on attached template, so its detected by parent component when attached\n           * with \"OnPush\" change detection\n           */\n          cdr.detectChanges();\n          cdr.markForCheck();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a fullscreen overlay for the loading usage.\n   */\n  private _createOverlay(): OverlayRef {\n    let state: OverlayConfig = new OverlayConfig();\n    state.hasBackdrop = false;\n    state.positionStrategy = this._overlay.position().global().centerHorizontally().centerVertically();\n    return this._overlay.create(state);\n  }\n\n  /**\n   * Creates a generic component dynamically waiting to be attached to a viewContainerRef.\n   */\n  private _createComponent(options: IInternalLoadingOptions): ILoadingRef {\n    let compRef: ILoadingRef = this._initializeContext();\n    compRef.componentRef = this._componentFactoryResolver\n    .resolveComponentFactory(TdLoadingComponent).create(this._injector);\n    this._mapOptions(options, compRef.componentRef.instance);\n    return compRef;\n  }\n\n  /**\n   * Initialize context for loading component.\n   */\n  private _initializeContext(): ILoadingRef {\n    let subject: Subject<any> = new Subject<any>();\n    return {\n      observable: subject.asObservable(),\n      subject: subject,\n      componentRef: undefined,\n      times: 0,\n    };\n  }\n\n  /**\n   * Maps configuration to the loading component instance.\n   */\n  private _mapOptions(options: IInternalLoadingOptions, instance: TdLoadingComponent): void {\n    instance.style = options.style;\n    if (options.type !== undefined) {\n      instance.type = options.type;\n    }\n    if (options.height !== undefined) {\n      instance.height = options.height;\n    }\n    if (options.mode !== undefined) {\n      instance.mode = options.mode;\n    }\n    if (options.color !== undefined) {\n      instance.color = options.color;\n    }\n  }\n}\n\nexport function LOADING_FACTORY_PROVIDER_FACTORY(\n    parent: TdLoadingFactory, componentFactoryResolver: ComponentFactoryResolver, overlay: Overlay, injector: Injector): TdLoadingFactory {\n  return parent || new TdLoadingFactory(componentFactoryResolver, overlay, injector);\n}\n\nexport const LOADING_FACTORY_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingFactory,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingFactory], ComponentFactoryResolver, Overlay, Injector],\n  useFactory: LOADING_FACTORY_PROVIDER_FACTORY,\n};\n",
    "import { Component, ViewChild, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy, ElementRef, DoCheck } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nexport enum LoadingType {\n  Circular = 'circular',\n  Linear = 'linear',\n}\n\nexport enum LoadingMode {\n  Determinate = 'determinate',\n  Indeterminate = 'indeterminate',\n}\n\nexport enum LoadingStrategy {\n  Overlay = 'overlay',\n  Replace = 'replace',\n}\n\nexport enum LoadingStyle {\n  FullScreen = 'fullscreen',\n  Overlay = 'overlay',\n  None = 'none',\n}\n\nimport { TdFadeInOutAnimation } from '@covalent/core/common';\n\nexport const TD_CIRCLE_DIAMETER: number = 100;\n\n@Component({\n  selector: 'td-loading',\n  styles: [`.td-loading-wrapper {\n  position: relative;\n  display: block; }\n  .td-loading-wrapper.td-fullscreen {\n    position: inherit; }\n  .td-loading-wrapper .td-loading {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -ms-flex-line-pack: center;\n        align-content: center;\n    max-width: 100%;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1; }\n  .td-loading-wrapper.td-overlay .td-loading {\n    position: absolute;\n    margin: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 1000; }\n    .td-loading-wrapper.td-overlay .td-loading mat-progress-bar {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0; }\n  .td-loading-wrapper.td-overlay-circular .td-loading {\n    bottom: 0; }\n`],\n  template: `<div class=\"td-loading-wrapper\"\n    [style.min-height]=\"getHeight()\"\n    [class.td-overlay-circular]=\"(isOverlay() || isFullScreen()) && !isLinear()\"\n    [class.td-overlay]=\"isOverlay() || isFullScreen()\" \n    [class.td-fullscreen]=\"isFullScreen()\">\n  <div [@tdFadeInOut]=\"animation\"\n     (@tdFadeInOut.done)=\"animationComplete($event)\"\n     [style.min-height]=\"getHeight()\"\n     class=\"td-loading\">\n    <mat-progress-spinner *ngIf=\"isCircular()\" \n                        [mode]=\"mode\"\n                        [value]=\"value\" \n                        [color]=\"color\" \n                        [diameter]=\"getCircleDiameter()\"\n                        [strokeWidth]=\"getCircleStrokeWidth()\">\n    </mat-progress-spinner>\n    <mat-progress-bar *ngIf=\"isLinear()\" \n                     [mode]=\"mode\"\n                     [value]=\"value\"\n                     [color]=\"color\">\n    </mat-progress-bar>\n  </div>\n  <ng-template [cdkPortalHost]=\"content\"></ng-template>\n</div>`,\n  animations: [\n    TdFadeInOutAnimation(),\n  ],\n})\nexport class TdLoadingComponent implements DoCheck {\n\n  private _animationIn: Subject<any> = new Subject<any>();\n  private _animationOut: Subject<any> = new Subject<any>();\n  private _mode: LoadingMode = LoadingMode.Indeterminate;\n  private _defaultMode: LoadingMode = LoadingMode.Indeterminate;\n  private _value: number = 0;\n  private _circleDiameter: number = TD_CIRCLE_DIAMETER;\n\n  /**\n   * Flag for animation\n   */\n  animation: boolean = false;\n\n  /**\n   * Content injected into loading component.\n   */\n  content: TemplatePortal<any>;\n\n  /**\n   * Sets mode of [TdLoadingComponent] to LoadingMode.Determinate or LoadingMode.Indeterminate\n   */\n  set mode(mode: LoadingMode) {\n    this._defaultMode = mode;\n  }\n  get mode(): LoadingMode {\n    return this._mode;\n  }\n\n  /**\n   * Sets value of [TdLoadingComponent] if mode is 'LoadingMode.Determinate'\n   */\n  set value(value: number) {\n    this._value = value;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  style: LoadingStyle = LoadingStyle.None;\n\n  /**\n   * height: number\n   * Sets height of [TdLoadingComponent].\n   */\n  height: number;\n\n  /**\n   * type: LoadingType\n   * Sets type of [TdLoadingComponent] rendered.\n   */\n  type: LoadingType = LoadingType.Circular;\n\n  /**\n   * color: primary' | 'accent' | 'warn'\n   * Sets theme color of [TdLoadingComponent] rendered.\n   */\n  color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngDoCheck(): void {\n    // When overlay is used and the host width has a value greater than 1px\n    // set the circle diameter when possible incase the loading component was rendered in a hidden state\n    if (this.isOverlay() && this._hostHeight() > 1) {\n      if (this.animation) {\n        this._setCircleDiameter();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  getHeight(): string {\n    // Ignore height if style is `overlay` or `fullscreen`.\n    // Add height if child elements have a height and style is `none`, else return default height.\n    if (this.isOverlay() || this.isFullScreen()) {\n      return undefined;\n    } else {\n      return this.height ? `${this.height}px` : '150px';\n    }\n  }\n\n  getCircleDiameter(): number {\n    return this._circleDiameter;\n  }\n\n  getCircleStrokeWidth(): number {\n    // we calculate the stroke width by setting it as 10% of its diameter\n    let strokeWidth: number = this.getCircleDiameter() / 10;\n    return Math.abs(strokeWidth);\n  }\n\n  isCircular(): boolean {\n    return this.type === LoadingType.Circular;\n  }\n\n  isLinear(): boolean {\n    return this.type === LoadingType.Linear;\n  }\n\n  isFullScreen(): boolean {\n    return this.style === LoadingStyle.FullScreen;\n  }\n\n  isOverlay(): boolean {\n    return this.style === LoadingStyle.Overlay;\n  }\n\n  animationComplete(event: AnimationEvent): void {\n    // Check to see if its \"in\" or \"out\" animation to execute the proper callback\n    if (!event.fromState) {\n      this.inAnimationCompleted();\n    } else {\n      this.outAnimationCompleted();\n    }\n  }\n\n  inAnimationCompleted(): void {\n    this._animationIn.next(undefined);\n  }\n\n  outAnimationCompleted(): void {\n   /* little hack to reset the loader value and animation before removing it from DOM\n    * else, the loader will appear with prev value when its registered again\n    * and will do an animation going prev value to 0.\n    */\n    this.value = 0;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    this._animationOut.next(undefined);\n  }\n\n  /**\n   * Starts in animation and returns an observable for completition event.\n   */\n  startInAnimation(): Observable<any> {\n    /* need to switch back to the selected mode, so we have saved it in another variable\n    *  and then recover it. (issue with protractor)\n    */\n    this._mode = this._defaultMode;\n    // Set values before the animations starts\n    this._setCircleDiameter();\n    // Check for changes for `OnPush` change detection\n    this.animation = true;\n    this._changeDetectorRef.markForCheck();\n    return this._animationIn.asObservable();\n  }\n\n  /**\n   * Starts out animation and returns an observable for completition event.\n   */\n  startOutAnimation(): Observable<any> {\n    this.animation = false;\n    /* need to switch back and forth from determinate/indeterminate so the setInterval()\n    * inside mat-progress-spinner stops and protractor doesnt timeout waiting to sync.\n    */\n    this._mode = LoadingMode.Determinate;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    return this._animationOut.asObservable();\n  }\n\n  /**\n   * Calculate the proper diameter for the circle and set it\n   */\n  private _setCircleDiameter(): void {\n    // we set a default diameter of 100 since this is the default in material\n    let diameter: number = TD_CIRCLE_DIAMETER;\n    // if height is provided, then we take that as diameter\n    if (this.height) {\n      diameter = this.height;\n      // else if its not provided, then we take the host height\n    } else if (this.height === undefined) {\n      diameter = this._hostHeight();\n    }\n    // if the diameter is over TD_CIRCLE_DIAMETER, we set TD_CIRCLE_DIAMETER\n    if (!!diameter && diameter <= TD_CIRCLE_DIAMETER) {\n      this._circleDiameter = Math.floor(diameter);\n    } else {\n      this._circleDiameter = TD_CIRCLE_DIAMETER;\n    }\n  }\n\n  /**\n   * Returns the host height of the loading component\n   */\n  private _hostHeight(): number {\n    if (<HTMLElement>this._elementRef.nativeElement) {\n      return (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return 0;\n  }\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective, TdLayoutNavListCloseDirective, TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective, TdLayoutManageListCloseDirective, TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent, TdNavigationDrawerMenuDirective, TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollDispatchModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [\n    TD_LAYOUTS,\n  ],\n  exports: [\n    TD_LAYOUTS,\n  ],\n})\nexport class CovalentLayoutModule {\n\n}\n",
    "import { Component, Directive, Input, ContentChildren, OnInit, OnDestroy, forwardRef, Inject,\n         QueryList, SecurityContext, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { TdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {\n\n}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {\n\n}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styles: [`:host {\n  width: 100%; }\n  :host .td-navigation-drawer-content.ng-animating,\n  :host .td-navigation-drawer-menu-content.ng-animating {\n    overflow: hidden; }\n  :host mat-toolbar {\n    padding: 16px; }\n    :host mat-toolbar.td-toolbar-background {\n      background-repeat: no-repeat;\n      background-size: cover; }\n    :host mat-toolbar.td-nagivation-drawer-toolbar {\n      -webkit-box-orient: vertical;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: column;\n              flex-direction: column;\n      height: auto !important;\n      display: block !important; }\n    :host mat-toolbar .td-navigation-drawer-toolbar-content {\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -ms-flex-line-pack: center;\n          align-content: center;\n      max-width: 100%;\n      -webkit-box-pack: start;\n          -ms-flex-pack: start;\n              justify-content: start; }\n    :host mat-toolbar .td-navigation-drawer-menu-toggle {\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex; }\n      :host mat-toolbar .td-navigation-drawer-menu-toggle .td-navigation-drawer-label {\n        -webkit-box-flex: 1;\n            -ms-flex: 1;\n                flex: 1; }\n      :host mat-toolbar .td-navigation-drawer-menu-toggle .td-navigation-drawer-menu-button {\n        height: 24px;\n        line-height: 24px;\n        width: 24px; }\n  :host > div {\n    overflow: hidden; }\n`],\n  template: `<mat-toolbar [color]=\"color\"\n             [style.background-image]=\"backgroundImage\"\n             [class.td-toolbar-background]=\"!!isBackgroundAvailable\"\n             class=\"td-nagivation-drawer-toolbar\">\n  <ng-content select=\"[td-navigation-drawer-toolbar]\"></ng-content>\n  <ng-container *ngIf=\"!isCustomToolbar\">\n    <div *ngIf=\"icon || logo || sidenavTitle\"\n          class=\"td-navigation-drawer-toolbar-content\"\n          [class.cursor-pointer]=\"routerEnabled\"\n          (click)=\"handleNavigationClick()\">\n      <mat-icon *ngIf=\"icon\">{{icon}}</mat-icon>\n      <mat-icon *ngIf=\"logo && !icon\" class=\"mat-icon-logo\" [svgIcon]=\"logo\"></mat-icon>\n      <span *ngIf=\"sidenavTitle\" class=\"td-navigation-drawer-title\">{{sidenavTitle}}</span>\n    </div>\n    <div class=\"td-navigation-drawer-name\" *ngIf=\"email && name\">{{name}}</div>\n    <div class=\"td-navigation-drawer-menu-toggle\"\n        href\n        *ngIf=\"email || name\"\n        (click)=\"toggleMenu()\">\n      <span class=\"td-navigation-drawer-label\">{{email || name}}</span>\n      <button mat-icon-button class=\"td-navigation-drawer-menu-button\" *ngIf=\"isMenuAvailable\">\n        <mat-icon *ngIf=\"!menuToggled\">arrow_drop_down</mat-icon>\n        <mat-icon *ngIf=\"menuToggled\">arrow_drop_up</mat-icon>\n      </button>\n    </div>\n  </ng-container>\n</mat-toolbar>\n<div class=\"td-navigation-drawer-content\" [@tdCollapse]=\"menuToggled\">\n  <ng-content></ng-content>\n</div>\n<div class=\"td-navigation-drawer-menu-content\" [@tdCollapse]=\"!menuToggled\">\n  <ng-content select=\"[td-navigation-drawer-menu]\"></ng-content>\n</div>\n`,\n  animations: [ TdCollapseAnimation() ],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective) _drawerMenu: QueryList<TdNavigationDrawerMenuDirective>;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective) _toolbar: QueryList<TdNavigationDrawerToolbarDirective>;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input('sidenavTitle') sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input('color') color: string;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      let sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input('name') name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input('email') email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n              @Optional() private _router: Router,\n              private _sanitize: DomSanitizer) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<void> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<void> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<void> {\n    return this._layout.close();\n  }\n}\n",
    "import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styles: [`:host {\n  display: block;\n  padding: 10px 16px; }\n`],\n  template: `<ng-content></ng-content>\n`,\n})\nexport class TdLayoutFooterComponent {\n\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: string\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n\n}\n",
    "import { Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n})\nexport class TdLayoutManageListToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutManageListToggle') \n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n})\nexport class TdLayoutManageListCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutManageListClose') \n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n})\nexport class TdLayoutManageListOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutManageListOpen') \n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n",
    "import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styles: [`:host {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  margin: 0;\n  width: 100%;\n  min-height: 100%;\n  height: 100%;\n  overflow: hidden; }\n  :host mat-sidenav-container.td-layout-manage-list {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1; }\n    :host mat-sidenav-container.td-layout-manage-list > mat-sidenav.mat-drawer-opened, :host mat-sidenav-container.td-layout-manage-list > mat-sidenav.mat-drawer-opening, :host mat-sidenav-container.td-layout-manage-list > mat-sidenav.mat-drawer-closed, :host mat-sidenav-container.td-layout-manage-list > mat-sidenav.mat-drawer-closing {\n      -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2);\n              box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2); }\n  :host .td-layout-manage-list-sidenav {\n    text-align: start;\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    display: block;\n    position: relative;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch; }\n  :host .td-layout-manage-list-main {\n    margin: 0;\n    width: 100%;\n    min-height: 100%;\n    height: 100%;\n    position: relative;\n    overflow: auto;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n    :host .td-layout-manage-list-main .td-layout-manage-list-content {\n      display: block;\n      position: relative;\n      overflow: auto;\n      -webkit-overflow-scrolling: touch;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1; }\n\n:host ::ng-deep mat-sidenav-container.td-layout-manage-list {\n  /* Ensure the left sidenav is a flex column & 100% height */ }\n  :host ::ng-deep mat-sidenav-container.td-layout-manage-list > .mat-drawer-content {\n    -webkit-box-flex: 1;\n        -ms-flex-positive: 1;\n            flex-grow: 1; }\n  :host ::ng-deep mat-sidenav-container.td-layout-manage-list > mat-sidenav {\n    -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12);\n            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12);\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column; }\n\n:host ::ng-deep mat-nav-list a[mat-list-item] .mat-list-item-content {\n  font-size: 14px; }\n\n:host ::ng-deep .mat-toolbar {\n  font-weight: 400; }\n`],\n  template: `<mat-sidenav-container fullscreen class=\"td-layout-manage-list\">\n  <mat-sidenav #sidenav\n              position=\"start\"\n              [mode]=\"mode\"\n              [opened]=\"opened\"\n              [disableClose]=\"disableClose\"\n              [style.max-width]=\"sidenavWidth\"\n              [style.min-width]=\"sidenavWidth\">\n    <ng-content select=\"mat-toolbar[td-sidenav-content]\"></ng-content>\n    <div class=\"td-layout-manage-list-sidenav\" cdkScrollable>\n      <ng-content select=\"[td-sidenav-content]\"></ng-content>\n    </div>\n  </mat-sidenav>\n  <div class=\"td-layout-manage-list-main\">\n    <ng-content select=\"mat-toolbar\"></ng-content>\n    <div class=\"td-layout-manage-list-content\" cdkScrollable>\n      <ng-content></ng-content>\n    </div>\n    <ng-content select=\"td-layout-footer-inner\"></ng-content>\n  </div>\n</mat-sidenav-container>\n`,\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '257px';\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<void> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<void> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<void> {\n    return this.sidenav.close();\n  }\n\n}\n",
    "import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styles: [`:host {\n  position: relative;\n  display: block;\n  z-index: 2;\n  width: 100%;\n  min-height: 100%;\n  height: 100%; }\n  :host [td-after-card] {\n    display: block; }\n\n.td-layout-card-over-wrapper {\n  margin: -64px;\n  margin-left: 0;\n  margin-right: 0;\n  width: 100%;\n  min-height: 100%;\n  height: 100%; }\n  @media (min-width: 600px) {\n    .td-layout-card-over-wrapper {\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: start;\n          -ms-flex-align: start;\n              align-items: flex-start;\n      -ms-flex-line-pack: start;\n          align-content: flex-start;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center; }\n      .td-layout-card-over-wrapper .td-layout-card-over {\n        max-height: 100%;\n        -webkit-box-sizing: border-box;\n                box-sizing: border-box; } }\n  @media (max-width: 599px) {\n    .td-layout-card-over-wrapper .td-layout-card-over {\n      max-width: 100% !important; } }\n`],\n  template: `<mat-toolbar [color]=\"color\">\n</mat-toolbar>\n<div class=\"td-layout-card-over-wrapper\">\n  <div class=\"td-layout-card-over\"\n        [style.max-width.%]=\"cardWidth\"\n        [style.flex]=\"'1 1 ' + cardWidth + '%'\"\n        [style.-ms-flex]=\"'1 1 ' + cardWidth + '%'\"\n        [style.-webkit-box-flex]=\"1\">\n    <mat-card>\n      <mat-card-title *ngIf=\"cardTitle\">{{cardTitle}}</mat-card-title>\n      <mat-card-subtitle *ngIf=\"cardSubtitle\">{{cardSubtitle}}</mat-card-subtitle>\n      <mat-divider *ngIf=\"cardTitle || cardSubtitle\"></mat-divider>\n      <ng-content></ng-content>\n    </mat-card>\n    <ng-content select=\"[td-after-card]\"></ng-content>\n  </div>\n</div>\n`,\n})\nexport class TdLayoutCardOverComponent {\n\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input('cardTitle') cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input('cardSubtitle') cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input('cardWidth') cardWidth: number = 70;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n}\n",
    "import { Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n})\nexport class TdLayoutNavListToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutNavListToggle') \n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n})\nexport class TdLayoutNavListCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutNavListClose') \n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n})\nexport class TdLayoutNavListOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutNavListOpen') \n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n",
    "import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styles: [`:host {\n  margin: 0;\n  width: 100%;\n  min-height: 100%;\n  height: 100%;\n  overflow: hidden;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1; }\n  :host .td-layout-nav-list-wrapper {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    position: relative;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch; }\n    :host .td-layout-nav-list-wrapper .td-layout-nav-list-toolbar-content {\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -ms-flex-line-pack: center;\n          align-content: center;\n      max-width: 100%;\n      -webkit-box-pack: start;\n          -ms-flex-pack: start;\n              justify-content: start; }\n    :host .td-layout-nav-list-wrapper .td-layout-nav-list-content {\n      text-align: start;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      display: block;\n      position: relative;\n      overflow: auto;\n      -webkit-overflow-scrolling: touch; }\n    :host .td-layout-nav-list-wrapper .td-layout-nav-list-main {\n      -webkit-box-orient: vertical;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: column;\n              flex-direction: column;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      margin: 0;\n      width: 100%;\n      min-height: 100%;\n      height: 100%;\n      position: relative;\n      overflow: auto; }\n      :host .td-layout-nav-list-wrapper .td-layout-nav-list-main .td-layout-nav-list-content {\n        display: block;\n        position: relative;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n        -webkit-box-flex: 1;\n            -ms-flex: 1;\n                flex: 1; }\n    :host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list {\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1; }\n      :host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list > mat-sidenav.mat-drawer-opened, :host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list > mat-sidenav.mat-drawer-opening, :host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list > mat-sidenav.mat-drawer-closed, :host .td-layout-nav-list-wrapper mat-sidenav-container.td-layout-nav-list > mat-sidenav.mat-drawer-closing {\n        -webkit-box-shadow: none;\n                box-shadow: none; }\n\n:host ::ng-deep mat-sidenav-container.td-layout-nav-list {\n  /* Ensure the left sidenav is a flex column & 100% height */ }\n  :host ::ng-deep mat-sidenav-container.td-layout-nav-list > .mat-drawer-content {\n    -webkit-box-flex: 1;\n        -ms-flex-positive: 1;\n            flex-grow: 1; }\n  :host ::ng-deep mat-sidenav-container.td-layout-nav-list > mat-sidenav {\n    -webkit-box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12);\n            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12);\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column; }\n`],\n  template: `<div class=\"td-layout-nav-list-wrapper\">\n  <mat-sidenav-container fullscreen class=\"td-layout-nav-list\">\n    <mat-sidenav #sidenav\n                position=\"start\"\n                [mode]=\"mode\"\n                [opened]=\"opened\"\n                [disableClose]=\"disableClose\"\n                [style.max-width]=\"sidenavWidth\"\n                [style.min-width]=\"sidenavWidth\">\n      <mat-toolbar [color]=\"color\">\n        <ng-content select=\"[td-menu-button]\"></ng-content>\n        <span *ngIf=\"icon || logo || toolbarTitle\"\n              class=\"td-layout-nav-list-toolbar-content\"\n              [class.cursor-pointer]=\"routerEnabled\"\n              (click)=\"handleNavigationClick()\">\n          <mat-icon *ngIf=\"icon\">{{icon}}</mat-icon>\n          <mat-icon *ngIf=\"logo && !icon\" class=\"mat-icon-logo\" [svgIcon]=\"logo\"></mat-icon>\n          <span *ngIf=\"toolbarTitle\">{{toolbarTitle}}</span>\n        </span>\n        <ng-content select=\"[td-sidenav-toolbar-content]\"></ng-content>\n      </mat-toolbar>\n      <div class=\"td-layout-nav-list-content\" cdkScrollable>\n        <ng-content select=\"[td-sidenav-content]\"></ng-content>\n      </div>\n    </mat-sidenav>\n    <div class=\"td-layout-nav-list-main\">\n      <mat-toolbar [color]=\"color\">\n        <ng-content select=\"[td-toolbar-content]\"></ng-content>\n      </mat-toolbar>\n      <div class=\"td-layout-nav-list-content\" cdkScrollable>\n        <ng-content></ng-content>\n      </div>\n      <ng-content select=\"td-layout-footer-inner\"></ng-content>\n    </div>\n  </mat-sidenav-container>\n</div>\n<ng-content select=\"td-layout-footer\"></ng-content>`,\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '350px';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<void> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<void> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<void> {\n    return this.sidenav.close();\n  }\n\n}\n",
    "import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styles: [`.td-menu-button {\n  margin-left: 0; }\n  ::ng-deep [dir='rtl'] .td-menu-button {\n    margin-right: 0;\n    margin-left: 6px; }\n\n:host {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  margin: 0;\n  width: 100%;\n  min-height: 100%;\n  height: 100%;\n  overflow: hidden; }\n  :host .td-layout-nav-wrapper {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    margin: 0;\n    width: 100%;\n    min-height: 100%;\n    height: 100%; }\n    :host .td-layout-nav-wrapper .td-layout-nav-toolbar-content {\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -ms-flex-line-pack: center;\n          align-content: center;\n      max-width: 100%;\n      -webkit-box-pack: start;\n          -ms-flex-pack: start;\n              justify-content: start; }\n    :host .td-layout-nav-wrapper .td-layout-nav-content {\n      -webkit-box-orient: vertical;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: column;\n              flex-direction: column;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      position: relative;\n      overflow: auto;\n      -webkit-overflow-scrolling: touch; }\n`],\n  template: `<div class=\"td-layout-nav-wrapper\">\n  <mat-toolbar [color]=\"color\">\n    <ng-content select=\"[td-menu-button]\"></ng-content>\n    <span *ngIf=\"icon || logo || toolbarTitle\"\n          [class.cursor-pointer]=\"routerEnabled\"\n          (click)=\"handleNavigationClick()\"\n          class=\"td-layout-nav-toolbar-content\">\n      <mat-icon *ngIf=\"icon\">{{icon}}</mat-icon>\n      <mat-icon *ngIf=\"logo && !icon\" class=\"mat-icon-logo\" [svgIcon]=\"logo\"></mat-icon>\n      <span *ngIf=\"toolbarTitle\">{{toolbarTitle}}</span>\n    </span>\n    <ng-content select=\"[td-toolbar-content]\"></ng-content>\n  </mat-toolbar>\n  <div class=\"td-layout-nav-content\" cdkScrollable>\n    <ng-content></ng-content>\n  </div>\n  <ng-content select=\"td-layout-footer\"></ng-content>\n</div>\n`,\n})\nexport class TdLayoutNavComponent {\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n",
    "import { Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { LayoutToggle } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutToggle') \n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutClose') \n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutOpen') \n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n",
    "import { Input, HostBinding, HostListener, Renderer2, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\n\nimport { MatSidenav } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<void>;\n  open(): Promise<void>;\n  close(): Promise<void>;\n}\n\nexport class LayoutToggleBase { }\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\nexport abstract class LayoutToggle extends _TdLayoutToggleMixinBase implements AfterViewInit, OnDestroy, ICanDisable {\n\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable,\n              private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    super();\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n      this._toggleVisibility();\n    });\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      this.onClick();\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout.sidenav.opened && this._hideWhenOpened) {\n      this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n    } else {\n      this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n    }\n  }\n\n}\n",
    "import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styles: [`:host {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  margin: 0;\n  width: 100%;\n  min-height: 100%;\n  height: 100%;\n  overflow: hidden; }\n  :host ::ng-deep > mat-sidenav-container > mat-sidenav {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column; }\n`],\n  template: `<mat-sidenav-container fullscreen>\n  <mat-sidenav #sidenav\n              class=\"td-layout-sidenav\"\n              [mode]=\"mode\"\n              [opened]=\"opened\"\n              [style.max-width]=\"sidenavWidth\"\n              [style.min-width]=\"sidenavWidth\"\n              [disableClose]=\"disableClose\">\n    <ng-content select=\"td-navigation-drawer\"></ng-content>\n    <ng-content select=\"[td-sidenav-content]\"></ng-content>\n  </mat-sidenav>\n  <ng-content></ng-content>\n</mat-sidenav-container>\n`,\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '320px';\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<void> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<void> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<void> {\n    return this.sidenav.close();\n  }\n\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdJsonFormatterComponent } from './json-formatter.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TdJsonFormatterComponent,\n  ],\n  exports: [\n    TdJsonFormatterComponent,\n  ],\n})\nexport class CovalentJsonFormatterModule {\n\n}\n",
    "import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\nimport { Dir } from '@angular/cdk/bidi';\nimport { TdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-json-formatter',\n  styles: [`:host {\n  display: block; }\n\n.td-json-formatter-wrapper {\n  padding-top: 2px;\n  padding-bottom: 2px; }\n  .td-json-formatter-wrapper .td-key {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -ms-flex-line-pack: center;\n        align-content: center;\n    max-width: 100%;\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: start; }\n    .td-json-formatter-wrapper .td-key.td-key-node:hover {\n      cursor: pointer; }\n  .td-json-formatter-wrapper .td-object-children.ng-animating {\n    overflow: hidden; }\n  .td-json-formatter-wrapper .td-object-children .td-key,\n  .td-json-formatter-wrapper .td-object-children .td-object-children {\n    padding-left: 24px; }\n    ::ng-deep [dir='rtl'] .td-json-formatter-wrapper .td-object-children .td-key, ::ng-deep [dir='rtl']\n    .td-json-formatter-wrapper .td-object-children .td-object-children {\n      padding-right: 24px;\n      padding-left: 0; }\n    .td-json-formatter-wrapper .td-object-children .td-key.td-key-leaf,\n    .td-json-formatter-wrapper .td-object-children .td-object-children.td-key-leaf {\n      padding-left: 48px; }\n      ::ng-deep [dir='rtl'] .td-json-formatter-wrapper .td-object-children .td-key.td-key-leaf, ::ng-deep [dir='rtl']\n      .td-json-formatter-wrapper .td-object-children .td-object-children.td-key-leaf {\n        padding-right: 48px;\n        padding-left: 0; }\n  .td-json-formatter-wrapper .value {\n    margin-left: 5px; }\n    ::ng-deep [dir='rtl'] .td-json-formatter-wrapper .value {\n      padding-right: 5px;\n      padding-left: 0; }\n    .td-json-formatter-wrapper .value .td-empty {\n      opacity: 0.5;\n      text-decoration: line-through; }\n    .td-json-formatter-wrapper .value .string {\n      word-break: break-word; }\n    .td-json-formatter-wrapper .value .date {\n      word-break: break-word; }\n`],\n  template: `<div class=\"td-json-formatter-wrapper\">\n  <a class=\"td-key\"\n     [class.td-key-node]=\"hasChildren()\"\n     [class.td-key-leaf]=\"!hasChildren()\"\n     [tabIndex]=\"isObject()? 0 : -1\"\n     (keydown.enter)=\"toggle()\"\n     (click)=\"toggle()\">\n    <mat-icon class=\"td-node-icon\" *ngIf=\"hasChildren()\">{{open? 'keyboard_arrow_down' : (isRTL ? 'keyboard_arrow_left' : 'keyboard_arrow_right')}}</mat-icon>\n    <span *ngIf=\"key\" class=\"key\">{{key}}:</span>\n    <span class=\"value\">\n      <span [class.td-empty]=\"!hasChildren()\" *ngIf=\"isObject()\" [matTooltip]=\"getPreview()\" matTooltipPosition=\"after\">\n        <span class=\"td-object-name\">{{getObjectName()}}</span>\n        <span class=\"td-array-length\" *ngIf=\"isArray()\">[{{data.length}}]</span>\n      </span>\n      <span *ngIf=\"!isObject()\" [class]=\"getType(data)\">{{getValue(data)}}</span>\n    </span>\n  </a>\n  <div class=\"td-object-children\" [@tdCollapse]=\"!(hasChildren() && open)\">\n    <ng-template let-key ngFor [ngForOf]=\"children\">\n      <td-json-formatter [key]=\"key\" [data]=\"data[key]\" [levelsOpen]=\"levelsOpen - 1\"></td-json-formatter>\n    </ng-template>\n  </div>\n</div>`,\n  animations: [\n    TdCollapseAnimation(),\n  ],\n})\nexport class TdJsonFormatterComponent {\n\n  /**\n   * Max length for property names. Any names bigger than this get trunctated.\n   */\n  private static KEY_MAX_LENGTH: number = 30;\n\n  /**\n   * Max length for preview string. Any names bigger than this get trunctated.\n   */\n  private static PREVIEW_STRING_MAX_LENGTH: number = 80;\n\n  /**\n   * Max tooltip preview elements.\n   */\n  private static PREVIEW_LIMIT: number = 5;\n\n  private _key: string;\n  private _data: any;\n  private _children: string[];\n  private _open: boolean = false;\n  private _levelsOpen: number = 0;\n\n  /**\n   * levelsOpen?: number\n   * Levels opened by default when JS object is formatted and rendered.\n   */\n  @Input('levelsOpen')\n  set levelsOpen(levelsOpen: number) {\n    if (!Number.isInteger(levelsOpen)) {\n      throw new Error('[levelsOpen] needs to be an integer.');\n    }\n    this._levelsOpen = levelsOpen;\n    this._open = levelsOpen > 0;\n  }\n  get levelsOpen(): number {\n    return this._levelsOpen;\n  }\n\n  get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * key?: string\n   * Tag to be displayed next to formatted object.\n   */\n  @Input('key')\n  set key(key: string) {\n    this._key = key;\n  }\n  get key(): string {\n    let elipsis: string = this._key && this._key.length > TdJsonFormatterComponent.KEY_MAX_LENGTH ? '…' : '';\n    return this._key ? this._key.substring(0, TdJsonFormatterComponent.KEY_MAX_LENGTH) + elipsis : this._key;\n  }\n\n  /**\n   * data: any\n   * JS object to be formatted.\n   */\n  @Input('data')\n  set data(data: any) {\n    this._data = data;\n    this.parseChildren();\n  }\n  get data(): any {\n    return this._data;\n  }\n\n  get children(): string[] {\n    return this._children;\n  }\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Dir) {\n  }\n\n  /**\n   * Refreshes json-formatter and rerenders [data]\n   */\n  refresh(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Toggles collapse/expanded state of component.\n   */\n  toggle(): void {\n    this._open = !this._open;\n  }\n\n  isObject(): boolean {\n    return this.getType(this._data) === 'object';\n  }\n\n  isArray(): boolean {\n    return Array.isArray(this._data);\n  }\n\n  hasChildren(): boolean {\n    return this._children && this._children.length > 0;\n  }\n\n  /**\n   * Gets parsed value depending on value type.\n   */\n  getValue(value: any): string {\n    let type: string = this.getType(value);\n    if (type === 'undefined' || (type === 'null')) {\n      return type;\n    } else if (type === 'date') {\n      value = new Date(value).toString();\n    } else if (type === 'string') {\n      value = '\"' + value + '\"';\n    } else if (type === 'function') {\n      // Remove content of the function\n      return value.toString()\n          .replace(/[\\r\\n]/g, '')\n          .replace(/\\{.*\\}/, '') + '{…}';\n    } else if (Array.isArray(value)) {\n      return this.getObjectName() + ' [' + value.length + ']';\n    }\n    return value;\n  }\n\n  /**\n   * Gets type of object.\n   * returns 'null' if object is null and 'date' if value is object and can be parsed to a date.\n   */\n  getType(object: any): string {\n    if (typeof object === 'object') {\n      if (!object) {\n        return 'null';\n      }\n      if (Array.isArray(object)) {\n        return 'object';\n      }\n      let date: Date = new Date(object);\n      if (Object.prototype.toString.call(date) === '[object Date]') {\n        if (!Number.isNaN(date.getTime())) {\n          return 'date';\n        }\n      }\n    }\n    return typeof object;\n  }\n\n  /**\n   * Generates string representation depending if its an object or function.\n   * see: http://stackoverflow.com/a/332429\n   */\n  getObjectName(): string {\n    let object: any = this._data;\n    if (this.isObject() && !object.constructor) {\n        return 'Object';\n    }\n    let funcNameRegex: RegExp = /function (.{1,})\\(/;\n    let results: RegExpExecArray = (funcNameRegex).exec((object).constructor.toString());\n    if (results && results.length > 1) {\n      return results[1];\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Creates preview of nodes children to render in tooltip depending if its an array or an object.\n   */\n  getPreview(): string {\n    let previewData: string[];\n    let startChar: string = '{ ';\n    let endChar: string = ' }';\n    if (this.isArray()) {\n      let previewArray: any[] = this._data.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewArray.map((obj: any) => {\n        return this.getValue(obj);\n      });\n      startChar = '[';\n      endChar = ']';\n    } else {\n      let previewKeys: string[] = this._children.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewKeys.map((key: string) => {\n        return key + ': ' + this.getValue(this._data[key]);\n      });\n    }\n    let previewString: string =  previewData.join(', ');\n    let ellipsis: string = previewData.length >= TdJsonFormatterComponent.PREVIEW_LIMIT ||\n                           previewString.length > TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH ? '…' : '';\n    return startChar + previewString.substring(0, TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH) +\n           ellipsis + endChar;\n  }\n\n  private parseChildren(): void {\n    if (this.isObject()) {\n      this._children = [];\n      for (let key in this._data) {\n        this._children.push(key);\n      }\n    }\n  }\n\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdFileSelectDirective } from './directives/file-select.directive';\nimport { TdFileDropDirective } from './directives/file-drop.directive';\nimport { TdFileUploadComponent } from './file-upload/file-upload.component';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';\nimport { TdFileService } from './services/file.service';\n\nconst TD_FILE: Type<any>[] = [\n  TdFileSelectDirective,\n  TdFileDropDirective,\n  TdFileUploadComponent,\n  TdFileInputComponent,\n  TdFileInputLabelDirective,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_FILE,\n  ],\n  exports: [\n    TD_FILE,\n  ],\n  providers: [\n    TdFileService,\n  ],\n})\nexport class CovalentFileModule {\n\n}\n",
    "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscriber } from 'rxjs/Subscriber';\n\nexport interface IUploadOptions {\n  url: string;\n  method: 'post' | 'put';\n  file?: File;\n  headers?: {[key: string]: string};\n  formData?: FormData;\n}\n\n@Injectable()\nexport class TdFileService {\n\n  private _progressSubject: Subject<number> = new Subject<number>();\n  private _progressObservable: Observable<number>;\n\n  /**\n   * Gets progress observable to keep track of the files being uploaded.\n   * Needs to be supported by backend.\n   */\n  get progress(): Observable<number> {\n    return this._progressObservable;\n  }\n\n  constructor() {\n    this._progressObservable = this._progressSubject.asObservable();\n  }\n\n  /**\n   * params:\n   * - options: IUploadOptions {\n   *     url: string,\n   *     method: 'post' | 'put',\n   *     file?: File,\n   *     headers?: {[key: string]: string},\n   *     formData?: FormData\n   * }\n   *\n   * Uses underlying [XMLHttpRequest] to upload a file to a url.\n   * Will be depricated when angular fixes [Http] to allow [FormData] as body.\n   */\n  upload(options: IUploadOptions): Observable<any> {\n    return new Observable<any>((subscriber: Subscriber<any>) => {\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\n      let formData: FormData = new FormData();\n\n      if (options.file !== undefined) {\n        formData.append('file', options.file);\n      } else if (options.formData !== undefined) {\n        formData = options.formData;\n      } else {\n        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');\n      }\n\n      xhr.upload.onprogress = (event: ProgressEvent) => {\n        let progress: number = 0;\n        if (event.lengthComputable) {\n          progress = Math.round(event.loaded / event.total * 100);\n        }\n        this._progressSubject.next(progress);\n      };\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            subscriber.next(xhr.response);\n            subscriber.complete();\n          } else {\n            subscriber.error(xhr.response);\n          }\n        }\n      };\n\n      xhr.open(options.method, options.url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      if (options.headers) {\n        for (let key in options.headers) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        }\n      }\n\n      xhr.send(formData);\n    });\n  }\n}\n",
    "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild, ContentChild, ChangeDetectorRef,\n  forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport class TdFileUploadBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdFileUploadComponent),\n    multi: true,\n  }],\n  selector: 'td-file-upload',\n  inputs: ['disabled', 'value'],\n  styles: [`.td-file-upload {\n  padding-left: 8px;\n  padding-right: 8px; }\n\n.td-file-upload-cancel {\n  height: 24px;\n  width: 24px;\n  position: relative;\n  top: 24px;\n  left: -12px; }\n  ::ng-deep [dir='rtl'] .td-file-upload-cancel {\n    right: -12px;\n    left: 0; }\n  .td-file-upload-cancel mat-icon {\n    border-radius: 12px;\n    vertical-align: baseline; }\n\n/**\n* Class that is added ondragenter by the [TdFileDrop] directive.\n*/\n.drop-zone {\n  border-radius: 3px; }\n  .drop-zone * {\n    pointer-events: none; }\n`],\n  template: `<td-file-input *ngIf=\"!value\"\n               [(ngModel)]=\"value\"\n               [multiple]=\"multiple\"\n               [disabled]=\"disabled\"\n               [accept]=\"accept\"\n               [color]=\"defaultColor\"\n               (select)=\"handleSelect($event)\">\n  <ng-template [cdkPortalHost]=\"inputLabel\" [ngIf]=\"true\"></ng-template>\n</td-file-input>\n<div *ngIf=\"value\">\n  <button #fileUpload\n          class=\"td-file-upload\"\n          mat-raised-button\n          type=\"button\"\n          [color]=\"activeColor\"\n          (keyup.delete)=\"cancel()\"\n          (keyup.backspace)=\"cancel()\"\n          (keyup.escape)=\"cancel()\"\n          (click)=\"uploadPressed()\"> \n    <ng-content></ng-content>\n  </button>\n  <button mat-icon-button\n          type=\"button\"\n          class=\"td-file-upload-cancel\"\n          [color]=\"cancelColor\"            \n          (click)=\"cancel()\">\n    <mat-icon>cancel</mat-icon>\n  </button>\n</div>`,\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {\n\n  private _multiple: boolean = false;\n  private _required: boolean = false;\n\n  @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: string\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input('defaultColor') defaultColor: string = 'primary';\n\n  /**\n   * activeColor?: string\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input('activeColor') activeColor: string = 'accent';\n\n  /**\n   * cancelColor?: string\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input('cancelColor') cancelColor: string = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * required?: boolean\n   * Forces at least one file upload.\n   * Defaults to 'false'\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.value) {\n      this.onUpload.emit(this.value);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(value: File | FileList): void {\n    this.value = value;\n    this.onSelect.emit(value);\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.value = undefined;\n    this.onCancel.emit(undefined);\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.cancel();\n    }\n  }\n}\n",
    "import { Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild,\n         ElementRef, Renderer2, TemplateRef, ViewContainerRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-file-input-label]ng-template',\n})\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdFileInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdFileInputComponent),\n    multi: true,\n  }],\n  selector: 'td-file-input',\n  inputs: ['disabled', 'value'],\n  styles: [`:host {\n  /**\n  * Class that is added ondragenter by the [TdFileDrop] directive.\n  */ }\n  :host .td-file-input {\n    padding-left: 8px;\n    padding-right: 8px; }\n  :host input.td-file-input-hidden {\n    display: none; }\n  :host .drop-zone {\n    border-radius: 3px; }\n    :host .drop-zone * {\n      pointer-events: none; }\n`],\n  template: `<div>\n  <button mat-raised-button\n          class=\"td-file-input\"\n          type=\"button\"\n          [color]=\"color\" \n          [multiple]=\"multiple\" \n          [disabled]=\"disabled\"\n          (keyup.enter)=\"fileInput.click()\"\n          (click)=\"fileInput.click()\"\n          (fileDrop)=\"handleSelect($event)\"\n          tdFileDrop>\n    <ng-content></ng-content>\n  </button>\n  <input #fileInput \n          class=\"td-file-input-hidden\" \n          type=\"file\"\n          [attr.accept]=\"accept\"                \n          (fileSelect)=\"handleSelect($event)\"\n          [multiple]=\"multiple\" \n          [disabled]=\"disabled\"\n          tdFileSelect>\n</div>`,\n})\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {\n\n  private _multiple: boolean = false;\n\n  /** The native `<input type=\"file\"> element */\n  @ViewChild('fileInput') _inputElement: ElementRef;\n  get inputElement(): HTMLInputElement {\n    return this._inputElement.nativeElement;\n  }\n\n  /**\n   * color?: string\n   * Sets button color. Uses same color palette accepted as [MatButton].\n   */\n  @Input('color') color: string;\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted a file is selected\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.writeValue(files);\n    this.onSelect.emit(files);\n  }\n\n  /**\n   * Used to clear the selected files from the [TdFileInputComponent].\n   */\n  clear(): void {\n    this.writeValue(undefined);\n    this._renderer.setProperty(this.inputElement, 'value', '');\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.clear();\n    }\n  }\n\n}\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nexport class TdFileDropBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\n\n@Directive({\n  selector: '[tdFileDrop]',\n  inputs: ['disabled'],\n})\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\n\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileDrop?: function\n   * Event emitted when a file or files are dropped in host element after being validated.\n   * Emits a [FileList | File] object.\n   */\n  @Output('fileDrop') onFileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  /**\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\n   */\n  @HostBinding('attr.disabled')\n  get disabledBinding(): string {\n    return this.disabled ? '' : undefined;\n  }\n\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\n    super();\n  }\n\n  /**\n   * Listens to 'drop' host event to get validated transfer items.\n   * Emits the 'onFileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Stops event propagation and default action from browser for 'drop' event.\n   */\n  @HostListener('drop', ['$event'])\n  onDrop(event: Event): void {\n    if (!this.disabled) {\n      let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n      let files: FileList = transfer.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.onFileDrop.emit(value);\n      }\n    }\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragover' host event to validate transfer items.\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\n   * Stops event propagation and default action from browser for 'dragover' event.\n   */\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: Event): void {\n    let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n    transfer.dropEffect = this._typeCheck(transfer.types);\n    if (this.disabled || (!this._multiple &&\n      ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {\n      transfer.dropEffect = 'none';\n    } else {\n      transfer.dropEffect = 'copy';\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\n   * Stops event propagation and default action from browser for 'dragenter' event.\n   */\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(event: Event): void {\n    if (!this.disabled) {\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\n   * Stops event propagation and default action from browser for 'dragleave' event.\n   */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: Event): void {\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Validates if the transfer item types are 'Files'.\n   */\n  private _typeCheck(types: string[] | DOMStringList): string {\n    let dropEffect: string = 'none';\n    if (types) {\n      if (((<any>types).contains && (<any>types).contains('Files'))\n      || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {\n        dropEffect = 'copy';\n      }\n    }\n    return dropEffect;\n  }\n\n  private _stopEvent(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, Host, Optional } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdFileSelect]',\n})\nexport class TdFileSelectDirective {\n\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be selected at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileSelect?: function\n   * Event emitted when a file or files are selected in host [HTMLInputElement].\n   * Emits a [FileList | File] object.\n   * Alternative to not use [(ngModel)].\n   */\n  @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  constructor(@Optional() @Host() private model: NgModel) {\n  }\n\n  /**\n   * Listens to 'change' host event to get [HTMLInputElement] files.\n   * Emits the 'onFileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Uses [(ngModel)] if declared, instead of emitting 'onFileSelect' event.\n   */\n  @HostListener('change', ['$event'])\n  onChange(event: Event): void {\n    if (event.target instanceof HTMLInputElement) {\n      let fileInputEl: HTMLInputElement = (<HTMLInputElement>event.target);\n      let files: FileList = fileInputEl.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);\n      }\n    }\n  }\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdExpansionPanelComponent, TdExpansionPanelHeaderDirective, TdExpansionPanelLabelDirective,\n         TdExpansionPanelSublabelDirective, TdExpansionPanelSummaryComponent } from './expansion-panel.component';\nimport { TdExpansionPanelGroupComponent } from './expansion-panel-group.component';\n\nconst TD_EXPANSION_PANEL: Type<any>[] = [\n  TdExpansionPanelGroupComponent,\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    MatIconModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_EXPANSION_PANEL,\n  ],\n  exports: [\n    TD_EXPANSION_PANEL,\n  ],\n})\nexport class CovalentExpansionPanelModule {\n\n}\n",
    "import { Component, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'td-expansion-panel-group',\n  styles: [``],\n  template: `<ng-content></ng-content>`,\n})\nexport class TdExpansionPanelGroupComponent {\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel-group');\n  }\n\n}\n",
    "import { Component, Directive, Input, Output, TemplateRef, ViewContainerRef, ContentChild,\n         ElementRef, Renderer2 } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  TdCollapseAnimation,\n  ICanDisable,\n  mixinDisabled,\n  ICanDisableRipple,\n  mixinDisableRipple,\n  TdRotateAnimation,\n} from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-expansion-panel-header]ng-template',\n})\nexport class TdExpansionPanelHeaderDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-label]ng-template',\n})\nexport class TdExpansionPanelLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-sublabel]ng-template',\n})\nexport class TdExpansionPanelSublabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Component({\n  selector: 'td-expansion-summary',\n  template: '<ng-content></ng-content>',\n})\nexport class TdExpansionPanelSummaryComponent {}\n\nexport class TdExpansionPanelBase {}\n\n/* tslint:disable-next-line */\nexport const _TdExpansionPanelMixinBase = mixinDisableRipple(mixinDisabled(TdExpansionPanelBase));\n\n@Component({\n  selector: 'td-expansion-panel',\n  styles: [`:host {\n  display: block; }\n  :host .td-expansion-panel-header {\n    position: relative;\n    outline: none; }\n    :host .td-expansion-panel-header:focus:not(.mat-disabled), :host .td-expansion-panel-header:hover:not(.mat-disabled) {\n      cursor: pointer; }\n    :host .td-expansion-panel-header .td-expansion-panel-header-content {\n      height: 48px;\n      padding: 0 24px;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      -webkit-box-pack: start;\n          -ms-flex-pack: start;\n              justify-content: start;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -ms-flex-line-pack: center;\n          align-content: center;\n      max-width: 100%; }\n      :host .td-expansion-panel-header .td-expansion-panel-header-content .td-expansion-label,\n      :host .td-expansion-panel-header .td-expansion-panel-header-content .td-expansion-sublabel {\n        -webkit-box-flex: 1;\n            -ms-flex: 1;\n                flex: 1; }\n  :host .td-expansion-content.ng-animating,\n  :host .td-expansion-summary.ng-animating {\n    overflow: hidden; }\n\n.td-expansion-label,\n.td-expansion-sublabel {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-right: 16px; }\n  ::ng-deep [dir='rtl'] .td-expansion-label, ::ng-deep [dir='rtl']\n  .td-expansion-sublabel {\n    margin-left: 16px;\n    margin-right: inherit; }\n`],\n  template: `<div class=\"td-expansion-panel-header\"\n      [class.mat-disabled]=\"disabled\"\n      matRipple\n      [matRippleDisabled]=\"disabled || disableRipple\"\n      [tabIndex]=\"disabled? -1 : 0\"\n      (keydown.enter)=\"clickEvent()\"\n      (click)=\"clickEvent()\">\n  <ng-template [cdkPortalHost]=\"expansionPanelHeader\"></ng-template>\n  <div class=\"td-expansion-panel-header-content\"\n        [class.mat-disabled]=\"disabled\"\n        *ngIf=\"!expansionPanelHeader\">\n    <div *ngIf=\"label || expansionPanelLabel\" class=\"td-expansion-label\">\n      <ng-template [cdkPortalHost]=\"expansionPanelLabel\"></ng-template>\n      <ng-template [ngIf]=\"!expansionPanelLabel\">{{label}}</ng-template>\n    </div>\n    <div *ngIf=\"sublabel || expansionPanelSublabel\" class=\"td-expansion-sublabel\">\n      <ng-template [cdkPortalHost]=\"expansionPanelSublabel\"></ng-template>\n      <ng-template [ngIf]=\"!expansionPanelSublabel\">{{sublabel}}</ng-template>\n    </div>\n    <mat-icon class=\"td-expand-icon\" *ngIf=\"!disabled\" [@tdRotate]=\"expand\">keyboard_arrow_down</mat-icon>\n  </div>\n</div>\n<div class=\"td-expansion-content\"\n      [@tdCollapse]=\"!expand\">\n  <ng-content></ng-content>\n</div>\n<div class=\"td-expansion-summary\"\n      [@tdCollapse]=\"expand\">\n  <ng-content select=\"td-expansion-summary\"></ng-content>\n</div>\n`,\n  inputs: ['disabled', 'disableRipple'],\n  animations: [\n    TdCollapseAnimation(),\n    TdRotateAnimation({ anchor: 'tdRotate' }),\n  ],\n})\nexport class TdExpansionPanelComponent extends _TdExpansionPanelMixinBase implements ICanDisable, ICanDisableRipple {\n\n  private _expand: boolean = false;\n\n  @ContentChild(TdExpansionPanelHeaderDirective) expansionPanelHeader: TdExpansionPanelHeaderDirective;\n  @ContentChild(TdExpansionPanelLabelDirective) expansionPanelLabel: TdExpansionPanelLabelDirective;\n  @ContentChild(TdExpansionPanelSublabelDirective) expansionPanelSublabel: TdExpansionPanelSublabelDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdExpansionPanelComponent] header.\n   * Defaults to 'Click to expand'\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdExpansionPanelComponent] header.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * expand?: boolean\n   * Toggles [TdExpansionPanelComponent] between expand/collapse.\n   */\n  @Input('expand')\n  set expand(expand: boolean) {\n    this._setExpand(coerceBooleanProperty(expand));\n  }\n  get expand(): boolean {\n    return this._expand;\n  }\n\n  /**\n   * expanded?: function\n   * Event emitted when [TdExpansionPanelComponent] is expanded.\n   */\n  @Output() expanded: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * collapsed?: function\n   * Event emitted when [TdExpansionPanelComponent] is collapsed.\n   */\n  @Output() collapsed: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    super();\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel');\n  }\n\n  /**\n   * Method executed when [TdExpansionPanelComponent] is clicked.\n   */\n  clickEvent(): void {\n    this._setExpand(!this._expand);\n  }\n\n  /**\n   * Toggle expand state of [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setExpand(!this._expand);\n  }\n\n  /**\n   * Opens [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setExpand(true);\n  }\n\n  /**\n   * Closes [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setExpand(false);\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._expand) {\n      this._expand = false;\n      this._onCollapsed();\n    }\n  }\n\n  /**\n   * Method to change expand state internally and emit the [onExpanded] event if 'true' or [onCollapsed]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   */\n  private _setExpand(newExpand: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._expand !== newExpand) {\n      this._expand = newExpand;\n      if (newExpand) {\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onExpanded();\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onCollapsed();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onExpanded(): void {\n    this.expanded.emit(undefined);\n  }\n\n  private _onCollapsed(): void {\n    this.collapsed.emit(undefined);\n  }\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdDialogComponent, TdDialogTitleDirective,\n         TdDialogActionsDirective, TdDialogContentDirective } from './dialog.component';\nimport { TdAlertDialogComponent } from './alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from './prompt-dialog/prompt-dialog.component';\nimport { DIALOG_PROVIDER } from './services/dialog.service';\n\nconst TD_DIALOGS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n];\n\nconst TD_DIALOGS_ENTRY_COMPONENTS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatDialogModule,\n    MatInputModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TD_DIALOGS,\n  ],\n  exports: [\n    TD_DIALOGS,\n  ],\n  providers: [\n    DIALOG_PROVIDER,\n  ],\n  entryComponents: [\n    TD_DIALOGS_ENTRY_COMPONENTS,\n  ],\n})\nexport class CovalentDialogsModule {\n\n}\n",
    "import { Injectable, ViewContainerRef, Provider, SkipSelf, Optional } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\n\nimport { TdAlertDialogComponent } from '../alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from '../prompt-dialog/prompt-dialog.component';\n\nexport interface IDialogConfig extends MatDialogConfig {\n  title?: string;\n  message: string;\n}\n\nexport interface IAlertConfig extends IDialogConfig {\n  closeButton?: string;\n}\n\nexport interface IConfirmConfig extends IDialogConfig {\n  acceptButton?: string;\n  cancelButton?: string;\n}\n\nexport interface IPromptConfig extends IConfirmConfig {\n  value?: string;\n}\n\n@Injectable()\nexport class TdDialogService {\n\n  constructor(private _dialogService: MatDialog) {}\n\n  /**\n   * params:\n   * - component: ComponentType<T>\n   * - config: MatDialogConfig\n   * Wrapper function over the open() method in MatDialog.\n   * Opens a modal dialog containing the given component.\n   */\n  public open<T>(component: ComponentType<T>, config?: MatDialogConfig): MatDialogRef<T> {\n    return this._dialogService.open(component, config);\n  }\n\n  /**\n   * Wrapper function over the closeAll() method in MatDialog.\n   * Closes all of the currently-open dialogs.\n   */\n  public closeAll(): void {\n    this._dialogService.closeAll();\n  }\n\n  /**\n   * params:\n   * - config: IAlertConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     closeButton?: string;\n   * }\n   *\n   * Opens an alert dialog with the provided config.\n   * Returns an MatDialogRef<TdAlertDialogComponent> object.\n   */\n  public openAlert(config: IAlertConfig): MatDialogRef<TdAlertDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdAlertDialogComponent> =\n      this._dialogService.open(TdAlertDialogComponent, dialogConfig);\n    let alertDialogComponent: TdAlertDialogComponent = dialogRef.componentInstance;\n    alertDialogComponent.title = config.title;\n    alertDialogComponent.message = config.message;\n    if (config.closeButton) {\n      alertDialogComponent.closeButton = config.closeButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IConfirmConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a confirm dialog with the provided config.\n   * Returns an MatDialogRef<TdConfirmDialogComponent> object.\n   */\n  public openConfirm(config: IConfirmConfig): MatDialogRef<TdConfirmDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdConfirmDialogComponent> =\n      this._dialogService.open(TdConfirmDialogComponent, dialogConfig);\n    let confirmDialogComponent: TdConfirmDialogComponent = dialogRef.componentInstance;\n    confirmDialogComponent.title = config.title;\n    confirmDialogComponent.message = config.message;\n    if (config.acceptButton) {\n      confirmDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      confirmDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IPromptConfig {\n   *     message: string;\n   *     title?: string;\n   *     value?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a prompt dialog with the provided config.\n   * Returns an MatDialogRef<TdPromptDialogComponent> object.\n   */\n  public openPrompt(config: IPromptConfig): MatDialogRef<TdPromptDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdPromptDialogComponent> =\n      this._dialogService.open(TdPromptDialogComponent, dialogConfig);\n    let promptDialogComponent: TdPromptDialogComponent = dialogRef.componentInstance;\n    promptDialogComponent.title = config.title;\n    promptDialogComponent.message = config.message;\n    promptDialogComponent.value = config.value;\n    if (config.acceptButton) {\n      promptDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      promptDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  private _createConfig(config: IDialogConfig): MatDialogConfig {\n    let dialogConfig: MatDialogConfig = new MatDialogConfig();\n    dialogConfig.width = '400px';\n    Object.assign(dialogConfig, config);\n    return dialogConfig;\n  }\n\n}\n\nexport function DIALOG_PROVIDER_FACTORY(\n    parent: TdDialogService, dialog: MatDialog): TdDialogService {\n  return parent || new TdDialogService(dialog);\n}\n\nexport const DIALOG_PROVIDER: Provider = {\n  // If there is already service available, use that. Otherwise, provide a new one.\n  provide: TdDialogService,\n  deps: [[new Optional(), new SkipSelf(), TdDialogService], MatDialog],\n  useFactory: DIALOG_PROVIDER_FACTORY,\n};\n",
    "import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-prompt-dialog',\n  template: `<td-dialog>\n  <td-dialog-title *ngIf=\"title\">\n    {{title}}\n  </td-dialog-title>\n  <td-dialog-content>\n    <span class=\"td-dialog-message\">{{message}}</span>\n    <form #form=\"ngForm\" novalidate>\n      <div class=\"td-dialog-input-wrapper\">\n        <mat-form-field class=\"td-dialog-input\">\n          <input matInput\n                #input\n                (focus)=\"handleInputFocus()\"\n                (keydown.enter)=\"$event.preventDefault(); form.valid && accept()\"\n                [(ngModel)]=\"value\"\n                name=\"value\"\n                required/>\n        </mat-form-field>\n      </div>\n    </form>\n  </td-dialog-content>\n  <td-dialog-actions>\n    <button mat-button\n            #closeBtn \n            (keydown.arrowright)=\"acceptBtn.focus()\"\n            (click)=\"cancel()\">{{cancelButton}}</button>\n    <button mat-button\n            color=\"accent\"\n            #acceptBtn\n            (keydown.arrowleft)=\"closeBtn.focus()\"\n            [disabled]=\"!form.valid\"\n            (click)=\"accept()\">{{acceptButton}}</button>\n  </td-dialog-actions>\n</td-dialog>`,\n  styles: [`.td-dialog-input-wrapper {\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex; }\n  .td-dialog-input-wrapper .td-dialog-input {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box; }\n\n.td-dialog-message {\n  word-break: break-word; }\n`],\n})\nexport class TdPromptDialogComponent implements AfterViewInit {\n  title: string;\n  message: string;\n  value: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  @ViewChild('input') _input: ElementRef;\n\n  constructor(private _dialogRef: MatDialogRef<TdPromptDialogComponent>) {}\n\n  ngAfterViewInit(): void {\n    // focus input once everything is rendered and good to go\n    Promise.resolve().then(() => {\n      (<HTMLInputElement>this._input.nativeElement).focus();\n    });\n  }\n\n  /**\n   * Method executed when input is focused\n   * Selects all text\n   */\n  handleInputFocus(): void {\n    (<HTMLInputElement>this._input.nativeElement).select();\n  }\n\n  cancel(): void {\n    this._dialogRef.close(undefined);\n  }\n\n  accept(): void {\n    this._dialogRef.close(this.value);\n  }\n}\n",
    "import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-confirm-dialog',\n  template: `<td-dialog>\n  <td-dialog-title *ngIf=\"title\">\n    {{title}}\n  </td-dialog-title>\n  <td-dialog-content>\n    <span class=\"td-dialog-message\">{{message}}</span>\n  </td-dialog-content>\n  <td-dialog-actions>\n    <button mat-button\n            #closeBtn \n            (keydown.arrowright)=\"acceptBtn.focus()\"\n            (click)=\"cancel()\">{{cancelButton}}</button>\n    <button mat-button\n            color=\"accent\"\n            #acceptBtn\n            (keydown.arrowleft)=\"closeBtn.focus()\"\n            (click)=\"accept()\">{{acceptButton}}</button>\n  </td-dialog-actions>\n</td-dialog>`,\n  styles: [`.td-dialog-message {\n  word-break: break-word; }\n`],\n})\nexport class TdConfirmDialogComponent {\n  title: string;\n  message: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  constructor(private _dialogRef: MatDialogRef<TdConfirmDialogComponent>) {}\n\n  cancel(): void {\n    this._dialogRef.close(false);\n  }\n\n  accept(): void {\n    this._dialogRef.close(true);\n  }\n}\n",
    "import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-alert-dialog',\n  template: `<td-dialog>\n  <td-dialog-title *ngIf=\"title\">\n    {{title}}\n  </td-dialog-title>\n  <td-dialog-content>\n    <span class=\"td-dialog-message\">{{message}}</span>\n  </td-dialog-content>\n  <td-dialog-actions>\n    <button mat-button color=\"accent\" (click)=\"close()\">{{closeButton}}</button>\n  </td-dialog-actions>\n</td-dialog>`,\n  styles: [`.td-dialog-message {\n  word-break: break-word; }\n`],\n})\nexport class TdAlertDialogComponent {\n  title: string;\n  message: string;\n  closeButton: string = 'CLOSE';\n\n  constructor(private _dialogRef: MatDialogRef<TdAlertDialogComponent>) {}\n\n  close(): void {\n    this._dialogRef.close();\n  }\n}\n",
    "import { Component, Directive, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\n\n@Directive({selector: 'td-dialog-title'})\nexport class TdDialogTitleDirective {}\n\n@Directive({selector: 'td-dialog-content'})\nexport class TdDialogContentDirective {}\n\n@Directive({selector: 'td-dialog-actions'})\nexport class TdDialogActionsDirective {}\n\n@Component({\n  selector: 'td-dialog',\n  template: `<div class=\"td-dialog-wrapper\">\n  <h3 class=\"td-dialog-title\" *ngIf=\"dialogTitle.length > 0\">\n    <ng-content select=\"td-dialog-title\"></ng-content>\n  </h3>\n  <div class=\"td-dialog-content\" *ngIf=\"dialogContent.length > 0\">\n    <ng-content select=\"td-dialog-content\"></ng-content>\n  </div>\n  <div class=\"td-dialog-actions\" *ngIf=\"dialogActions.length > 0\">\n    <span class=\"td-dialog-spacer\"></span>\n    <ng-content select=\"td-dialog-actions\"></ng-content>\n  </div>\n</div>`,\n  styles: [`.td-dialog-title {\n  margin-top: 0;\n  margin-bottom: 20px; }\n\n.td-dialog-content {\n  margin-bottom: 16px; }\n\n.td-dialog-actions {\n  position: relative;\n  top: 16px;\n  left: 16px; }\n  ::ng-deep [dir='rtl'] .td-dialog-actions {\n    right: 16px;\n    left: auto; }\n\n:host {\n  display: block; }\n  :host .td-dialog-actions {\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; }\n    :host .td-dialog-actions .td-dialog-spacer {\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1; }\n    :host .td-dialog-actions ::ng-deep button {\n      text-transform: uppercase;\n      margin-left: 8px;\n      padding-left: 8px;\n      padding-right: 8px;\n      min-width: 64px; }\n      [dir='rtl'] :host .td-dialog-actions ::ng-deep button {\n        margin-right: 8px;\n        margin-left: inherit; }\n`],\n})\nexport class TdDialogComponent implements AfterContentInit {\n\n  @ContentChildren(TdDialogTitleDirective) dialogTitle: QueryList<TdDialogTitleDirective>;\n  @ContentChildren(TdDialogContentDirective) dialogContent: QueryList<TdDialogContentDirective>;\n  @ContentChildren(TdDialogActionsDirective) dialogActions: QueryList<TdDialogActionsDirective>;\n\n  ngAfterContentInit(): void {\n    if (this.dialogTitle.length > 1) {\n      throw new Error('Duplicate td-dialog-title component at in td-dialog.');\n    }\n    if (this.dialogContent.length > 1) {\n      throw new Error('Duplicate td-dialog-content component at in td-dialog.');\n    }\n    if (this.dialogActions.length > 1) {\n      throw new Error('Duplicate td-dialog-actions component at in td-dialog.');\n    }\n  }\n\n}\n",
    "import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\nimport { TdDataTableComponent } from './data-table.component';\nimport { TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableCellComponent } from './data-table-cell/data-table-cell.component';\nimport { TdDataTableRowComponent, TdDataTableColumnRowComponent } from './data-table-row/data-table-row.component';\nimport { TdDataTableTableComponent } from './data-table-table/data-table-table.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { DATA_TABLE_PROVIDER } from './services/data-table.service';\n\nconst TD_DATA_TABLE: Type<any>[] = [\n  TdDataTableComponent,\n  TdDataTableTemplateDirective,\n\n  TdDataTableColumnComponent,\n  TdDataTableCellComponent,\n  TdDataTableRowComponent,\n  TdDataTableColumnRowComponent,\n  TdDataTableTableComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatPseudoCheckboxModule,\n  ],\n  declarations: [\n    TD_DATA_TABLE,\n  ],\n  exports: [\n    TD_DATA_TABLE,\n  ],\n  providers: [\n    DATA_TABLE_PROVIDER,\n  ],\n})\nexport class CovalentDataTableModule {\n\n}\n",
    "import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\n\nimport { TdDataTableSortingOrder, ITdDataTableColumn } from '../data-table.component';\n\n@Injectable()\nexport class TdDataTableService {\n\n  /**\n   * params:\n   * - data: any[]\n   * - searchTerm: string\n   * - ignoreCase: boolean = false\n   * - excludedColumns: string[] = []\n   *\n   * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\n   */\n  filterData(data: any[], searchTerm: string, ignoreCase: boolean = false, excludedColumns?: string[]): any[] {\n    let filter: string = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\n    if (filter) {\n      data = data.filter((item: any) => {\n        const res: any = Object.keys(item).find((key: string) => {\n          if (!excludedColumns || excludedColumns.indexOf(key) === -1) {\n            const preItemValue: string = ('' + item[key]);\n            const itemValue: string = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n            return itemValue.indexOf(filter) > -1;\n          }\n        });\n        return !(typeof res === 'undefined');\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - sortBy: string\n   * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\n   *\n   * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\n   */\n  sortData(data: any[], sortBy: string, sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending): any[] {\n    if (sortBy) {\n      data = Array.from(data); // Change the array reference to trigger OnPush and not mutate original array\n      data.sort((a: any, b: any) => {\n        let compA: any = a[sortBy];\n        let compB: any = b[sortBy];\n        let direction: number = 0;\n        if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\n          direction = Number.parseFloat(compA) - Number.parseFloat(compB);\n        } else {\n          if (compA < compB) {\n            direction = -1;\n          } else if (compA > compB) {\n            direction = 1;\n          }\n        }\n        return direction * (sortOrder === TdDataTableSortingOrder.Descending ? -1 : 1);\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - fromRow: number\n   * - toRow: : number\n   *\n   * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\n   */\n  pageData(data: any[], fromRow: number, toRow: number): any[] {\n    if (fromRow >= 1) {\n      data = data.slice(fromRow - 1, toRow);\n    }\n    return data;\n  }\n}\n\nexport function DATA_TABLE_PROVIDER_FACTORY(\n    parent: TdDataTableService): TdDataTableService {\n  return parent || new TdDataTableService();\n}\n\nexport const DATA_TABLE_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdDataTableService,\n  deps: [[new Optional(), new SkipSelf(), TdDataTableService]],\n  useFactory: DATA_TABLE_PROVIDER_FACTORY,\n};\n",
    "import { Component, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'table[td-data-table]',\n  styles: [`:host {\n  width: 100%;\n  position: relative;\n  border-spacing: 0;\n  overflow: hidden;\n  border-collapse: collapse; }\n`],\n  template: `<ng-content></ng-content>`,\n})\nexport class TdDataTableTableComponent {\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table');\n  }\n\n}\n",
    "import { Component, Input, Renderer2, ElementRef, HostBinding } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td[td-data-table-cell]',\n  styles: [`:host {\n  vertical-align: middle;\n  text-align: left;\n  padding: 0; }\n  html[dir=rtl] :host {\n    text-align: right;\n    unicode-bidi: embed; }\n  body[dir=rtl] :host {\n    text-align: right;\n    unicode-bidi: embed; }\n  [dir=rtl] :host {\n    text-align: right;\n    unicode-bidi: embed; }\n  :host bdo[dir=rtl] {\n    direction: rtl;\n    unicode-bidi: bidi-override; }\n  :host bdo[dir=ltr] {\n    direction: ltr;\n    unicode-bidi: bidi-override; }\n  :host > .td-data-table-cell-content-wrapper {\n    padding: 0 28px;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -ms-flex-line-pack: center;\n        align-content: center;\n    max-width: 100%;\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: start; }\n    :host > .td-data-table-cell-content-wrapper.td-data-table-cell-numeric {\n      -webkit-box-pack: end;\n          -ms-flex-pack: end;\n              justify-content: flex-end; }\n  :host:first-child > .td-data-table-cell-content-wrapper {\n    padding-left: 24px;\n    padding-right: initial; }\n    html[dir=rtl] :host:first-child > .td-data-table-cell-content-wrapper {\n      padding-left: initial;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host:first-child > .td-data-table-cell-content-wrapper {\n      padding-left: initial;\n      unicode-bidi: embed; }\n    [dir=rtl] :host:first-child > .td-data-table-cell-content-wrapper {\n      padding-left: initial;\n      unicode-bidi: embed; }\n    :host:first-child > .td-data-table-cell-content-wrapper bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host:first-child > .td-data-table-cell-content-wrapper bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n    html[dir=rtl] :host:first-child > .td-data-table-cell-content-wrapper {\n      padding-right: 24px;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host:first-child > .td-data-table-cell-content-wrapper {\n      padding-right: 24px;\n      unicode-bidi: embed; }\n    [dir=rtl] :host:first-child > .td-data-table-cell-content-wrapper {\n      padding-right: 24px;\n      unicode-bidi: embed; }\n    :host:first-child > .td-data-table-cell-content-wrapper bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host:first-child > .td-data-table-cell-content-wrapper bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n  :host:last-child > .td-data-table-cell-content-wrapper {\n    padding-left: 28px;\n    padding-right: 24px; }\n    html[dir=rtl] :host:last-child > .td-data-table-cell-content-wrapper {\n      padding-left: 24px;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host:last-child > .td-data-table-cell-content-wrapper {\n      padding-left: 24px;\n      unicode-bidi: embed; }\n    [dir=rtl] :host:last-child > .td-data-table-cell-content-wrapper {\n      padding-left: 24px;\n      unicode-bidi: embed; }\n    :host:last-child > .td-data-table-cell-content-wrapper bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host:last-child > .td-data-table-cell-content-wrapper bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n    html[dir=rtl] :host:last-child > .td-data-table-cell-content-wrapper {\n      padding-right: 28px;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host:last-child > .td-data-table-cell-content-wrapper {\n      padding-right: 28px;\n      unicode-bidi: embed; }\n    [dir=rtl] :host:last-child > .td-data-table-cell-content-wrapper {\n      padding-right: 28px;\n      unicode-bidi: embed; }\n    :host:last-child > .td-data-table-cell-content-wrapper bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host:last-child > .td-data-table-cell-content-wrapper bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n  :host > * {\n    vertical-align: middle; }\n  :host.mat-clickable {\n    cursor: pointer; }\n    :host.mat-clickable:focus {\n      outline: none; }\n  :host.mat-numeric {\n    text-align: right; }\n    html[dir=rtl] :host.mat-numeric {\n      text-align: left;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host.mat-numeric {\n      text-align: left;\n      unicode-bidi: embed; }\n    [dir=rtl] :host.mat-numeric {\n      text-align: left;\n      unicode-bidi: embed; }\n    :host.mat-numeric bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host.mat-numeric bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n`],\n  template: `<div class=\"td-data-table-cell-content-wrapper\"\n     [class.td-data-table-cell-numeric]=\"numeric\">\n  <ng-content></ng-content>\n</div>`,\n})\nexport class TdDataTableCellComponent {\n\n  /**\n   * numeric?: boolean\n   * Makes cell follow the numeric data-table specs.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-cell');\n  }\n\n}\n",
    "import { Component, Input, Output, EventEmitter, Renderer2, ElementRef, HostBinding, HostListener, ViewChild } from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\nexport interface ITdDataTableSortChangeEvent {\n  order: TdDataTableSortingOrder;\n  name: string;\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'th[td-data-table-column]',\n  styles: [`:host {\n  white-space: nowrap;\n  position: relative;\n  padding: 0;\n  vertical-align: middle;\n  text-align: left; }\n  :host > .td-data-table-heading {\n    padding: 0 28px; }\n  :host:first-child > .td-data-table-heading {\n    padding-left: 24px;\n    padding-right: initial; }\n    html[dir=rtl] :host:first-child > .td-data-table-heading {\n      padding-left: initial;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host:first-child > .td-data-table-heading {\n      padding-left: initial;\n      unicode-bidi: embed; }\n    [dir=rtl] :host:first-child > .td-data-table-heading {\n      padding-left: initial;\n      unicode-bidi: embed; }\n    :host:first-child > .td-data-table-heading bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host:first-child > .td-data-table-heading bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n    html[dir=rtl] :host:first-child > .td-data-table-heading {\n      padding-right: 24px;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host:first-child > .td-data-table-heading {\n      padding-right: 24px;\n      unicode-bidi: embed; }\n    [dir=rtl] :host:first-child > .td-data-table-heading {\n      padding-right: 24px;\n      unicode-bidi: embed; }\n    :host:first-child > .td-data-table-heading bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host:first-child > .td-data-table-heading bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n  :host:last-child > .td-data-table-heading {\n    padding-left: 28px;\n    padding-right: 24px; }\n    html[dir=rtl] :host:last-child > .td-data-table-heading {\n      padding-left: 24px;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host:last-child > .td-data-table-heading {\n      padding-left: 24px;\n      unicode-bidi: embed; }\n    [dir=rtl] :host:last-child > .td-data-table-heading {\n      padding-left: 24px;\n      unicode-bidi: embed; }\n    :host:last-child > .td-data-table-heading bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host:last-child > .td-data-table-heading bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n    html[dir=rtl] :host:last-child > .td-data-table-heading {\n      padding-right: 28px;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host:last-child > .td-data-table-heading {\n      padding-right: 28px;\n      unicode-bidi: embed; }\n    [dir=rtl] :host:last-child > .td-data-table-heading {\n      padding-right: 28px;\n      unicode-bidi: embed; }\n    :host:last-child > .td-data-table-heading bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host:last-child > .td-data-table-heading bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n  :host mat-icon {\n    height: 16px;\n    width: 16px;\n    font-size: 16px !important;\n    line-height: 16px !important; }\n    :host mat-icon.td-data-table-sort-icon {\n      opacity: 0;\n      -webkit-transition: -webkit-transform 0.25s;\n      transition: -webkit-transform 0.25s;\n      transition: transform 0.25s;\n      transition: transform 0.25s, -webkit-transform 0.25s;\n      position: absolute;\n      top: 0; }\n      :host mat-icon.td-data-table-sort-icon.mat-asc {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      :host mat-icon.td-data-table-sort-icon.mat-desc {\n        -webkit-transform: rotate(180deg);\n                transform: rotate(180deg); }\n  :host:hover.mat-sortable mat-icon.td-data-table-sort-icon,\n  :host.mat-active.mat-sortable mat-icon.td-data-table-sort-icon {\n    opacity: 1; }\n  html[dir=rtl] :host {\n    text-align: right;\n    unicode-bidi: embed; }\n  body[dir=rtl] :host {\n    text-align: right;\n    unicode-bidi: embed; }\n  [dir=rtl] :host {\n    text-align: right;\n    unicode-bidi: embed; }\n  :host bdo[dir=rtl] {\n    direction: rtl;\n    unicode-bidi: bidi-override; }\n  :host bdo[dir=ltr] {\n    direction: ltr;\n    unicode-bidi: bidi-override; }\n  :host > * {\n    vertical-align: middle; }\n  :host.mat-clickable {\n    cursor: pointer; }\n    :host.mat-clickable:focus {\n      outline: none; }\n  :host .td-data-table-heading {\n    display: inline-block;\n    position: relative; }\n  :host.mat-numeric {\n    text-align: right; }\n    html[dir=rtl] :host.mat-numeric {\n      text-align: left;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host.mat-numeric {\n      text-align: left;\n      unicode-bidi: embed; }\n    [dir=rtl] :host.mat-numeric {\n      text-align: left;\n      unicode-bidi: embed; }\n    :host.mat-numeric bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host.mat-numeric bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n    :host.mat-numeric mat-icon.td-data-table-sort-icon {\n      margin-left: -22px;\n      margin-right: initial; }\n      html[dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon {\n        margin-left: initial;\n        unicode-bidi: embed; }\n      body[dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon {\n        margin-left: initial;\n        unicode-bidi: embed; }\n      [dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon {\n        margin-left: initial;\n        unicode-bidi: embed; }\n      :host.mat-numeric mat-icon.td-data-table-sort-icon bdo[dir=rtl] {\n        direction: rtl;\n        unicode-bidi: bidi-override; }\n      :host.mat-numeric mat-icon.td-data-table-sort-icon bdo[dir=ltr] {\n        direction: ltr;\n        unicode-bidi: bidi-override; }\n      html[dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon {\n        margin-right: -22px;\n        unicode-bidi: embed; }\n      body[dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon {\n        margin-right: -22px;\n        unicode-bidi: embed; }\n      [dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon {\n        margin-right: -22px;\n        unicode-bidi: embed; }\n      :host.mat-numeric mat-icon.td-data-table-sort-icon bdo[dir=rtl] {\n        direction: rtl;\n        unicode-bidi: bidi-override; }\n      :host.mat-numeric mat-icon.td-data-table-sort-icon bdo[dir=ltr] {\n        direction: ltr;\n        unicode-bidi: bidi-override; }\n  :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon {\n    margin-left: 6px;\n    margin-right: initial; }\n    html[dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon {\n      margin-left: initial;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon {\n      margin-left: initial;\n      unicode-bidi: embed; }\n    [dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon {\n      margin-left: initial;\n      unicode-bidi: embed; }\n    :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n    html[dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon {\n      margin-right: 6px;\n      unicode-bidi: embed; }\n    body[dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon {\n      margin-right: 6px;\n      unicode-bidi: embed; }\n    [dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon {\n      margin-right: 6px;\n      unicode-bidi: embed; }\n    :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon bdo[dir=rtl] {\n      direction: rtl;\n      unicode-bidi: bidi-override; }\n    :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon bdo[dir=ltr] {\n      direction: ltr;\n      unicode-bidi: bidi-override; }\n`],\n  template: `<span #columnContent class=\"td-data-table-heading\">\n  <mat-icon \n    class=\"td-data-table-sort-icon\" \n    *ngIf=\"sortable && numeric\"\n    [class.mat-asc]=\"(!(active) || isAscending())\"\n    [class.mat-desc]=\"(active && isDescending())\">\n    arrow_upward\n  </mat-icon>\n  <span>\n    <ng-content></ng-content>\n  </span>\n  <mat-icon \n    class=\"td-data-table-sort-icon\" \n    *ngIf=\"sortable && !numeric\"\n    [class.mat-asc]=\"(!(active) || isAscending())\"\n    [class.mat-desc]=\"(active && isDescending())\">\n    arrow_upward\n  </mat-icon>\n</span>\n`,\n})\nexport class TdDataTableColumnComponent {\n\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  @ViewChild('columnContent', {read: ElementRef}) _columnContent: ElementRef;\n\n  get projectedWidth(): number {\n    if (this._columnContent && this._columnContent.nativeElement) {\n      return (<HTMLElement>this._columnContent.nativeElement).getBoundingClientRect().width;\n    }\n    return 100;\n  }\n\n  /**\n   * name?: string\n   * Sets unique column [name] for [sortable] events.\n   */\n  @Input('name') name: string = '';\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable') sortable: boolean = false;\n\n  /**\n   * active?: boolean\n   * Sets column to active state when 'true'.\n   * Defaults to 'false'\n   */\n  @Input('active') active: boolean = false;\n\n  /**\n   * numeric?: boolean\n   * Makes column follow the numeric data-table specs and sort icon.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of column.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ?\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\n                        new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  @HostBinding('class.mat-clickable')\n  get bindClickable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-sortable')\n  get bingSortable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-active')\n  get bindActive(): boolean {\n    return this.active;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column');\n  }\n\n  /**\n   * Listening to click event on host to throw a sort event\n   */\n  @HostListener('click', ['event'])\n  handleClick(): void {\n    if (this.sortable) {\n      this.onSortChange.emit({name: this.name, order: this._sortOrder});\n    }\n  }\n\n  isAscending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Ascending;\n  }\n\n  isDescending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Descending;\n  }\n\n}\n",
    "import { Component, Input, Output, EventEmitter, forwardRef, ChangeDetectionStrategy,\n         ChangeDetectorRef, ViewChild, OnDestroy, AfterViewInit,\n         ContentChildren, TemplateRef, AfterContentInit, QueryList, Inject,\n         Optional, ViewChildren, ElementRef, OnInit, AfterContentChecked } from '@angular/core';\nimport { DOCUMENT, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { coerceBooleanProperty} from '@angular/cdk/coercion';\nimport { ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\n\nimport { debounceTime } from 'rxjs/operators/debounceTime';\n\nimport { TdDataTableRowComponent } from './data-table-row/data-table-row.component';\nimport { ITdDataTableSortChangeEvent, TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport enum TdDataTableSortingOrder {\n  Ascending = 'ASC',\n  Descending = 'DESC',\n}\n\nexport interface ITdDataTableColumnWidth {\n  min?: number;\n  max?: number;\n}\n\nexport interface ITdDataTableColumn {\n  name: string;\n  label: string;\n  tooltip?: string;\n  numeric?: boolean;\n  format?: (value: any) => any;\n  nested?: boolean;\n  sortable?: boolean;\n  hidden?: boolean;\n  filter?: boolean;\n  width?: ITdDataTableColumnWidth | number;\n}\n\nexport interface ITdDataTableSelectEvent {\n  row: any;\n  selected: boolean;\n  index: number;\n}\n\nexport interface ITdDataTableSelectAllEvent {\n  rows: any[];\n  selected: boolean;\n}\n\nexport interface ITdDataTableRowClickEvent {\n  row: any;\n  index: number;\n}\n\nexport interface IInternalColumnWidth {\n  value: number;\n  limit: boolean;\n  index: number;\n  min?: boolean;\n  max?: boolean;\n}\n\n/**\n * Constant to set the rows offset before and after the viewport\n */\nconst TD_VIRTUAL_OFFSET: number = 2;\n\n/**\n * Constant to set default row height if none is provided\n */\nconst TD_VIRTUAL_DEFAULT_ROW_HEIGHT: number = 48;\n\nexport class TdDataTableBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdDataTableMixinBase = mixinControlValueAccessor(TdDataTableBase, []);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdDataTableComponent),\n    multi: true,\n  }],\n  selector: 'td-data-table',\n  styles: [`:host {\n  display: block;\n  overflow: hidden; }\n  :host .td-data-table-scrollable {\n    position: relative;\n    overflow: auto;\n    height: calc(100% - 56px); }\n\ntable.td-data-table {\n  width: auto !important; }\n  table.td-data-table.mat-selectable tbody > tr.td-data-table-row {\n    -webkit-transition: background-color 0.2s;\n    transition: background-color 0.2s; }\n  table.td-data-table.mat-selectable .td-data-table-column:first-child > .td-data-table-column-content-wrapper,\n  table.td-data-table.mat-selectable th.td-data-table-column:first-child > .td-data-table-column-content-wrapper,\n  table.td-data-table.mat-selectable td.td-data-table-cell:first-child > .td-data-table-column-content-wrapper {\n    width: 18px;\n    min-width: 18px;\n    padding: 0 24px; }\n  table.td-data-table.mat-selectable .td-data-table-column:nth-child(2) > .td-data-table-column-content-wrapper,\n  table.td-data-table.mat-selectable th.td-data-table-column:nth-child(2) > .td-data-table-column-content-wrapper,\n  table.td-data-table.mat-selectable td.td-data-table-cell:nth-child(2) > .td-data-table-column-content-wrapper {\n    padding-left: 0; }\n  [dir='rtl'] table.td-data-table.mat-selectable .td-data-table-column:nth-child(2) > .td-data-table-column-content-wrapper, [dir='rtl']\n  table.td-data-table.mat-selectable th.td-data-table-column:nth-child(2) > .td-data-table-column-content-wrapper, [dir='rtl']\n  table.td-data-table.mat-selectable td.td-data-table-cell:nth-child(2) > .td-data-table-column-content-wrapper {\n    padding-right: 0;\n    padding-left: 28px; }\n  table.td-data-table td.mat-checkbox-cell,\n  table.td-data-table th.mat-checkbox-column {\n    min-width: 42px;\n    width: 42px;\n    font-size: 0 !important; }\n    table.td-data-table td.mat-checkbox-cell mat-pseudo-checkbox,\n    table.td-data-table th.mat-checkbox-column mat-pseudo-checkbox {\n      width: 18px;\n      height: 18px; }\n      ::ng-deep table.td-data-table td.mat-checkbox-cell mat-pseudo-checkbox.mat-pseudo-checkbox-checked::after, ::ng-deep\n      table.td-data-table th.mat-checkbox-column mat-pseudo-checkbox.mat-pseudo-checkbox-checked::after {\n        width: 11px !important;\n        height: 4px !important; }\n    table.td-data-table td.mat-checkbox-cell mat-checkbox ::ng-deep .mat-checkbox-inner-container,\n    table.td-data-table th.mat-checkbox-column mat-checkbox ::ng-deep .mat-checkbox-inner-container {\n      width: 18px;\n      height: 18px;\n      margin: 0; }\n`],\n  template: `<table td-data-table\n        [style.left.px]=\"columnsLeftScroll\"\n        [class.mat-selectable]=\"selectable\">\n  <thead class=\"td-data-table-head\">\n    <tr td-data-table-column-row>\n      <th td-data-table-column class=\"mat-checkbox-column\" *ngIf=\"selectable\">\n        <mat-checkbox\n          #checkBoxAll\n          *ngIf=\"multiple\"\n          [disabled]=\"!hasData\"\n          [indeterminate]=\"indeterminate && !allSelected && hasData\"\n          [checked]=\"allSelected && hasData\"\n          (click)=\"blockEvent($event); selectAll(!checkBoxAll.checked)\"\n          (keyup.enter)=\"selectAll(!checkBoxAll.checked)\"\n          (keyup.space)=\"selectAll(!checkBoxAll.checked)\"\n          (keydown.space)=\"blockEvent($event)\">\n        </mat-checkbox>\n      </th>\n      <th td-data-table-column\n          #columnElement\n          *ngFor=\"let column of columns; let i = index;\"\n          [style.min-width.px]=\"getColumnWidth(i)\"\n          [style.max-width.px]=\"getColumnWidth(i)\"\n          [name]=\"column.name\"\n          [numeric]=\"column.numeric\"\n          [active]=\"(column.sortable || sortable) && column === sortByColumn\"\n          [sortable]=\"column.sortable || (sortable && column.sortable !== false)\"\n          [sortOrder]=\"sortOrderEnum\"\n          [hidden]=\"column.hidden\"\n          (sortChange)=\"handleSort(column)\">\n          <span [matTooltip]=\"column.tooltip\">{{column.label}}</span>\n      </th>\n    </tr>\n  </thead>\n</table>\n<div #scrollableDiv class=\"td-data-table-scrollable\"\n      (scroll)=\"handleScroll($event)\">\n  <div [style.height.px]=\"totalHeight\"></div>\n  <table td-data-table\n          [style.transform]=\"offsetTransform\"\n          [style.position]=\"'absolute'\"\n          [class.mat-selectable]=\"selectable\"\n          [class.mat-clickable]=\"clickable\">\n    <tbody class=\"td-data-table-body\">\n      <tr td-data-table-row\n          #dtRow\n          [tabIndex]=\"selectable ? 0 : -1\"\n          [selected]=\"(clickable || selectable) && isRowSelected(row)\"\n          *ngFor=\"let row of virtualData; let rowIndex = index\"\n          (click)=\"handleRowClick(row, fromRow + rowIndex, $event)\"\n          (keyup)=\"selectable && _rowKeyup($event, row, rowIndex)\"\n          (keydown.space)=\"blockEvent($event)\"\n          (keydown.shift.space)=\"blockEvent($event)\"\n          (keydown.shift)=\"disableTextSelection()\"\n          (keyup.shift)=\"enableTextSelection()\">\n        <td td-data-table-cell class=\"mat-checkbox-cell\" *ngIf=\"selectable\">\n          <mat-pseudo-checkbox\n            [state]=\"dtRow.selected ? 'checked' : 'unchecked'\"\n            (mousedown)=\"disableTextSelection()\"\n            (mouseup)=\"enableTextSelection()\"\n            stopRowClick\n            (click)=\"select(row, $event, fromRow + rowIndex)\">\n          </mat-pseudo-checkbox>\n        </td>\n        <td td-data-table-cell\n            [numeric]=\"column.numeric\"\n            [hidden]=\"column.hidden\"\n            *ngFor=\"let column of columns; let i = index\"\n            [style.min-width.px]=\"getColumnWidth(i)\"\n            [style.max-width.px]=\"getColumnWidth(i)\">\n          <span *ngIf=\"!getTemplateRef(column.name)\">{{column.format ? column.format(getCellValue(column, row)) : getCellValue(column, row)}}</span>\n          <ng-template\n            *ngIf=\"getTemplateRef(column.name)\"\n            [ngTemplateOutlet]=\"getTemplateRef(column.name)\"\n            [ngTemplateOutletContext]=\"{ value: getCellValue(column, row), row: row, column: column.name }\">\n          </ng-template>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<ng-content></ng-content>\n`,\n  inputs: ['value'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDataTableComponent extends _TdDataTableMixinBase implements IControlValueAccessor, OnInit,\n                                          AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy {\n\n  /** responsive width calculations */\n  private _resizeSubs: Subscription;\n  private _rowsChangedSubs: Subscription;\n  private _hostWidth: number = 0;\n\n  get hostWidth(): number {\n    // if the checkboxes are rendered, we need to remove their width\n    // from the total width to calculate properly\n    if (this.selectable) {\n      return this._hostWidth - 42;\n    }\n    return this._hostWidth;\n  }\n\n  private _widths: IInternalColumnWidth[] = [];\n  private _onResize: Subject<void> = new Subject<void>();\n\n  /** column header reposition and viewpoort */\n  private _verticalScrollSubs: Subscription;\n  private _horizontalScrollSubs: Subscription;\n  private _scrollHorizontalOffset: number = 0;\n\n  private _onHorizontalScroll: Subject<number> = new Subject<number>();\n  private _onVerticalScroll: Subject<number> = new Subject<number>();\n\n  // Array of cached row heights to allow dynamic row heights\n  private _rowHeightCache: number[] = [];\n  // Total pseudo height of all the elements\n  private _totalHeight: number = 0;\n  // Total host height for the viewport\n  private _hostHeight: number = 0;\n  // Scrolled vertical pixels\n  private _scrollVerticalOffset: number = 0;\n  // Style to move the content a certain offset depending on scrolled offset\n  private _offsetTransform: SafeStyle;\n\n  // Variables that set from and to which rows will be rendered\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  /**\n   * Returns the offset style with a proper calculation on how much it should move\n   * over the y axis of the total height\n   */\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  /**\n   * Returns the assumed total height of the rows\n   */\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  /**\n   * Returns the initial row to render in the viewport\n   */\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  /**\n   * Returns the last row to render in the viewport\n   */\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  private _valueChangesSubs: Subscription;\n  /** internal attributes */\n  private _data: any[];\n  // data virtually iterated by component\n  private _virtualData: any[];\n  private _columns: ITdDataTableColumn[];\n  private _selectable: boolean = false;\n  private _clickable: boolean = false;\n  private _multiple: boolean = true;\n  private _allSelected: boolean = false;\n  private _indeterminate: boolean = false;\n\n  /** sorting */\n  private _sortable: boolean = false;\n  private _sortBy: ITdDataTableColumn;\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  /** shift select */\n  private _shiftPreviouslyPressed: boolean = false;\n  private _lastSelectedIndex: number = -1;\n  private _firstSelectedIndex: number = -1;\n  private _firstCheckboxValue: boolean = false;\n\n  /** template fetching support */\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  @ContentChildren(TdDataTableTemplateDirective) _templates: QueryList<TdDataTableTemplateDirective>;\n\n  @ViewChild('scrollableDiv') _scrollableDiv: ElementRef;\n\n  @ViewChildren('columnElement') _colElements: QueryList<TdDataTableColumnComponent>;\n\n  @ViewChildren(TdDataTableRowComponent) _rows: QueryList<TdDataTableRowComponent>;\n\n  /**\n   * Returns scroll position to reposition column headers\n   */\n  get columnsLeftScroll(): number {\n    return this._scrollHorizontalOffset * -1;\n  }\n\n  /**\n   * Returns true if all values are selected.\n   */\n  get allSelected(): boolean {\n    return this._allSelected;\n  }\n\n  /**\n   * Returns true if all values are not deselected\n   * and at least one is.\n   */\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  /**\n   * data?: {[key: string]: any}[]\n   * Sets the data to be rendered as rows.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    this._rowHeightCache = [];\n    Promise.resolve().then(() => {\n      this.refresh();\n      // scroll back to the top if the data has changed\n      this._scrollableDiv.nativeElement.scrollTop = 0;\n    });\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * columns?: ITdDataTableColumn[]\n   * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\n   * Defaults to [data] keys.\n   */\n  @Input('columns')\n  set columns(cols: ITdDataTableColumn[]) {\n    this._columns = cols;\n  }\n  get columns(): ITdDataTableColumn[] {\n    if (this._columns) {\n      return this._columns;\n    }\n\n    if (this.hasData) {\n      this._columns = [];\n      // if columns is undefined, use key in [data] rows as name and label for column headers.\n      let row: any = this._data[0];\n      Object.keys(row).forEach((k: string) => {\n        if (!this._columns.find((c: any) => c.name === k)) {\n          this._columns.push({ name: k, label: k });\n        }\n      });\n      return this._columns;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * selectable?: boolean\n   * Enables row selection events, hover and selected row states.\n   * Defaults to 'false'\n   */\n  @Input('selectable')\n  set selectable(selectable: boolean) {\n    this._selectable = coerceBooleanProperty(selectable);\n  }\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  /**\n   * clickable?: boolean\n   * Enables row click events, hover.\n   * Defaults to 'false'\n   */\n  @Input('clickable')\n  set clickable(clickable: boolean) {\n    this._clickable = coerceBooleanProperty(clickable);\n  }\n  get clickable(): boolean {\n    return this._clickable;\n  }\n\n  /**\n   * multiple?: boolean\n   * Enables multiple row selection. [selectable] needs to be enabled.\n   * Defaults to 'false'\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable')\n  set sortable(sortable: boolean) {\n    this._sortable = coerceBooleanProperty(sortable);\n  }\n  get sortable(): boolean {\n    return this._sortable;\n  }\n\n  /**\n   * sortBy?: string\n   * Sets the active sort column. [sortable] needs to be enabled.\n   */\n  @Input('sortBy')\n  set sortBy(columnName: string) {\n    if (!columnName) {\n      return;\n    }\n    const column: ITdDataTableColumn = this.columns.find((c: any) => c.name === columnName);\n    if (!column) {\n      throw new Error('[sortBy] must be a valid column name');\n    }\n\n    this._sortBy = column;\n  }\n  get sortByColumn(): ITdDataTableColumn {\n    return this._sortBy;\n  }\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ?\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n  get sortOrderEnum(): TdDataTableSortingOrder {\n    return this._sortOrder;\n  }\n\n  get hasData(): boolean {\n    return this._data && this._data.length > 0;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\n                                      new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  /**\n   * rowSelect?: function\n   * Event emitted when a row is selected/deselected. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectEvent] implemented object.\n   */\n  @Output('rowSelect') onRowSelect: EventEmitter<ITdDataTableSelectEvent> = new EventEmitter<ITdDataTableSelectEvent>();\n\n  /**\n   * rowClick?: function\n   * Event emitted when a row is clicked.\n   * Emits an [ITdDataTableRowClickEvent] implemented object.\n   */\n  @Output('rowClick') onRowClick: EventEmitter<ITdDataTableRowClickEvent> = new EventEmitter<ITdDataTableRowClickEvent>();\n\n  /**\n   * selectAll?: function\n   * Event emitted when all rows are selected/deselected by the all checkbox. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectAllEvent] implemented object.\n   */\n  @Output('selectAll') onSelectAll: EventEmitter<ITdDataTableSelectAllEvent> =\n                                    new EventEmitter<ITdDataTableSelectAllEvent>();\n\n  constructor(@Optional() @Inject(DOCUMENT) private _document: any,\n              private _elementRef: ElementRef,\n              private _domSanitizer: DomSanitizer,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * compareWith?: function(row, model): boolean\n   * Allows custom comparison between row and model to see if row is selected or not\n   * Default comparation is by reference\n   */\n  @Input('compareWith') compareWith: (row: any, model: any) => boolean = (row: any, model: any) => {\n    return row === model;\n  }\n\n  /**\n   * Initialize observable for resize and scroll events\n   */\n  ngOnInit(): void {\n    // initialize observable for resize calculations\n    this._resizeSubs = this._onResize.asObservable().subscribe(() => {\n      if (this._rows) {\n        this._rows.toArray().forEach((row: TdDataTableRowComponent, index: number) => {\n          this._rowHeightCache[this.fromRow + index] = row.height + 1;\n        });\n      }\n      this._calculateWidths();\n      this._calculateVirtualRows();\n    });\n    // initialize observable for scroll column header reposition\n    this._horizontalScrollSubs = this._onHorizontalScroll.asObservable()\n      .subscribe((horizontalScroll: number) => {\n      this._scrollHorizontalOffset = horizontalScroll;\n      this._changeDetectorRef.markForCheck();\n    });\n    // initialize observable for virtual scroll rendering\n    this._verticalScrollSubs = this._onVerticalScroll.asObservable()\n      .subscribe((verticalScroll: number) => {\n      this._scrollVerticalOffset = verticalScroll;\n      this._calculateVirtualRows();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._valueChangesSubs = this.valueChanges.subscribe((value: any) => {\n      this.refresh();\n    });\n  }\n\n  /**\n   * Loads templates and sets them in a map for faster access.\n   */\n  ngAfterContentInit(): void {\n    for (let i: number = 0; i < this._templates.toArray().length; i++) {\n      this._templateMap.set(\n        this._templates.toArray()[i].tdDataTableTemplate,\n        this._templates.toArray()[i].templateRef,\n      );\n    }\n  }\n\n  /**\n   * Checks hosts native elements widths to see if it has changed (resize check)\n   */\n  ngAfterContentChecked(): void {\n    if (this._elementRef.nativeElement) {\n      let newHostWidth: number = this._elementRef.nativeElement.getBoundingClientRect().width;\n      // if the width has changed then we throw a resize event.\n      if (this._hostWidth !== newHostWidth) {\n        this._hostWidth = newHostWidth;\n        this._onResize.next();\n      }\n    }\n    if (this._scrollableDiv.nativeElement) {\n      let newHostHeight: number = this._scrollableDiv.nativeElement.getBoundingClientRect().height;\n      // if the height of the viewport has changed, then we mark for check\n      if (this._hostHeight !== newHostHeight) {\n        this._hostHeight = newHostHeight;\n        this._calculateVirtualRows();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Registers to an observable that checks if all rows have been rendered\n   * so we can start calculating the widths\n   */\n  ngAfterViewInit(): void {\n    this._rowsChangedSubs = this._rows.changes.pipe(\n      debounceTime(0),\n    ).subscribe(() => {\n      this._onResize.next();\n    });\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Unsubscribes observables when data table is destroyed\n   */\n  ngOnDestroy(): void {\n    if (this._resizeSubs) {\n      this._resizeSubs.unsubscribe();\n    }\n    if (this._horizontalScrollSubs) {\n      this._horizontalScrollSubs.unsubscribe();\n    }\n    if (this._verticalScrollSubs) {\n      this._verticalScrollSubs.unsubscribe();\n    }\n    if (this._rowsChangedSubs) {\n      this._rowsChangedSubs.unsubscribe();\n    }\n    if (this._valueChangesSubs) {\n      this._valueChangesSubs.unsubscribe();\n    }\n  }\n\n  /**\n   * Method that gets executed every time there is a scroll event\n   * Calls the scroll observable\n   */\n  handleScroll(event: Event): void {\n    let element: HTMLElement = (<HTMLElement>event.target);\n    if (element) {\n      let horizontalScroll: number = element.scrollLeft;\n      if (this._scrollHorizontalOffset !== horizontalScroll) {\n        this._onHorizontalScroll.next(horizontalScroll);\n      }\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._onVerticalScroll.next(verticalScroll);\n      }\n    }\n  }\n\n  /**\n   * Returns the width needed for the columns via index\n   */\n  getColumnWidth(index: number): number {\n    if (this._widths[index]) {\n      return this._widths[index].value;\n    }\n    return undefined;\n  }\n\n  getCellValue(column: ITdDataTableColumn, value: any): string {\n    if (column.nested === undefined || column.nested) {\n      return this._getNestedValue(column.name, value);\n    }\n    return value[column.name];\n  }\n\n  /**\n   * Getter method for template references\n   */\n   getTemplateRef(name: string): TemplateRef<any> {\n     return this._templateMap.get(name);\n   }\n\n  /**\n   * Clears model (ngModel) of component by removing all values in array.\n   */\n  clearModel(): void {\n    this.value.splice(0, this.value.length);\n  }\n\n  /**\n   * Refreshes data table and rerenders [data] and [columns]\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n    this._calculateWidths();\n    this._calculateCheckboxState();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Selects or clears all rows depending on 'checked' value.\n   */\n  selectAll(checked: boolean): void {\n    let toggledRows: any[] = [];\n    if (checked) {\n      this._data.forEach((row: any) => {\n        // skiping already selected rows\n        if (!this.isRowSelected(row)) {\n          this.value.push(row);\n          // checking which ones are being toggled\n          toggledRows.push(row);\n        }\n      });\n      this._allSelected = true;\n      this._indeterminate = true;\n    } else {\n      this._data.forEach((row: any) => {\n        // checking which ones are being toggled\n        if (this.isRowSelected(row)) {\n          toggledRows.push(row);\n          let modelRow: any = this.value.filter((val: any) => {\n            return this.compareWith(row, val);\n          })[0];\n          let index: number = this.value.indexOf(modelRow);\n          if (index > -1) {\n            this.value.splice(index, 1);\n          }\n        }\n      });\n      this._allSelected = false;\n      this._indeterminate = false;\n    }\n    this.onSelectAll.emit({rows: toggledRows, selected: checked});\n  }\n\n  /**\n   * Checks if row is selected\n   */\n  isRowSelected(row: any): boolean {\n    // compare items by [compareWith] function\n    return this.value ? this.value.filter((val: any) => {\n      return this.compareWith(row, val);\n    }).length > 0 : false;\n  }\n\n  /**\n   * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\n   * handles cntrl clicks and shift clicks for multi-select\n   */\n  select(row: any, event: Event, currentSelected: number): void {\n    if (this.selectable) {\n      this.blockEvent(event);\n      // Check to see if Shift key is selected and need to select everything in between\n      let mouseEvent: MouseEvent = event as MouseEvent;\n      if (this.multiple && mouseEvent && mouseEvent.shiftKey && this._lastSelectedIndex > -1) {\n        let firstIndex: number = currentSelected;\n        let lastIndex: number = this._lastSelectedIndex;\n        if (currentSelected > this._lastSelectedIndex) {\n          firstIndex = this._lastSelectedIndex;\n          lastIndex = currentSelected;\n        }\n        // if clicking a checkbox behind the initial check, then toggle all selections expect the initial checkbox\n        // else the checkboxes clicked are all after the initial one\n        if ((this._firstSelectedIndex >= currentSelected && this._lastSelectedIndex > this._firstSelectedIndex) ||\n           (this._firstSelectedIndex <= currentSelected && this._lastSelectedIndex < this._firstSelectedIndex)) {\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            if (this._firstSelectedIndex !== i) {\n              this._doSelection(this._data[i], i);\n            }\n          }\n        } else if ((this._firstSelectedIndex > currentSelected) || (this._firstSelectedIndex < currentSelected)) {\n          // change indexes depending on where the next checkbox is selected (before or after)\n          if (this._firstSelectedIndex > currentSelected) {\n            lastIndex--;\n          } else if (this._firstSelectedIndex < currentSelected) {\n            firstIndex++;\n          }\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            let rowSelected: boolean = this.isRowSelected(this._data[i]);\n            // if row is selected and first checkbox was selected\n            // or if row was unselected and first checkbox was unselected\n            // we ignore the toggle\n            if ((this._firstCheckboxValue && !rowSelected) ||\n                (!this._firstCheckboxValue && rowSelected)) {\n              this._doSelection(this._data[i], i);\n            } else if (this._shiftPreviouslyPressed) {\n              // else if the checkbox selected was in the middle of the last selection and the first selection\n              // then we undo the selections\n              if ((currentSelected >= this._firstSelectedIndex && currentSelected <= this._lastSelectedIndex) ||\n                  (currentSelected <= this._firstSelectedIndex && currentSelected >= this._lastSelectedIndex)) {\n                this._doSelection(this._data[i], i);\n              }\n            }\n          }\n        }\n        this._shiftPreviouslyPressed = true;\n      // if shift wasnt pressed, then we take the element checked as the first row\n      // incase the next click uses shift\n      } else if (mouseEvent && !mouseEvent.shiftKey) {\n        this._firstCheckboxValue = this._doSelection(row, currentSelected);\n        this._shiftPreviouslyPressed = false;\n        this._firstSelectedIndex = currentSelected;\n      }\n      this._lastSelectedIndex = currentSelected;\n    }\n  }\n\n  /**\n   * Overrides the onselectstart method of the document so other text on the page\n   * doesn't get selected when doing shift selections.\n   */\n  disableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = function(): boolean {\n        return false;\n      };\n    }\n  }\n\n  /**\n   * Resets the original onselectstart method.\n   */\n  enableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = undefined;\n    }\n  }\n\n  /**\n   * emits the onRowClickEvent when a row is clicked\n   * if clickable is true and selectable is false then select the row\n   */\n  handleRowClick(row: any, index: number, event: Event): void {\n    if (this.clickable) {\n      // ignoring linting rules here because attribute it actually null or not there\n      // can't check for undefined\n      const srcElement: any = event.srcElement || event.currentTarget;\n      /* tslint:disable-next-line */\n      if (srcElement.getAttribute('stopRowClick') === null) {\n        this.onRowClick.emit({\n          row: row,\n          index: index,\n        });\n      }\n    }\n  }\n\n  /**\n   * Method handle for sort click event in column headers.\n   */\n  handleSort(column: ITdDataTableColumn): void {\n    if (this._sortBy === column) {\n      this._sortOrder = this._sortOrder === TdDataTableSortingOrder.Ascending ?\n        TdDataTableSortingOrder.Descending : TdDataTableSortingOrder.Ascending;\n    } else {\n      this._sortBy = column;\n      this._sortOrder = TdDataTableSortingOrder.Ascending;\n    }\n    this.onSortChange.next({ name: this._sortBy.name, order: this._sortOrder });\n  }\n\n  /**\n   * Handle all keyup events when focusing a data table row\n   */\n  _rowKeyup(event: KeyboardEvent, row: any, index: number): void {\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        /** if user presses enter or space, the row should be selected */\n        if (this.selectable) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case UP_ARROW:\n        /**\n         * if users presses the up arrow, we focus the prev row\n         * unless its the first row\n         */\n        if (index > 0) {\n          this._rows.toArray()[index - 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index >= 0) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case DOWN_ARROW:\n        /**\n         * if users presses the down arrow, we focus the next row\n         * unless its the last row\n         */\n        if (index < (this._rows.toArray().length - 1)) {\n          this._rows.toArray()[index + 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index < this._data.length) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Method to prevent the default events\n   */\n  blockEvent(event: Event): void {\n    event.preventDefault();\n  }\n\n  private _getNestedValue(name: string, value: any): string {\n    if (!(value instanceof Object) || !name) {\n      return value;\n    }\n    if (name.indexOf('.') > -1) {\n      let splitName: string[] = name.split(/\\.(.+)/, 2);\n      return this._getNestedValue(splitName[1], value[splitName[0]]);\n    } else {\n      return value[name];\n    }\n  }\n\n  /**\n   * Does the actual Row Selection\n   */\n  private _doSelection(row: any, rowIndex: number): boolean {\n    let wasSelected: boolean = this.isRowSelected(row);\n    if (!wasSelected) {\n      if (!this._multiple) {\n        this.clearModel();\n      }\n      this.value.push(row);\n    } else {\n      // compare items by [compareWith] function\n      row = this.value.filter((val: any) => {\n        return this.compareWith(row, val);\n      })[0];\n      let index: number = this.value.indexOf(row);\n      if (index > -1) {\n        this.value.splice(index, 1);\n      }\n    }\n    this._calculateCheckboxState();\n    this.onRowSelect.emit({row: row, index: rowIndex, selected: !wasSelected});\n    this.onChange(this.value);\n    return !wasSelected;\n  }\n\n  /**\n   * Calculate all the state of all checkboxes\n   */\n  private _calculateCheckboxState(): void {\n    if (this._data) {\n      this._allSelected = typeof this._data.find((d: any) => !this.isRowSelected(d)) === 'undefined';\n      this._indeterminate = false;\n      for (let row of this._data) {\n        if (!this.isRowSelected(row)) {\n          continue;\n        }\n        this._indeterminate = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Calculates the widths for columns and cells depending on content\n   */\n  private _calculateWidths(): void {\n    if (this._colElements && this._colElements.length) {\n      this._widths = [];\n      this._colElements.forEach((col: TdDataTableColumnComponent, index: number) => {\n        this._adjustColumnWidth(index, this._calculateWidth());\n      });\n      this._adjustColumnWidhts();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Adjusts columns after calculation to see if they need to be recalculated.\n   */\n  private _adjustColumnWidhts(): void {\n    let fixedTotalWidth: number = 0;\n    // get the number of total columns that have flexible widths (not fixed or hidden)\n    let flexibleWidths: number = this._widths.filter((width: IInternalColumnWidth, index: number) => {\n      if (this.columns[index].hidden) {\n        return false;\n      }\n      if (width.limit || width.max || width.min) {\n        fixedTotalWidth += width.value;\n      }\n      return !width.limit && !width.max && !width.min;\n    }).length;\n    // calculate how much pixes are left that could be spread across\n    // the flexible columns\n    let recalculateHostWidth: number = 0;\n    if (fixedTotalWidth < this.hostWidth) {\n      recalculateHostWidth = this.hostWidth - fixedTotalWidth;\n    }\n    // if we have flexible columns and pixels to spare on them\n    // we try and spread the pixels across them\n    if (flexibleWidths && recalculateHostWidth) {\n      let newValue: number = Math.floor(recalculateHostWidth / flexibleWidths);\n      let adjustedNumber: number = 0;\n      // adjust the column widths with the spread pixels\n      this._widths.forEach((colWidth: IInternalColumnWidth) => {\n        if (this._widths[colWidth.index].max && this._widths[colWidth.index].value > newValue ||\n            this._widths[colWidth.index].min && this._widths[colWidth.index].value < newValue ||\n            !this._widths[colWidth.index].limit) {\n          this._adjustColumnWidth(colWidth.index, newValue);\n          adjustedNumber++;\n        }\n      });\n      // if there are still columns that need to be recalculated, we start over\n      let newFlexibleWidths: number = this._widths.filter((width: IInternalColumnWidth) => {\n        return !width.limit && !width.max;\n      }).length;\n      if (newFlexibleWidths !== adjustedNumber && newFlexibleWidths !== flexibleWidths) {\n        this._adjustColumnWidhts();\n      }\n    }\n  }\n\n  /**\n   * Adjusts a single column to see if it can be recalculated\n   */\n  private _adjustColumnWidth(index: number, value: number): void {\n    this._widths[index] = {\n      value: value,\n      index: index,\n      limit: false,\n      min: false,\n      max: false,\n    };\n    // flag to see if we need to skip the min width projection\n    // depending if a width or min width has been provided\n    let skipMinWidthProjection: boolean = false;\n    if (this.columns[index]) {\n      // if the provided width has min/max, then we check to see if we need to set it\n      if (typeof this.columns[index].width === 'object') {\n        let widthOpts: ITdDataTableColumnWidth = <ITdDataTableColumnWidth>this.columns[index].width;\n        // if the column width is less than the configured min, we override it\n        skipMinWidthProjection = (widthOpts && !!widthOpts.min);\n        if (widthOpts && widthOpts.min >= this._widths[index].value) {\n          this._widths[index].value = widthOpts.min;\n          this._widths[index].min = true;\n        // if the column width is more than the configured max, we override it\n        } else if (widthOpts && widthOpts.max <= this._widths[index].value) {\n          this._widths[index].value = widthOpts.max;\n          this._widths[index].max = true;\n        }\n      // if it has a fixed width, then we just set it\n      } else if (typeof this.columns[index].width === 'number') {\n        this._widths[index].value = <number>this.columns[index].width;\n        skipMinWidthProjection = this._widths[index].limit = true;\n      }\n    }\n    // if there wasn't any width or min width provided, we set a min to what the column width min should be\n    if (!skipMinWidthProjection &&\n        this._widths[index].value < this._colElements.toArray()[index].projectedWidth) {\n      this._widths[index].value = this._colElements.toArray()[index].projectedWidth;\n      this._widths[index].min = true;\n      this._widths[index].limit = false;\n    }\n  }\n\n  /**\n   * Generic method to calculate column width\n   */\n  private _calculateWidth(): number {\n    let renderedColumns: ITdDataTableColumn[] = this.columns.filter((col: ITdDataTableColumn) => !col.hidden);\n    return Math.floor(this.hostWidth / renderedColumns.length);\n  }\n\n  /**\n   * Method to calculate the rows to be rendered in the viewport\n   */\n  private _calculateVirtualRows(): void {\n    let scrolledRows: number = 0;\n    if (this._data) {\n      this._totalHeight = 0;\n      let rowHeightSum: number = 0;\n      // loop through all rows to see if we have their height cached\n      // and sum them all to calculate the total height\n      this._data.forEach((d: any, index: number) => {\n        // iterate through all rows at first and assume all\n        // rows are the same height as the first one\n        if (!this._rowHeightCache[index]) {\n          this._rowHeightCache[index] = this._rowHeightCache[0] || TD_VIRTUAL_DEFAULT_ROW_HEIGHT;\n        }\n        rowHeightSum += this._rowHeightCache[index];\n        // check how many rows have been scrolled\n        if (this._scrollVerticalOffset - rowHeightSum > 0) {\n          scrolledRows++;\n        }\n      });\n      this._totalHeight = rowHeightSum;\n      // set the initial row to be rendered taking into account the row offset\n      let fromRow: number = scrolledRows - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n\n      let hostHeight: number = this._hostHeight;\n      let index: number = 0;\n      // calculate how many rows can fit in the viewport\n      while (hostHeight > 0) {\n        hostHeight -= this._rowHeightCache[this.fromRow + index];\n        index++;\n      }\n      // set the last row to be rendered taking into account the row offset\n      let range: number = (index - 1) + (TD_VIRTUAL_OFFSET * 2);\n      let toRow: number = range + this.fromRow;\n      // if last row is greater than the total length, then we use the total length\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    // calculate the proper offset depending on how many rows have been scrolled\n    if (scrolledRows > TD_VIRTUAL_OFFSET) {\n      for (let index: number = 0; index < this.fromRow; index++) {\n        offset += this._rowHeightCache[index];\n      }\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle('translateY(' + (offset - this.totalHeight) + 'px)');\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n",
    "import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({selector: '[tdDataTableTemplate]ng-template'})\nexport class TdDataTableTemplateDirective extends TemplatePortalDirective {\n\n  @Input() tdDataTableTemplate: string;\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n",
    "import { Component, Input, Output, Renderer2, ElementRef, ContentChildren, QueryList, HostListener } from '@angular/core';\n\nimport { TdDataTableCellComponent } from '../data-table-cell/data-table-cell.component';\nimport { TdDataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-column-row]',\n  styles: [`:host {\n  border-bottom-style: solid;\n  border-bottom-width: 1px; }\n\n:host.td-data-table-row {\n  height: 48px; }\n\n:host.td-data-table-column-row {\n  height: 56px; }\n`],\n  template: `<ng-content></ng-content>`,\n})\nexport class TdDataTableColumnRowComponent {\n\n  constructor(protected _elementRef: ElementRef, protected _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column-row');\n  }\n\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-row]',\n  styles: [`:host {\n  border-bottom-style: solid;\n  border-bottom-width: 1px; }\n\n:host.td-data-table-row {\n  height: 48px; }\n\n:host.td-data-table-column-row {\n  height: 56px; }\n`],\n  template: `<ng-content></ng-content>`,\n})\nexport class TdDataTableRowComponent {\n\n  private _selected: boolean = false;\n\n  @Input('selected')\n  set selected(selected: boolean) {\n    if (selected) {\n      this._renderer.addClass(this._elementRef.nativeElement, 'td-selected');\n    } else {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'td-selected');\n    }\n    this._selected = selected;\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  get height(): number {\n    let height: number = 48;\n    if (this._elementRef.nativeElement) {\n      height = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return height;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-row');\n  }\n\n  /**\n   * Listening to click event to explicitly focus the row element.\n   */\n  @HostListener('click', ['$event'])\n  clickListener(): void {\n    this.focus();\n  }\n\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective } from './chips.component';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n  ],\n  declarations: [\n    TdChipsComponent,\n    TdChipDirective,\n    TdAutocompleteOptionDirective,\n  ],\n  exports: [\n    TdChipsComponent,\n    TdChipDirective,\n    TdAutocompleteOptionDirective,\n  ],\n})\nexport class CovalentChipsModule {\n\n}\n",
    "import { Component, Input, Output, forwardRef, DoCheck, ViewChild, ViewChildren, QueryList, OnInit, HostListener,\n  ElementRef, Optional, Inject, Directive, TemplateRef, ViewContainerRef, ContentChild, ChangeDetectionStrategy,\n  ChangeDetectorRef, AfterViewInit, OnDestroy, HostBinding, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, LEFT_ARROW, RIGHT_ARROW, DELETE, BACKSPACE, ENTER, SPACE, TAB, HOME } from '@angular/cdk/keycodes';\nimport { MatChip } from '@angular/material/chips';\nimport { MatInput } from '@angular/material/input';\nimport { MatOption } from '@angular/material/core';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { timer } from 'rxjs/observable/timer';\nimport { merge } from 'rxjs/observable/merge';\nimport { toPromise } from 'rxjs/operator/toPromise';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { filter } from 'rxjs/operators/filter';\nimport { debounceTime } from 'rxjs/operators/debounceTime';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-chip]ng-template',\n})\nexport class TdChipDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-autocomplete-option]ng-template',\n})\nexport class TdAutocompleteOptionDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdChipsBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdChipsMixinBase = mixinControlValueAccessor(mixinDisabled(TdChipsBase), []);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdChipsComponent),\n    multi: true,\n  }],\n  selector: 'td-chips',\n  inputs: ['disabled', 'value'],\n  styles: [`:host {\n  display: block;\n  padding: 0 5px;\n  min-height: 48px; }\n  :host .td-chips-wrapper {\n    min-height: 42px;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: flex-start; }\n    :host .td-chips-wrapper.td-chips-stacked .mat-basic-chip,\n    :host .td-chips-wrapper.td-chips-stacked .td-chips-form-field {\n      width: 100%; }\n    :host .td-chips-wrapper.td-chips-input-before-position .td-chips-form-field {\n      -webkit-box-ordinal-group: 0;\n          -ms-flex-order: -1;\n              order: -1; }\n  :host .td-chip, :host .td-chip > .td-chip-content {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    max-width: 100%;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -ms-flex-line-pack: center;\n        align-content: center;\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: start; }\n    :host .td-chip.td-chip-stacked, :host .td-chip > .td-chip-content.td-chip-stacked {\n      -webkit-box-pack: justify;\n          -ms-flex-pack: justify;\n              justify-content: space-between; }\n  :host ::ng-deep {\n    /* TODO see if we can make styles more abstract to future proof for contact chips */ }\n    :host ::ng-deep .mat-form-field-wrapper {\n      padding-bottom: 2px; }\n    :host ::ng-deep .mat-basic-chip {\n      display: inline-block;\n      cursor: default;\n      border-radius: 16px;\n      margin: 8px 8px 0 0;\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n      max-width: 100%;\n      position: relative; }\n      html[dir=rtl] :host ::ng-deep .mat-basic-chip {\n        margin: 8px 0 0 8px;\n        unicode-bidi: embed; }\n      body[dir=rtl] :host ::ng-deep .mat-basic-chip {\n        margin: 8px 0 0 8px;\n        unicode-bidi: embed; }\n      [dir=rtl] :host ::ng-deep .mat-basic-chip {\n        margin: 8px 0 0 8px;\n        unicode-bidi: embed; }\n      :host ::ng-deep .mat-basic-chip bdo[dir=rtl] {\n        direction: rtl;\n        unicode-bidi: bidi-override; }\n      :host ::ng-deep .mat-basic-chip bdo[dir=ltr] {\n        direction: ltr;\n        unicode-bidi: bidi-override; }\n      :host ::ng-deep .mat-basic-chip .td-chip {\n        min-height: 32px;\n        line-height: 32px;\n        font-size: 13px;\n        padding: 0 0 0 12px; }\n        html[dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip {\n          padding: 0 12px 0 0;\n          unicode-bidi: embed; }\n        body[dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip {\n          padding: 0 12px 0 0;\n          unicode-bidi: embed; }\n        [dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip {\n          padding: 0 12px 0 0;\n          unicode-bidi: embed; }\n        :host ::ng-deep .mat-basic-chip .td-chip bdo[dir=rtl] {\n          direction: rtl;\n          unicode-bidi: bidi-override; }\n        :host ::ng-deep .mat-basic-chip .td-chip bdo[dir=ltr] {\n          direction: ltr;\n          unicode-bidi: bidi-override; }\n        :host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar] {\n          display: inline-block;\n          -webkit-box-ordinal-group: -19;\n              -ms-flex-order: -20;\n                  order: -20;\n          -webkit-box-pack: center;\n              -ms-flex-pack: center;\n                  justify-content: center;\n          -webkit-box-align: center;\n              -ms-flex-align: center;\n                  align-items: center;\n          text-align: center;\n          height: 32px;\n          width: 32px;\n          margin: 0 8px 0 -12px;\n          border-radius: 50%; }\n          html[dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar] {\n            margin: 0 -12px 0 8px;\n            unicode-bidi: embed; }\n          body[dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar] {\n            margin: 0 -12px 0 8px;\n            unicode-bidi: embed; }\n          [dir=rtl] :host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar] {\n            margin: 0 -12px 0 8px;\n            unicode-bidi: embed; }\n          :host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar] bdo[dir=rtl] {\n            direction: rtl;\n            unicode-bidi: bidi-override; }\n          :host ::ng-deep .mat-basic-chip .td-chip [td-chip-avatar] bdo[dir=ltr] {\n            direction: ltr;\n            unicode-bidi: bidi-override; }\n      :host ::ng-deep .mat-basic-chip.td-chip-after-pad {\n        padding: 0 12px 0 0; }\n        html[dir=rtl] :host ::ng-deep .mat-basic-chip.td-chip-after-pad {\n          padding: 0 0 0 12px;\n          unicode-bidi: embed; }\n        body[dir=rtl] :host ::ng-deep .mat-basic-chip.td-chip-after-pad {\n          padding: 0 0 0 12px;\n          unicode-bidi: embed; }\n        [dir=rtl] :host ::ng-deep .mat-basic-chip.td-chip-after-pad {\n          padding: 0 0 0 12px;\n          unicode-bidi: embed; }\n        :host ::ng-deep .mat-basic-chip.td-chip-after-pad bdo[dir=rtl] {\n          direction: rtl;\n          unicode-bidi: bidi-override; }\n        :host ::ng-deep .mat-basic-chip.td-chip-after-pad bdo[dir=ltr] {\n          direction: ltr;\n          unicode-bidi: bidi-override; }\n      :host ::ng-deep .mat-basic-chip mat-icon.td-chip-removal {\n        margin: 0 4px;\n        font-size: 21px;\n        line-height: 22px; }\n        :host ::ng-deep .mat-basic-chip mat-icon.td-chip-removal:hover {\n          cursor: pointer; }\n    :host ::ng-deep .td-chips-stacked .mat-basic-chip {\n      margin: 4px 0; }\n      :host ::ng-deep .td-chips-stacked .mat-basic-chip:first-of-type {\n        margin: 8px 0 4px; }\n      :host ::ng-deep .td-chips-stacked .mat-basic-chip:last-of-type {\n        margin: 4px 0 8px; }\n  :host .mat-form-field-underline {\n    position: relative;\n    height: 1px;\n    width: 100%;\n    bottom: 0; }\n    :host .mat-form-field-underline.mat-disabled {\n      background-position: 0;\n      bottom: -4px;\n      background-color: transparent; }\n    :host .mat-form-field-underline .mat-form-field-ripple {\n      position: absolute;\n      height: 2px;\n      top: 0;\n      width: 100%;\n      -webkit-transform-origin: 50%;\n              transform-origin: 50%;\n      -webkit-transform: scaleX(0.5);\n              transform: scaleX(0.5);\n      visibility: hidden;\n      opacity: 0;\n      -webkit-transition: background-color 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);\n      transition: background-color 0.3s cubic-bezier(0.55, 0, 0.55, 0.2); }\n      :host .mat-form-field-underline .mat-form-field-ripple.mat-focused {\n        visibility: visible;\n        opacity: 1;\n        -webkit-transform: scaleX(1);\n                transform: scaleX(1);\n        -webkit-transition: background-color 0.3s cubic-bezier(0.55, 0, 0.55, 0.2), -webkit-transform 150ms linear;\n        transition: background-color 0.3s cubic-bezier(0.55, 0, 0.55, 0.2), -webkit-transform 150ms linear;\n        transition: transform 150ms linear, background-color 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);\n        transition: transform 150ms linear, background-color 0.3s cubic-bezier(0.55, 0, 0.55, 0.2), -webkit-transform 150ms linear; }\n  :host ::ng-deep mat-form-field .mat-form-field-underline {\n    display: none; }\n`],\n  template: `<div class=\"td-chips-wrapper\"\n     [class.td-chips-stacked]=\"stacked\"\n     [class.td-chips-input-before-position]=\"inputPosition === 'before'\">\n  <ng-template let-chip let-first=\"first\" let-index=\"index\" ngFor [ngForOf]=\"value\">\n    <mat-basic-chip [class.td-chip-disabled]=\"disabled\"\n                   [class.td-chip-after-pad]=\"!canRemoveChip\"\n                   [color]=\"color\"\n                   (keydown)=\"_chipKeydown($event, index)\"\n                   (blur)=\"_handleChipBlur($event, chip)\"\n                   (focus)=\"_handleChipFocus($event, chip)\">\n      <div class=\"td-chip\" [class.td-chip-stacked]=\"stacked\">\n        <span class=\"td-chip-content\">\n          <span *ngIf=\"!_chipTemplate?.templateRef\">{{chip}}</span>\n          <ng-template\n            *ngIf=\"_chipTemplate?.templateRef\"\n            [ngTemplateOutlet]=\"_chipTemplate?.templateRef\"\n            [ngTemplateOutletContext]=\"{ chip: chip }\">\n          </ng-template>\n        </span>\n        <mat-icon *ngIf=\"canRemoveChip\" class=\"td-chip-removal\" (click)=\"_internalClick = removeChip(index)\">\n          cancel\n        </mat-icon>\n      </div>\n    </mat-basic-chip>\n  </ng-template>\n  <mat-form-field floatPlaceholder=\"never\"\n                  class=\"td-chips-form-field\"\n                  [style.width.px]=\"canAddChip ? null : 0\"\n                  [style.height.px]=\"canAddChip ? null : 0\"\n                  [color]=\"color\">\n    <input matInput\n            #input\n            [tabIndex]=\"-1\"\n            [matAutocomplete]=\"autocomplete\"\n            [formControl]=\"inputControl\"\n            [placeholder]=\"canAddChip? placeholder : ''\"\n            (keydown)=\"_inputKeydown($event)\"\n            (keyup.enter)=\"_handleAddChip()\"\n            (focus)=\"_handleFocus()\">\n  </mat-form-field>\n  <mat-autocomplete #autocomplete=\"matAutocomplete\"\n                   [displayWith]=\"_removeInputDisplay\"\n                   (optionSelected)=\"addChip($event.option.value)\">\n    <ng-template let-item let-first=\"first\" ngFor [ngForOf]=\"items\">\n      <mat-option (click)=\"_setInternalClick()\" [value]=\"item\">\n        <span *ngIf=\"!_autocompleteOptionTemplate?.templateRef\">{{item}}</span>\n        <ng-template\n          *ngIf=\"_autocompleteOptionTemplate?.templateRef\"\n          [ngTemplateOutlet]=\"_autocompleteOptionTemplate?.templateRef\"\n          [ngTemplateOutletContext]=\"{ option: item }\">\n        </ng-template>\n      </mat-option>\n    </ng-template>\n  </mat-autocomplete>\n</div>\n<div *ngIf=\"chipAddition\" class=\"mat-form-field-underline\"\n      [class.mat-disabled]=\"disabled\">\n  <span class=\"mat-form-field-ripple\"\n        [class.mat-focused]=\"focused\"></span>\n</div>\n<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChipsComponent extends _TdChipsMixinBase implements IControlValueAccessor, DoCheck, OnInit, AfterViewInit, OnDestroy, ICanDisable {\n\n  private _outsideClickSubs: Subscription;\n\n  private _isMousedown: boolean = false;\n\n  private _items: any[];\n  private _length: number = 0;\n  private _stacked: boolean = false;\n  private _requireMatch: boolean = false;\n  private _color: 'primary' | 'accent' | 'warn' = 'primary';\n  private _inputPosition: 'before' | 'after' = 'after';\n  private _chipAddition: boolean = true;\n  private _chipRemoval: boolean = true;\n  private _focused: boolean = false;\n  private _tabIndex: number = 0;\n\n  _internalClick: boolean = false;\n  _internalActivateOption: boolean = false;\n\n  @ViewChild('input') _nativeInput: ElementRef;\n  @ViewChild(MatInput) _inputChild: MatInput;\n  @ViewChild(MatAutocompleteTrigger) _autocompleteTrigger: MatAutocompleteTrigger;\n  @ViewChildren(MatChip) _chipsChildren: QueryList<MatChip>;\n\n  @ContentChild(TdChipDirective) _chipTemplate: TdChipDirective;\n  @ContentChild(TdAutocompleteOptionDirective) _autocompleteOptionTemplate: TdAutocompleteOptionDirective;\n\n  @ViewChildren(MatOption) _options: QueryList<MatOption>;\n\n  /**\n   * Flag that is true when autocomplete is focused.\n   */\n  get focused(): boolean {\n    return this._focused;\n  }\n\n  /**\n   * FormControl for the matInput element.\n   */\n  inputControl: FormControl = new FormControl();\n\n  /**\n   * items?: any[]\n   * Renders the `mat-autocomplete` with the provided list to display as options.\n   */\n  @Input('items')\n  set items(items: any[]) {\n    this._items = items;\n    this._setFirstOptionActive();\n    this._changeDetectorRef.markForCheck();\n  }\n  get items(): any[] {\n    return this._items;\n  }\n\n  /**\n   * stacked?: boolean\n   * Set stacked or horizontal chips depending on value.\n   * Defaults to false.\n   */\n  @Input('stacked')\n  set stacked(stacked: boolean) {\n    this._stacked = coerceBooleanProperty(stacked);\n  }\n  get stacked(): boolean {\n    return this._stacked;\n  }\n\n  /**\n   * inputPosition?: 'before' | 'after'\n   * Set input position before or after the chips.\n   * Defaults to 'after'.\n   */\n  @Input('inputPosition')\n  set inputPosition(inputPosition: 'before' | 'after') {\n    this._inputPosition = inputPosition;\n  }\n  get inputPosition(): 'before' | 'after' {\n    return this._inputPosition;\n  }\n\n  /**\n   * requireMatch?: boolean\n   * Blocks custom inputs and only allows selections from the autocomplete list.\n   */\n  @Input('requireMatch')\n  set requireMatch(requireMatch: boolean) {\n    this._requireMatch = coerceBooleanProperty(requireMatch);\n  }\n  get requireMatch(): boolean {\n    return this._requireMatch;\n  }\n\n  /**\n   * chipAddition?: boolean\n   * Disables the ability to add chips. When setting disabled as true, this will be overriden.\n   * Defaults to true.\n   */\n  @Input('chipAddition')\n  set chipAddition(chipAddition: boolean) {\n    this._chipAddition = chipAddition;\n    this._toggleInput();\n  }\n  get chipAddition(): boolean {\n    return this._chipAddition;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   * States if a chip can be added and if the input is available\n   */\n  get canAddChip(): boolean {\n    return this.chipAddition && !this.disabled;\n  }\n\n  /**\n   * chipRemoval?: boolean\n   * Disables the ability to remove chips. If it doesn't exist chip remmoval defaults to true.\n   * When setting disabled as true, this will be overriden to false.\n   */\n  @Input('chipRemoval')\n  set chipRemoval(chipRemoval: boolean) {\n    this._chipRemoval = chipRemoval;\n  }\n  get chipRemoval(): boolean {\n    return this._chipRemoval;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipRemoval is set to 'true'\n   * States if a chip can be removed\n   */\n  get canRemoveChip(): boolean {\n    return this.chipRemoval && !this.disabled;\n  }\n\n  /**\n   * placeholder?: string\n   * Placeholder for the autocomplete input.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 200.\n   */\n  @Input('debounce') debounce: number = 200;\n\n  /**\n   * color?: 'primary' | 'accent' | 'warn'\n   * Sets the color for the input and focus/selected state of the chips.\n   * Defaults to 'primary'\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  /**\n   * add?: function\n   * Method to be executed when a chip is added.\n   * Sends chip value as event.\n   */\n  @Output('add') onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * remove?: function\n   * Method to be executed when a chip is removed.\n   * Sends chip value as event.\n   */\n  @Output('remove') onRemove: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * inputChange?: function\n   * Method to be executed when the value in the autocomplete input changes.\n   * Sends string value as event.\n   */\n  @Output('inputChange') onInputChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * chipFocus?: function\n   * Method to be executed when a chip is focused.\n   * Sends chip value as event.\n   */\n  @Output('chipFocus') onChipFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * blur?: function\n   * Method to be executed when a chip is blurred.\n   * Sends chip value as event.\n   */\n  @Output('chipBlur') onChipBlur: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Hostbinding to set the a11y of the TdChipsComponent depending on its state\n   */\n  @HostBinding('attr.tabindex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : this._tabIndex;\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n  }\n\n  /**\n   * Listens to host focus event to act on it\n   */\n  @HostListener('focus', ['$event'])\n  focusListener(event: FocusEvent): void {\n    // should only focus if its not via mousedown to prevent clashing with autocomplete\n    if (!this._isMousedown) {\n      this.focus();\n    }\n    event.preventDefault();\n  }\n\n  /**\n   * Listens to host mousedown event to act on it\n   */\n  @HostListener('mousedown', ['$event'])\n  mousedownListener(event: FocusEvent): void {\n     // sets a flag to know if there was a mousedown and then it returns it back to false\n    this._isMousedown = true;\n    toPromise.call(timer()).then(() => {\n      this._isMousedown = false;\n    });\n  }\n\n  /**\n   * If clicking on :host or `td-chips-wrapper`, then we stop the click propagation so the autocomplete\n   * doesnt close automatically.\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    const clickTarget: HTMLElement = <HTMLElement>event.target;\n    if (clickTarget === this._elementRef.nativeElement ||\n        clickTarget.className.indexOf('td-chips-wrapper') > -1) {\n      this.focus();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Listens to host keydown event to act on it depending on the keypress\n   */\n  @HostListener('keydown', ['$event'])\n  keydownListener(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case TAB:\n        // if tabing out, then unfocus the component\n        toPromise.call(timer()).then(() => {\n          this.removeFocusedState();\n        });\n        break;\n      case ESCAPE:\n        if (this._inputChild.focused) {\n          this._nativeInput.nativeElement.blur();\n          this.removeFocusedState();\n          this._closeAutocomplete();\n        } else {\n          this.focus();\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  ngOnInit(): void {\n    this.inputControl.valueChanges.pipe(\n      debounceTime(this.debounce),\n    ).subscribe((value: string) => {\n      this.onInputChange.emit(value ? value : '');\n    });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterViewInit(): void {\n    this._watchOutsideClick();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngDoCheck(): void {\n    // Throw onChange event only if array changes size.\n    if (this.value && this.value.length !== this._length) {\n      this._length = this.value.length;\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._outsideClickSubs) {\n      this._outsideClickSubs.unsubscribe();\n      this._outsideClickSubs = undefined;\n    }\n  }\n\n  _setInternalClick(): void {\n    this._internalClick = true;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    this._toggleInput();\n  }\n\n  /**\n   * Method that is executed when trying to create a new chip from the autocomplete.\n   * It check if [requireMatch] is enabled, and tries to add the first active option\n   * else if just adds the value thats on the input\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  _handleAddChip(): boolean {\n    let value: any;\n    if (this.requireMatch) {\n      let selectedOptions: MatOption[] = this._options.toArray().filter((option: MatOption) => {\n        return option.active;\n      });\n      if (selectedOptions.length > 0) {\n        value = selectedOptions[0].value;\n        selectedOptions[0].setInactiveStyles();\n      }\n      if (!value) {\n        return false;\n      }\n    } else {\n      // if there is a selection, then use that\n      // else use the input value as chip\n      if (this._autocompleteTrigger.activeOption) {\n        value = this._autocompleteTrigger.activeOption.value;\n        this._autocompleteTrigger.activeOption.setInactiveStyles();\n      } else {\n        value = this._inputChild.value;\n        if (value.trim() === '') {\n          return false;\n        }\n      }\n    }\n    return this.addChip(value);\n  }\n\n  /**\n   * Method thats exectuted when trying to add a value as chip\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  addChip(value: any): boolean {\n    /**\n     * add a debounce ms delay when reopening the autocomplete to give it time\n     * to rerender the next list and at the correct spot\n     */\n    this._closeAutocomplete();\n    toPromise.call(timer(this.debounce)).then(() => {\n      this.setFocusedState();\n      this._setFirstOptionActive();\n      this._openAutocomplete();\n    });\n\n    this.inputControl.setValue('');\n    // check if value is already part of the model\n    if (this.value.indexOf(value) > -1) {\n      return false;\n    }\n\n    this.value.push(value);\n    this.onAdd.emit(value);\n    this.onChange(this.value);\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Method that is executed when trying to remove a chip.\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  removeChip(index: number): boolean {\n    let removedValues: any[] = this.value.splice(index, 1);\n    if (removedValues.length === 0) {\n      return false;\n    }\n\n    /**\n     * Checks if deleting last single chip, to focus input afterwards\n     * Else check if its not the last chip of the list to focus the next one.\n     */\n    if (index === (this._totalChips - 1) && index === 0) {\n      this._inputChild.focus();\n    } else if (index < (this._totalChips - 1)) {\n      this._focusChip(index + 1);\n    } else if (index > 0) {\n      this._focusChip(index - 1);\n    }\n\n    this.onRemove.emit(removedValues[0]);\n    this.onChange(this.value);\n    this.inputControl.setValue('');\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Sets blur of chip and sends out event\n   */\n  _handleChipBlur(event: FocusEvent, value: any): void {\n    this.onChipBlur.emit(value);\n  }\n\n  /**\n   * Sets focus of chip and sends out event\n   */\n  _handleChipFocus(event: FocusEvent, value: any): void {\n    this.setFocusedState();\n    this.onChipFocus.emit(value);\n  }\n\n  _handleFocus(): boolean {\n    this.setFocusedState();\n    this._setFirstOptionActive();\n    return true;\n  }\n\n  /**\n   * Sets focus state of the component\n   */\n  setFocusedState(): void {\n    if (!this.disabled) {\n      this._focused = true;\n      this._tabIndex = -1;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Removes focus state of the component\n   */\n  removeFocusedState(): void {\n    this._focused = false;\n    this._tabIndex = 0;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Programmatically focus the input or first chip. Since its the component entry point\n   * depending if a user can add or remove chips\n   */\n  focus(): void {\n    if (this.canAddChip) {\n      this._inputChild.focus();\n    } else if (!this.disabled) {\n      this._focusFirstChip();\n    }\n  }\n\n  /**\n   * Passes relevant input key presses.\n   */\n  _inputKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case UP_ARROW:\n        /**\n         * Since the first item is highlighted on [requireMatch], we need to inactivate it\n         * when pressing the up key\n         */\n        if (this.requireMatch) {\n          let length: number = this._options.length;\n          if (length > 1 && this._options.toArray()[0].active && this._internalActivateOption) {\n            this._options.toArray()[0].setInactiveStyles();\n            this._internalActivateOption = false;\n            // prevent default window scrolling\n            event.preventDefault();\n          }\n        }\n        break;\n      case LEFT_ARROW:\n      case DELETE:\n      case BACKSPACE:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing left arrow to move to the last chip */\n        if (!this._inputChild.value) {\n          this._focusLastChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      case RIGHT_ARROW:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing right arrow to move to the first chip */\n        if (!this._inputChild.value) {\n          this._focusFirstChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Passes relevant chip key presses.\n   */\n  _chipKeydown(event: KeyboardEvent, index: number): void {\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        /** Check to see if we can delete a chip */\n        if (this.canRemoveChip) {\n         this.removeChip(index);\n        }\n        break;\n      case UP_ARROW:\n      case LEFT_ARROW:\n        /**\n         * Check to see if left/down arrow was pressed while focusing the first chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === 0) {\n          // only try to target input if pressing left\n          if (this.canAddChip && event.keyCode === LEFT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusLastChip();\n          }\n        } else if (index > 0) {\n          this._focusChip(index - 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      case DOWN_ARROW:\n      case RIGHT_ARROW:\n        /**\n         * Check to see if right/up arrow was pressed while focusing the last chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === (this._totalChips - 1)) {\n          // only try to target input if pressing right\n          if (this.canAddChip && event.keyCode === RIGHT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusFirstChip();\n          }\n        } else if (index < (this._totalChips - 1)) {\n          this._focusChip(index + 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Method to remove from display the value added from the autocomplete since it goes directly as chip.\n   */\n  _removeInputDisplay(): string {\n    return '';\n  }\n\n  /**\n   * Method to open the autocomplete manually if its not already opened\n   */\n  _openAutocomplete(): void {\n    if (!this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.openPanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Method to close the autocomplete manually if its not already closed\n   */\n  _closeAutocomplete(): void {\n    if (this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.closePanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Get total of chips\n   */\n  get _totalChips(): number {\n    let chips: MatChip[] = this._chipsChildren.toArray();\n    return chips.length;\n  }\n\n  /**\n   * Method to focus a desired chip by index\n   */\n  private _focusChip(index: number): void {\n    /** check to see if index exists in the array before focusing */\n    if (index > -1 && this._totalChips > index) {\n      this._chipsChildren.toArray()[index].focus();\n    }\n  }\n\n  /** Method to focus first chip */\n  private _focusFirstChip(): void {\n    this._focusChip(0);\n  }\n\n  /** Method to focus last chip */\n  private _focusLastChip(): void {\n    this._focusChip(this._totalChips - 1);\n  }\n\n  /**\n   * Method to toggle the disable state of input\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   */\n  private _toggleInput(): void {\n    if (this.canAddChip) {\n      this.inputControl.enable();\n    } else {\n      this.inputControl.disable();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Sets first option as active to let the user know which one will be added when pressing enter\n   * Only if [requireMatch] has been set\n   */\n  private _setFirstOptionActive(): void {\n    if (this.requireMatch) {\n      // need to use a timer here to wait until the autocomplete has been opened (end of queue)\n      toPromise.call(timer()).then(() => {\n        if (this.focused && this._options && this._options.length > 0) {\n          // clean up of previously active options\n          this._options.toArray().forEach((option: MatOption) => {\n            option.setInactiveStyles();\n          });\n          // set the first one as active\n          this._options.toArray()[0].setActiveStyles();\n          this._internalActivateOption = true;\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n  }\n\n  /**\n   * Watches clicks outside of the component to remove the focus\n   * The autocomplete panel is considered inside the component so we\n   * need to use a flag to find out when its clicked.\n   */\n  private _watchOutsideClick(): void {\n    if (this._document) {\n      merge(\n        fromEvent(this._document, 'click'),\n        fromEvent(this._document, 'touchend'),\n      ).pipe(\n        filter(\n          (event: MouseEvent) => {\n            const clickTarget: HTMLElement = <HTMLElement>event.target;\n            setTimeout(() => {\n              this._internalClick = false;\n            });\n            return this.focused &&\n                  (clickTarget !== this._elementRef.nativeElement) &&\n                  !this._elementRef.nativeElement.contains(clickTarget) && !this._internalClick;\n          },\n        ),\n      ).subscribe(() => {\n        if (this.focused) {\n          this._autocompleteTrigger.closePanel();\n          this.removeFocusedState();\n          this.onTouched();\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n    return undefined;\n  }\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdMessageComponent, TdMessageContainerDirective } from './message.component';\n\nconst TD_MESSAGE: Type<any>[] = [\n  TdMessageComponent,\n  TdMessageContainerDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TD_MESSAGE,\n  ],\n  exports: [\n    TD_MESSAGE,\n  ],\n})\nexport class CovalentMessageModule {\n\n}\n",
    "import { Component, Directive, Input, Renderer2, ElementRef, AfterViewInit, ViewContainerRef, TemplateRef, ViewChild,\n         HostBinding, HostListener, ChangeDetectorRef } from '@angular/core';\n\nimport { TdCollapseAnimation, TdFadeInOutAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  selector: 'td-message',\n  template: `<div tdMessageContainer></div>\n<ng-template>\n  <div class=\"td-message-wrapper\">\n    <mat-icon class=\"td-message-icon\">{{icon}}</mat-icon>\n    <div class=\"td-message-labels\">\n      <div *ngIf=\"label\" class=\"td-message-label\">{{label}}</div>\n      <div *ngIf=\"sublabel\" class=\"td-message-sublabel\">{{sublabel}}</div>\n    </div>\n    <ng-content select=\"[td-message-actions]\"></ng-content>\n  </div>\n</ng-template>`,\n  styles: [`:host {\n  display: block; }\n  :host .td-message-wrapper {\n    padding: 8px 16px;\n    min-height: 52px;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -ms-flex-line-pack: center;\n        align-content: center;\n    max-width: 100%;\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: start; }\n    :host .td-message-wrapper .td-message-labels {\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1; }\n\n.td-message-icon {\n  margin-right: 16px; }\n  ::ng-deep [dir='rtl'] .td-message-icon {\n    margin-left: 16px;\n    margin-right: 0; }\n`],\n  animations: [\n    TdCollapseAnimation({ duration: 100 }),\n  ],\n})\nexport class TdMessageComponent implements AfterViewInit {\n\n  private _color: string;\n  private _opened: boolean = true;\n  private _hidden: boolean = false;\n  private _animating: boolean = false;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef) _template: TemplateRef<any>;\n\n  /**\n   * Binding host to tdCollapse animation\n   */\n  @HostBinding('@tdCollapse')\n  get collapsedAnimation(): boolean {\n    return !this._opened;\n  }\n\n  /**\n   * Binding host to display style when hidden\n   */\n  @HostBinding('style.display')\n  get hidden(): string {\n    return this._hidden ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input('icon') icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Detach element when close animation is finished to set animating state to false\n   * hidden state to true and detach element from DOM\n   */\n  @HostListener('@tdCollapse.done')\n  animationDoneListener(): void {\n    if (!this._opened) {\n      this._hidden = true;\n      this._detach();\n    }\n    this._animating = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Initializes the component and attaches the content.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._attach();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen\n   * Validates if there is an animation currently and if its already opened\n   */\n  open(): void {\n    if (!this._opened && !this._animating) {\n      this._opened = true;\n      this._attach();\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   * Validates if there is an animation currently and if its already closed\n   */\n  close(): void {\n    if (this._opened && !this._animating) {\n      this._opened = false;\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Method to set the state before starting an animation\n   */\n  private _startAnimationState(): void {\n    this._animating = true;\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to attach template to DOM\n   */\n  private _attach(): void {\n    this._childElement.viewContainer.createEmbeddedView(this._template);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to detach template from DOM\n   */\n  private _detach(): void {\n    this._childElement.viewContainer.clear();\n    this._changeDetectorRef.markForCheck();\n  }\n}\n",
    "import { Validators, AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class CovalentValidators {\n  static min(minValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {\n      if (!!Validators.required(c) || (!minValue && minValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v < minValue ?\n        { min: {minValue: minValue, actualValue: v} } :\n        undefined;\n    };\n    return func;\n  }\n\n  static max(maxValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {\n      if (!!Validators.required(c) || (!maxValue && maxValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v > maxValue ?\n        { max: {maxValue: maxValue, actualValue: v} } :\n        undefined;\n    };\n    return func;\n  }\n\n  static numberRequired(c: AbstractControl): {[key: string]: any} {\n    return (Number.isNaN(c.value)) ?\n        { required: true } :\n        undefined;\n  }\n\n}\n",
    "import { Constructor } from './constructor';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisableRipple {\n  disableRipple: boolean;\n  onDisableRippleChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): Constructor<ICanDisableRipple> & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disableRipple(): boolean {\n      return this._disableRipple;\n    }\n    set disableRipple(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disableRipple !== newValue) {\n        this._disableRipple = newValue;\n        this.onDisableRippleChange(this._disableRipple);\n      }\n    }\n\n    onDisableRippleChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n",
    "import { Constructor } from './constructor';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisable {\n  disabled: boolean;\n  onDisabledChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<ICanDisable> & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disabled(): boolean {\n      return this._disabled;\n    }\n    set disabled(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n        this.onDisabledChange(this._disabled);\n      }\n    }\n\n    onDisabledChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n",
    "import { Constructor } from './constructor';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport interface IControlValueAccessor extends ControlValueAccessor {\n  value: any;\n  valueChanges: Observable<any>;\n  onChange: (_: any) => any;\n  onTouched: () => any;\n}\n\nexport interface IHasChangeDetectorRef {\n  _changeDetectorRef: ChangeDetectorRef;\n}\n\n/** Mixin to augment a component with ngModel support. */\nexport function mixinControlValueAccessor<T extends Constructor<IHasChangeDetectorRef>>\n                (base: T, initialValue?: any): Constructor<IControlValueAccessor> & T {\n  return class extends base {\n    private _value: any = initialValue;\n    private _subjectValueChanges: Subject<any>;\n    valueChanges: Observable<any>;\n\n    constructor(...args: any[]) {\n      super(...args); \n      this._subjectValueChanges = new Subject<any>();\n      this.valueChanges = this._subjectValueChanges.asObservable();\n    }\n\n    set value(v: any) {\n      if (v !== this._value) {\n        this._value = v;\n        this.onChange(v);\n        this._changeDetectorRef.markForCheck();\n        this._subjectValueChanges.next(v);\n      }\n    }\n    get value(): any {\n      return this._value;\n    }\n\n    writeValue(value: any): void {\n      this.value = value;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    registerOnChange(fn: any): void {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n    }\n\n    onChange = (_: any) => noop;\n    onTouched = () => noop;\n\n  };\n}\n",
    "\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * Function TdPulseAnimation\n *\n * params:\n * * anchor: Name of the anchor that will attach to a dom element in the components template that will contain the animation.\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n *\n * Returns an [AnimationTriggerMetadata] object with states for a boolean trigger based pulse animation.\n *\n * usage: [@myAnchorName]=\"true|false\"\n */\nexport function TdPulseAnimation(pulseOptions: IAnimationOptions = {}): AnimationTriggerMetadata {\n  return trigger(pulseOptions.anchor || 'tdPulse', [\n    state('0', style({\n      transform: 'scale3d(1, 1, 1)',\n    })),\n    state('1',  style({\n      transform: 'scale3d(1, 1, 1)',\n    })),\n    transition('0 <=> 1', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate((pulseOptions.duration || 500) + 'ms ' + (pulseOptions.delay || 0) + 'ms',\n          keyframes([\n            style({ transform: 'scale3d(1, 1, 1)', offset: 0 }),\n            style({ transform: 'scale3d(1.05, 1.05, 1.05)', offset: 0.5 }),\n            style({ transform: 'scale3d(1, 1, 1)', offset: 1.0 }),\n          ]),\n        ),\n      ]),\n    ]),\n  ]);\n}\n",
    "\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * Function TdJelloAnimation\n *\n * params:\n * * anchor: Name of the anchor that will attach to a dom element in the components template that will contain the animation.\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n *\n * Returns an [AnimationTriggerMetadata] object with states for a boolean trigger based jello animation.\n *\n * usage: [@myAnchorName]=\"true|false\"\n */\nexport function TdJelloAnimation(jelloOptions: IAnimationOptions = {}): AnimationTriggerMetadata {\n  return trigger(jelloOptions.anchor || 'tdJello', [\n    state('0', style({\n      transform: 'none',\n    })),\n    state('1',  style({\n      transform: 'none',\n    })),\n    transition('0 <=> 1', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate((jelloOptions.duration || 500) + 'ms ' + (jelloOptions.delay || 0) + 'ms', keyframes([\n          style({transform: 'none', offset: 0}),\n          style({transform: 'none', offset: 0.011}),\n          style({transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.222}),\n          style({transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.333}),\n          style({transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.444}),\n          style({transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.555}),\n          style({transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.666}),\n          style({transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777}),\n          style({transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)', offset: 0.888}),\n        ])),\n      ]),\n    ]),\n  ]);\n}\n",
    "\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * Function TdHeadshakeAnimation\n *\n * params:\n * * anchor: Name of the anchor that will attach to a dom element in the components template that will contain the animation.\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n *\n * Returns an [AnimationTriggerMetadata] object with states for a boolean trigger based headshake animation.\n *\n * usage: [@myAnchorName]=\"true|false\"\n */\nexport function TdHeadshakeAnimation(headshakeOptions: IAnimationOptions = {}): AnimationTriggerMetadata {\n  return trigger(headshakeOptions.anchor || 'tdHeadshake', [\n    state('0', style({\n      transform: 'translateX(0)',\n    })),\n    state('1',  style({\n      transform: 'translateX(0)',\n    })),\n    transition('0 <=> 1', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate((headshakeOptions.duration || 500) + 'ms ' + (headshakeOptions.delay || 0) + 'ms', keyframes([\n          style({transform: 'translateX(0)', offset: 0}),\n          style({transform: 'translateX(-6px) rotateY(-9deg)', offset: 0.065}),\n          style({transform: 'translateX(5px) rotateY(7deg)', offset: 0.185}),\n          style({transform: 'translateX(-3px) rotateY(-5deg)', offset: 0.315}),\n          style({transform: 'translateX(2px) rotateY(3deg)', offset: 0.435}),\n          style({transform: 'translateX(0)', offset: 0.50}),\n        ])),\n      ]),\n    ]),\n  ]);\n}\n",
    "\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * Function TdFlashAnimation\n *\n * params:\n * * anchor: Name of the anchor that will attach to a dom element in the components template that will contain the animation.\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n *\n * Returns an [AnimationTriggerMetadata] object with states for a boolean trigger based flash animation.\n *\n * usage: [@myAnchorName]=\"true|false\"\n */\nexport function TdFlashAnimation(flashOptions: IAnimationOptions = {}): AnimationTriggerMetadata {\n  return trigger(flashOptions.anchor || 'tdFlash', [\n    state('0', style({\n      opacity: 1,\n    })),\n    state('1',  style({\n      opacity: 1,\n    })),\n    transition('0 <=> 1', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate((flashOptions.duration || 500) + 'ms ' + (flashOptions.delay || 0) + 'ms', keyframes([\n          style({opacity: 1, offset: 0}),\n          style({opacity: 0, offset: 0.25}),\n          style({opacity: 1, offset: 0.5}),\n          style({opacity: 0, offset: 0.75}),\n          style({opacity: 1, offset: 1.0}),\n        ])),\n      ]),\n    ]),\n  ]);\n}\n",
    "\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * Function TdBounceAnimation\n *\n * params:\n * * anchor: Name of the anchor that will attach to a dom element in the components template that will contain the animation.\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n *\n * Returns an [AnimationTriggerMetadata] object with states for a boolean trigger based bounce animation.\n *\n * usage: [@myAnchorName]=\"true|false\"\n */\nexport function TdBounceAnimation(bounceOptions: IAnimationOptions = {}): AnimationTriggerMetadata {\n  return trigger(bounceOptions.anchor || 'tdBounce', [\n    state('0', style({\n      transform: 'translate3d(0, 0, 0)',\n    })),\n    state('1',  style({\n      transform: 'translate3d(0, 0, 0)',\n    })),\n    transition('0 <=> 1', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate((bounceOptions.duration || 500) + 'ms ' + (bounceOptions.delay || 0) + 'ms', keyframes([\n          style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0}),\n          style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.2}),\n          style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -30px, 0)', offset: 0.4}),\n          style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -30px, 0)', offset: 0.43}),\n          style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.53}),\n          style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -15px, 0)', offset: .7}),\n          style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.8}),\n          style({transform: 'translate3d(0, -4px, 0)', offset: .9}),\n          style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 1.0}),\n        ])),\n      ]),\n    ]),\n  ]);\n}\n",
    "import { trigger, state, style, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group  } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IFadeInOutAnimation extends IAnimationOptions {\n  easeOnIn?: string;\n  easeOnOut?: string;\n}\n\n/**\n * Function TdFadeInOutAnimation\n *\n * params:\n * * anchor: Name of the anchor that will attach to a dom element in the components template that will contain the animation. Defaults to tdFadeInOut\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnIn: Animation accelerates and decelerates when fading in. Defaults to ease-in.\n * * easeOnOut: Animation accelerates and decelerates when fading out. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with states for a fading animation.\n *\n * usage: [@tdFadeInOut]=\"true|false\"\n */\nexport function TdFadeInOutAnimation(fadeInOut: IFadeInOutAnimation = {}): AnimationTriggerMetadata {\n  return trigger((fadeInOut.anchor || 'tdFadeInOut'), [\n    state('0', style({\n      opacity: '0',\n      display: 'none',\n    })),\n    state('1',  style({\n      opacity: AUTO_STYLE,\n      display: AUTO_STYLE,\n    })),\n    transition('0 => 1', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate((fadeInOut.duration || 150) + 'ms ' +\n                (fadeInOut.delay || 0) + 'ms ' +\n                (fadeInOut.easeOnIn || 'ease-in')),\n      ]),\n    ]),\n    transition('1 => 0', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate((fadeInOut.duration || 150) + 'ms ' +\n                (fadeInOut.delay || 0) + 'ms ' +\n                (fadeInOut.easeOnOut || 'ease-out')),\n      ]),\n    ]),\n  ]);\n}\n",
    "import { trigger, state, style, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface ICollapseAnimation extends IAnimationOptions {\n   easeOnClose?: string;\n   easeOnOpen?: string;\n}\n\n/**\n * Function TdCollapseAnimation\n *\n * params:\n * * anchor: Name of the anchor that will attach to a dom element in the components template that will contain the animation. Defaults to tdCollapse.\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnClose: Animation accelerates and decelerates when closing. Defaults to ease-in.\n * * easeOnOpen: Animation accelerates and decelerates when opening. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with states for a collapse/expand animation.\n *\n * usage: [@tdCollapse]=\"true|false\"\n */\nexport function TdCollapseAnimation(collapseOptions: ICollapseAnimation = {}): AnimationTriggerMetadata {\n  return trigger(collapseOptions.anchor || 'tdCollapse', [\n    state('1', style({\n      height: '0',\n      display: 'none',\n    })),\n    state('0',  style({\n      height: AUTO_STYLE,\n      display: AUTO_STYLE,\n    })),\n    transition('0 => 1', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate((collapseOptions.duration || 150) + 'ms ' +\n                (collapseOptions.delay || 0) + 'ms ' +\n                (collapseOptions.easeOnClose || 'ease-in')),\n      ]),\n    ]),\n    transition('1 => 0', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate((collapseOptions.duration || 150) + 'ms ' +\n                (collapseOptions.delay || 0) + 'ms ' +\n                (collapseOptions.easeOnOpen || 'ease-out')),\n      ]),\n    ]),\n  ]);\n}\n",
    "import { trigger, state, style, transition, animate, AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IRotateAnimation extends IAnimationOptions {\n  degrees?: number;\n  ease?: string;\n}\n\n/**\n * Function TdRotateAnimation\n *\n * params:\n * * anchor: Name of the anchor that will attach to a dom element in the components template that will contain the animation. Defaults to tdRotate.\n * * duration: Duration the animation will run in milliseconds. Defaults to 250 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * degrees: Degrees of rotation that the dom object will animation. A negative value will cause the animation to initially rotate counter-clockwise.\n * * ease: Animation accelerates and decelerates when rotation. Defaults to ease-in.\n *\n * Returns an [AnimationTriggerMetadata] object with states for a boolean trigger based rotation animation.\n *\n * usage: [@myAnchorName]=\"true|false\"\n */\nexport function TdRotateAnimation(rotateOptions: IRotateAnimation = {}): AnimationTriggerMetadata {\n  return trigger(rotateOptions.anchor || 'tdRotate', [\n    state('0', style({\n      transform: 'rotate(0deg)',\n    })),\n    state('1',  style({\n      transform: 'rotate(' + (rotateOptions.degrees || 180) + 'deg)',\n    })),\n    transition('0 <=> 1', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate((rotateOptions.duration || 250) + 'ms ' +\n          (rotateOptions.delay || 0) + 'ms ' +\n          (rotateOptions.ease || 'ease-in')),\n      ]),\n    ]),\n  ]);\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * ANIMATIONS\n */\n\n// Directives\nimport { TdToggleDirective } from './animations/toggle/toggle.directive';\nimport { TdFadeDirective } from './animations/fade/fade.directive';\n\nconst TD_ANIMATIONS: Type<any>[] = [\n  TdToggleDirective,\n  TdFadeDirective,\n];\n\n/**\n * FORMS\n */\n\n// Form Directives\nimport { TdAutoTrimDirective } from './forms/auto-trim/auto-trim.directive';\n\nconst TD_FORMS: Type<any>[] = [\n  TdAutoTrimDirective,\n];\n\n// Validators\nconst TD_VALIDATORS: Type<any>[] = [\n];\n\n/**\n * PIPES\n */\nimport { TdTimeAgoPipe } from './pipes/time-ago/time-ago.pipe';\nimport { TdTimeDifferencePipe } from './pipes/time-difference/time-difference.pipe';\nimport { TdBytesPipe } from './pipes/bytes/bytes.pipe';\nimport { TdDigitsPipe } from './pipes/digits/digits.pipe';\nimport { TdTruncatePipe } from './pipes/truncate/truncate.pipe';\n\nconst TD_PIPES: Type<any>[] = [\n  TdTimeAgoPipe,\n  TdTimeDifferencePipe,\n  TdBytesPipe,\n  TdDigitsPipe,\n  TdTruncatePipe,\n];\n\n/**\n * Services\n */\n\nimport { RouterPathService } from './services/router-path.service';\nimport { IconService } from './services/icon.service';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n  ],\n  declarations: [\n    TD_FORMS,\n    TD_PIPES,\n    TD_ANIMATIONS,\n    TD_VALIDATORS,\n  ],\n  exports: [\n    FormsModule,\n    CommonModule,\n    TD_FORMS,\n    TD_PIPES,\n    TD_ANIMATIONS,\n    TD_VALIDATORS,\n  ],\n  providers: [\n    RouterPathService,\n    IconService,\n  ],\n})\nexport class CovalentCommonModule {\n\n}\n",
    "/*\n * Copyright (C) 2016-2017 by Teradata Corporation. All rights reserved.\n * TERADATA CORPORATION CONFIDENTIAL AND TRADE SECRET\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IconService {\n\n  private _icons: string[] = [\n    'access_alarm',\n    'access_alarms',\n    'access_time',\n    'accessibility',\n    'account_balance',\n    'account_balance_wallet',\n    'account_box',\n    'account_circle',\n    'add',\n    'add_alarm',\n    'add_box',\n    'add_circle',\n    'add_circle_outline',\n    'add_shopping_cart',\n    'add_to_photos',\n    'adjust',\n    'alarm',\n    'alarm_add',\n    'alarm_off',\n    'alarm_on',\n    'album',\n    'android',\n    'announcement',\n    'apps',\n    'archive',\n    'arrow_back',\n    'arrow_drop_down',\n    'arrow_drop_down_circle',\n    'arrow_drop_up',\n    'arrow_forward',\n    'aspect_ratio',\n    'assessment',\n    'assignment',\n    'assignment_ind',\n    'assignment_late',\n    'assignment_return',\n    'assignment_returned',\n    'assignment_turned_in',\n    'assistant_photo',\n    'attach_file',\n    'attach_money',\n    'attachment',\n    'audiotrack',\n    'autorenew',\n    'av_timer',\n    'backspace',\n    'backup',\n    'battery_alert',\n    'battery_charging_full',\n    'battery_full',\n    'battery_std',\n    'battery_unknown',\n    'beenhere',\n    'block',\n    'bluetooth',\n    'bluetooth_audio',\n    'bluetooth_connected',\n    'bluetooth_disabled',\n    'bluetooth_searching',\n    'blur_circular',\n    'blur_linear',\n    'blur_off',\n    'blur_on',\n    'book',\n    'bookmark',\n    'bookmark_border',\n    'border_all',\n    'border_bottom',\n    'border_clear',\n    'border_color',\n    'border_horizontal',\n    'border_inner',\n    'border_left',\n    'border_outer',\n    'border_right',\n    'border_style',\n    'border_top',\n    'border_vertical',\n    'brightness_1',\n    'brightness_2',\n    'brightness_3',\n    'brightness_4',\n    'brightness_5',\n    'brightness_6',\n    'brightness_7',\n    'brightness_auto',\n    'brightness_high',\n    'brightness_low',\n    'brightness_medium',\n    'broken_image',\n    'brush',\n    'bug_report',\n    'build',\n    'business',\n    'cached',\n    'cake',\n    'call',\n    'call_end',\n    'call_made',\n    'call_merge',\n    'call_missed',\n    'call_received',\n    'call_split',\n    'camera',\n    'camera_alt',\n    'camera_front',\n    'camera_rear',\n    'camera_roll',\n    'cancel',\n    'cast',\n    'cast_connected',\n    'center_focus_strong',\n    'center_focus_weak',\n    'chat',\n    'check',\n    'check_box',\n    'check_box_outline_blank',\n    'check_circle',\n    'chevron_left',\n    'chevron_right',\n    'class',\n    'clear',\n    'clear_all',\n    'close',\n    'closed_caption',\n    'cloud',\n    'cloud_circle',\n    'cloud_done',\n    'cloud_download',\n    'cloud_off',\n    'cloud_queue',\n    'cloud_upload',\n    'collections',\n    'collections_bookmark',\n    'color_lens',\n    'colorize',\n    'comment',\n    'compare',\n    'computer',\n    'confirmation_number',\n    'contact_phone',\n    'contacts',\n    'content_copy',\n    'content_cut',\n    'content_paste',\n    'control_point',\n    'control_point_duplicate',\n    'create',\n    'credit_card',\n    'crop',\n    'crop_16_9',\n    'crop_3_2',\n    'crop_5_4',\n    'crop_7_5',\n    'crop_din',\n    'crop_free',\n    'crop_landscape',\n    'crop_original',\n    'crop_portrait',\n    'crop_square',\n    'dashboard',\n    'data_usage',\n    'dehaze',\n    'delete',\n    'description',\n    'desktop_mac',\n    'desktop_windows',\n    'details',\n    'developer_board',\n    'developer_mode',\n    'device_hub',\n    'devices',\n    'dialer_sip',\n    'dialpad',\n    'directions',\n    'directions_bike',\n    'directions_boat',\n    'directions_bus',\n    'directions_car',\n    'directions_railway',\n    'directions_run',\n    'directions_subway',\n    'directions_transit',\n    'directions_walk',\n    'disc_full',\n    'dns',\n    'do_not_disturb',\n    'do_not_disturb_alt',\n    'dock',\n    'domain',\n    'done',\n    'done_all',\n    'drafts',\n    'drive_eta',\n    'dvr',\n    'edit',\n    'eject',\n    'email',\n    'equalizer',\n    'error',\n    'error_outline',\n    'event',\n    'event_available',\n    'event_busy',\n    'event_note',\n    'event_seat',\n    'exit_to_app',\n    'expand_less',\n    'expand_more',\n    'explicit',\n    'explore',\n    'exposure',\n    'exposure_neg_1',\n    'exposure_neg_2',\n    'exposure_plus_1',\n    'exposure_plus_2',\n    'exposure_zero',\n    'extension',\n    'face',\n    'fast_forward',\n    'fast_rewind',\n    'favorite',\n    'favorite_border',\n    'feedback',\n    'file_download',\n    'file_upload',\n    'filter',\n    'filter_1',\n    'filter_2',\n    'filter_3',\n    'filter_4',\n    'filter_5',\n    'filter_6',\n    'filter_7',\n    'filter_8',\n    'filter_9',\n    'filter_9_plus',\n    'filter_b_and_w',\n    'filter_center_focus',\n    'filter_drama',\n    'filter_frames',\n    'filter_hdr',\n    'filter_list',\n    'filter_none',\n    'filter_tilt_shift',\n    'filter_vintage',\n    'find_in_page',\n    'find_replace',\n    'flag',\n    'flare',\n    'flash_auto',\n    'flash_off',\n    'flash_on',\n    'flight',\n    'flight_land',\n    'flight_takeoff',\n    'flip',\n    'flip_to_back',\n    'flip_to_front',\n    'folder',\n    'folder_open',\n    'folder_shared',\n    'folder_special',\n    'font_download',\n    'format_align_center',\n    'format_align_justify',\n    'format_align_left',\n    'format_align_right',\n    'format_bold',\n    'format_clear',\n    'format_color_fill',\n    'format_color_reset',\n    'format_color_text',\n    'format_indent_decrease',\n    'format_indent_increase',\n    'format_italic',\n    'format_line_spacing',\n    'format_list_bulleted',\n    'format_list_numbered',\n    'format_paint',\n    'format_quote',\n    'format_size',\n    'format_strikethrough',\n    'format_textdirection_l_to_r',\n    'format_textdirection_r_to_l',\n    'format_underlined',\n    'forum',\n    'forward',\n    'forward_10',\n    'forward_30',\n    'forward_5',\n    'fullscreen',\n    'fullscreen_exit',\n    'functions',\n    'gamepad',\n    'games',\n    'gesture',\n    'get_app',\n    'gif',\n    'gps_fixed',\n    'gps_not_fixed',\n    'gps_off',\n    'grade',\n    'gradient',\n    'grain',\n    'graphic_eq',\n    'grid_off',\n    'grid_on',\n    'group',\n    'group_add',\n    'group_work',\n    'hd',\n    'hdr_off',\n    'hdr_on',\n    'hdr_strong',\n    'hdr_weak',\n    'headset',\n    'headset_mic',\n    'healing',\n    'hearing',\n    'help',\n    'help_outline',\n    'high_quality',\n    'highlight_off',\n    'history',\n    'home',\n    'hotel',\n    'hourglass_empty',\n    'hourglass_full',\n    'http',\n    'https',\n    'image',\n    'image_aspect_ratio',\n    'import_export',\n    'inbox',\n    'indeterminate_check_box',\n    'info',\n    'info_outline',\n    'input',\n    'insert_chart',\n    'insert_comment',\n    'insert_drive_file',\n    'insert_emoticon',\n    'insert_invitation',\n    'insert_link',\n    'insert_photo',\n    'invert_colors',\n    'invert_colors_off',\n    'iso',\n    'keyboard',\n    'keyboard_arrow_down',\n    'keyboard_arrow_left',\n    'keyboard_arrow_right',\n    'keyboard_arrow_up',\n    'keyboard_backspace',\n    'keyboard_capslock',\n    'keyboard_hide',\n    'keyboard_return',\n    'keyboard_tab',\n    'keyboard_voice',\n    'label',\n    'label_outline',\n    'landscape',\n    'language',\n    'laptop',\n    'laptop_chromebook',\n    'laptop_mac',\n    'laptop_windows',\n    'launch',\n    'layers',\n    'layers_clear',\n    'leak_add',\n    'leak_remove',\n    'lens',\n    'library_add',\n    'library_books',\n    'library_music',\n    'link',\n    'list',\n    'live_help',\n    'live_tv',\n    'local_activity',\n    'local_airport',\n    'local_atm',\n    'local_bar',\n    'local_cafe',\n    'local_car_wash',\n    'local_convenience_store',\n    'local_dining',\n    'local_drink',\n    'local_florist',\n    'local_gas_station',\n    'local_grocery_store',\n    'local_hospital',\n    'local_hotel',\n    'local_laundry_service',\n    'local_library',\n    'local_mall',\n    'local_movies',\n    'local_offer',\n    'local_parking',\n    'local_pharmacy',\n    'local_phone',\n    'local_pizza',\n    'local_play',\n    'local_post_office',\n    'local_printshop',\n    'local_see',\n    'local_shipping',\n    'local_taxi',\n    'location_city',\n    'location_disabled',\n    'location_off',\n    'location_on',\n    'location_searching',\n    'lock',\n    'lock_open',\n    'lock_outline',\n    'looks',\n    'looks_3',\n    'looks_4',\n    'looks_5',\n    'looks_6',\n    'looks_one',\n    'looks_two',\n    'loop',\n    'loupe',\n    'loyalty',\n    'mail',\n    'map',\n    'markunread',\n    'markunread_mailbox',\n    'memory',\n    'menu',\n    'merge_type',\n    'message',\n    'mic',\n    'mic_none',\n    'mic_off',\n    'mms',\n    'mode_comment',\n    'mode_edit',\n    'money_off',\n    'monochrome_photos',\n    'mood',\n    'mood_bad',\n    'more',\n    'more_horiz',\n    'more_vert',\n    'mouse',\n    'movie',\n    'movie_creation',\n    'music_note',\n    'my_library_add',\n    'my_library_books',\n    'my_library_music',\n    'my_location',\n    'nature',\n    'nature_people',\n    'navigate_before',\n    'navigate_next',\n    'navigation',\n    'network_cell',\n    'network_locked',\n    'network_wifi',\n    'new_releases',\n    'nfc',\n    'no_sim',\n    'not_interested',\n    'note_add',\n    'notifications',\n    'notifications_active',\n    'notifications_none',\n    'notifications_off',\n    'notifications_paused',\n    'offline_pin',\n    'ondemand_video',\n    'open_in_browser',\n    'open_in_new',\n    'open_with',\n    'pages',\n    'pageview',\n    'palette',\n    'panorama',\n    'panorama_fish_eye',\n    'panorama_horizontal',\n    'panorama_vertical',\n    'panorama_wide_angle',\n    'party_mode',\n    'pause',\n    'pause_circle_filled',\n    'pause_circle_outline',\n    'payment',\n    'people',\n    'people_outline',\n    'perm_camera_mic',\n    'perm_contact_calendar',\n    'perm_data_setting',\n    'perm_device_information',\n    'perm_identity',\n    'perm_media',\n    'perm_phone_msg',\n    'perm_scan_wifi',\n    'person',\n    'person_add',\n    'person_outline',\n    'person_pin',\n    'personal_video',\n    'phone',\n    'phone_android',\n    'phone_bluetooth_speaker',\n    'phone_forwarded',\n    'phone_in_talk',\n    'phone_iphone',\n    'phone_locked',\n    'phone_missed',\n    'phone_paused',\n    'phonelink',\n    'phonelink_erase',\n    'phonelink_lock',\n    'phonelink_off',\n    'phonelink_ring',\n    'phonelink_setup',\n    'photo',\n    'photo_album',\n    'photo_camera',\n    'photo_library',\n    'photo_size_select_actual',\n    'photo_size_select_large',\n    'photo_size_select_small',\n    'picture_as_pdf',\n    'picture_in_picture',\n    'pin_drop',\n    'place',\n    'play_arrow',\n    'play_circle_filled',\n    'play_circle_outline',\n    'play_for_work',\n    'play_shopping_bag',\n    'playlist_add',\n    'plus_one',\n    'poll',\n    'polymer',\n    'portable_wifi_off',\n    'portrait',\n    'power',\n    'power_input',\n    'power_settings_new',\n    'present_to_all',\n    'print',\n    'public',\n    'publish',\n    'query_builder',\n    'question_answer',\n    'queue',\n    'queue_music',\n    'radio',\n    'radio_button_checked',\n    'radio_button_unchecked',\n    'rate_review',\n    'receipt',\n    'recent_actors',\n    'redeem',\n    'redo',\n    'refresh',\n    'remove',\n    'remove_circle',\n    'remove_circle_outline',\n    'remove_red_eye',\n    'reorder',\n    'repeat',\n    'repeat_one',\n    'replay',\n    'replay_10',\n    'replay_30',\n    'replay_5',\n    'reply',\n    'reply_all',\n    'report',\n    'report_problem',\n    'restaurant_menu',\n    'restore',\n    'ring_volume',\n    'room',\n    'rotate_90_degrees_ccw',\n    'rotate_left',\n    'rotate_right',\n    'router',\n    'satellite',\n    'save',\n    'scanner',\n    'schedule',\n    'school',\n    'screen_lock_landscape',\n    'screen_lock_portrait',\n    'screen_lock_rotation',\n    'screen_rotation',\n    'sd_card',\n    'sd_storage',\n    'search',\n    'security',\n    'select_all',\n    'send',\n    'settings',\n    'settings_applications',\n    'settings_backup_restore',\n    'settings_bluetooth',\n    'settings_brightness',\n    'settings_cell',\n    'settings_ethernet',\n    'settings_input_antenna',\n    'settings_input_component',\n    'settings_input_composite',\n    'settings_input_hdmi',\n    'settings_input_svideo',\n    'settings_overscan',\n    'settings_phone',\n    'settings_power',\n    'settings_remote',\n    'settings_system_daydream',\n    'settings_voice',\n    'share',\n    'shop',\n    'shop_two',\n    'shopping_basket',\n    'shopping_cart',\n    'shuffle',\n    'signal_cellular_4_bar',\n    'signal_cellular_connected_no_internet_4_bar',\n    'signal_cellular_no_sim',\n    'signal_cellular_null',\n    'signal_cellular_off',\n    'signal_wifi_4_bar',\n    'signal_wifi_4_bar_lock',\n    'signal_wifi_off',\n    'sim_card',\n    'sim_card_alert',\n    'skip_next',\n    'skip_previous',\n    'slideshow',\n    'smartphone',\n    'sms',\n    'sms_failed',\n    'snooze',\n    'sort',\n    'sort_by_alpha',\n    'space_bar',\n    'speaker',\n    'speaker_group',\n    'speaker_notes',\n    'speaker_phone',\n    'spellcheck',\n    'star',\n    'star_border',\n    'star_half',\n    'stars',\n    'stay_current_landscape',\n    'stay_current_portrait',\n    'stay_primary_landscape',\n    'stay_primary_portrait',\n    'stop',\n    'storage',\n    'store',\n    'store_mall_directory',\n    'straighten',\n    'strikethrough_s',\n    'style',\n    'subject',\n    'subtitles',\n    'supervisor_account',\n    'surround_sound',\n    'swap_calls',\n    'swap_horiz',\n    'swap_vert',\n    'swap_vertical_circle',\n    'switch_camera',\n    'switch_video',\n    'sync',\n    'sync_disabled',\n    'sync_problem',\n    'system_update',\n    'system_update_alt',\n    'tab',\n    'tab_unselected',\n    'tablet',\n    'tablet_android',\n    'tablet_mac',\n    'tag_faces',\n    'tap_and_play',\n    'terrain',\n    'text_format',\n    'textsms',\n    'texture',\n    'theaters',\n    'thumb_down',\n    'thumb_up',\n    'thumbs_up_down',\n    'time_to_leave',\n    'timelapse',\n    'timer',\n    'timer_10',\n    'timer_3',\n    'timer_off',\n    'toc',\n    'today',\n    'toll',\n    'tonality',\n    'toys',\n    'track_changes',\n    'traffic',\n    'transform',\n    'translate',\n    'trending_down',\n    'trending_flat',\n    'trending_up',\n    'tune',\n    'turned_in',\n    'turned_in_not',\n    'tv',\n    'undo',\n    'unfold_less',\n    'unfold_more',\n    'usb',\n    'verified_user',\n    'vertical_align_bottom',\n    'vertical_align_center',\n    'vertical_align_top',\n    'vibration',\n    'video_library',\n    'videocam',\n    'videocam_off',\n    'view_agenda',\n    'view_array',\n    'view_carousel',\n    'view_column',\n    'view_comfy',\n    'view_compact',\n    'view_day',\n    'view_headline',\n    'view_list',\n    'view_module',\n    'view_quilt',\n    'view_stream',\n    'view_week',\n    'vignette',\n    'visibility',\n    'visibility_off',\n    'voice_chat',\n    'voicemail',\n    'volume_down',\n    'volume_mute',\n    'volume_off',\n    'volume_up',\n    'vpn_key',\n    'vpn_lock',\n    'wallpaper',\n    'warning',\n    'watch',\n    'wb_auto',\n    'wb_cloudy',\n    'wb_incandescent',\n    'wb_iridescent',\n    'wb_sunny',\n    'wc',\n    'web',\n    'whatshot',\n    'widgets',\n    'wifi',\n    'wifi_lock',\n    'wifi_tethering',\n    'work',\n    'wrap_text',\n    'youtube_searched_for',\n    'zoom_in',\n    'zoom_out',\n  ];\n\n  get icons(): string[] {\n    return this._icons;\n  }\n\n  filter(query: string): string[] {\n    return this.icons.filter((el: string) => {\n      return el.toLowerCase().indexOf(query ? query.toLowerCase() : '') > -1;\n    });\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { Router, RoutesRecognized } from '@angular/router';\n\nimport { filter } from 'rxjs/operators/filter';\nimport { pairwise } from 'rxjs/operators/pairwise';\n\n@Injectable()\nexport class RouterPathService {\nprivate static _previousRoute: string = '/';\n  constructor(private _router: Router) {\n    this._router.events.pipe(\n      filter((e: any) => e instanceof RoutesRecognized),\n      pairwise(),\n    ).subscribe((e: any[]) => {\n      RouterPathService._previousRoute = e[0].urlAfterRedirects;\n    });\n  }\n\n  /*\n  * Utility function to get the route the user previously went to\n  * good for use in a \"back button\"\n  */\n  getPreviousRoute(): string {\n    return RouterPathService._previousRoute;\n  }\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\n\nexport class TdTruncatePipe implements PipeTransform {\n  transform(text: any, length: number): string {\n    if (typeof text !== 'string') {\n      return '';\n    }\n\n    // Truncate\n    let truncated: string = text.substr(0, length);\n\n    if (text.length > length) {\n      if (truncated.lastIndexOf(' ') > 0) {\n        truncated = truncated.trim();\n      }\n\n      truncated += '…';\n    }\n\n    return truncated;\n  }\n}\n",
    "import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Pipe({\n  name: 'digits',\n})\n\nexport class TdDigitsPipe implements PipeTransform {\n\n  private _decimalPipe: DecimalPipe;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string = 'en') {\n    this._decimalPipe = new DecimalPipe(this._locale);\n  }\n\n  /* `digits` needs to be type `digits: any` or TypeScript complains */\n  transform(digits: any, precision: number = 1): string {\n    if (digits === 0) {\n      return '0';\n    } else if (isNaN(parseInt(digits, 10))) {\n      /* If not a valid number, return the value */\n      return digits;\n    } else if (digits < 1) {\n      return this._decimalPipe.transform(digits.toFixed(precision));\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];\n    let i: number = Math.floor(Math.log(digits) / Math.log(k));\n    let size: string = sizes[i];\n    return this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '');\n  }\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bytes',\n})\n\nexport class TdBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    let k: number = 1024;\n    let sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeDifference',\n})\n\nexport class TdTimeDifferencePipe implements PipeTransform {\n  transform(start: any, end: any): string {\n    let startTime: Date = new Date(start);\n    let endTime: Date;\n\n    if (end !== undefined) {\n      endTime = new Date(end);\n    } else {\n      endTime = new Date();\n    }\n\n    if (!startTime.getTime() || !endTime.getTime()) {\n      return 'Invalid Date';\n    }\n\n    let diff: number = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);\n\n    let days: number = Math.floor(diff / (60 * 60 * 24));\n    diff = diff - (days * (60 * 60 * 24));\n\n    let hours: number = Math.floor(diff / (60 * 60));\n    diff = diff - (hours * (60 * 60));\n\n    let minutes: number = Math.floor(diff / (60));\n    diff -= minutes * (60);\n\n    let seconds: number = diff;\n\n    let pad: string = '00';\n\n    let daysFormatted: string = '';\n\n    if (days > 0 && days < 2) {\n      daysFormatted = ' day - ';\n    } else if (days > 1) {\n      daysFormatted = ' days - ' ;\n    }\n\n    return (days > 0 ? days + daysFormatted : daysFormatted) +\n     pad.substring(0, pad.length - (hours + '').length) + hours + ':' +\n     pad.substring(0, pad.length - (minutes + '').length) + minutes + ':' +\n     pad.substring(0, pad.length - (seconds + '').length) + seconds;\n  }\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeAgo',\n})\nexport class TdTimeAgoPipe implements PipeTransform {\n  transform(time: any, reference: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    let ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((startTime - time.getTime()) / 1000);\n\n    if (diff < 2) {\n      return '1 second ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' seconds ago';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 minute ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' minutes ago';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 hour ago';\n    }\n    if (diff < 24) {\n      return Math.floor(diff) + ' hours ago';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return '1 day ago';\n    }\n    if (diff < 30) {\n      return Math.floor(diff) + ' days ago';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return '1 month ago';\n    }\n    if (diff < 12) {\n      return Math.floor(diff) + ' months ago';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return '1 year ago';\n    } else {\n      return Math.floor(diff) + ' years ago';\n    }\n  }\n}\n",
    "import { Directive } from '@angular/core';\nimport { HostListener, Host, Optional } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdAutoTrim]',\n})\nexport class TdAutoTrimDirective {\n\n  constructor(@Optional() @Host() private _model: NgModel) {}\n\n  /**\n   * Listens to host's (blur) event and trims value.\n   */\n  @HostListener('blur', ['$event'])\n  onBlur(event: Event): void {\n    if (this._model && this._model.value && typeof(this._model.value) === 'string') {\n      this._model.update.emit(this._model.value.trim());\n    }\n  }\n}\n",
    "import { Directive, ElementRef, Input, Output, EventEmitter, HostBinding, Renderer2, ChangeDetectorRef } from '@angular/core';\nimport { animate, AnimationBuilder, AnimationPlayer, AUTO_STYLE, style, animation } from '@angular/animations';\n\n@Directive({\n  selector: '[tdFade]',\n})\nexport class TdFadeDirective {\n\n  private _state: boolean;\n  private _defaultDisplay: string;\n  private _animationFadeInPlayer: AnimationPlayer;\n  private _animationFadeOutPlayer: AnimationPlayer;\n\n  /**\n   * duration?: number\n   * Sets duration of fade animation in milliseconds.\n   * Defaults to 150 ms.\n   */\n  @Input() duration: number = 150;\n\n  /**\n   * tdFade: boolean\n   * Fades element, FadesOut if its 'true', FadesIn if its 'false'.\n   */\n  @Input('tdFade')\n  set state(state: boolean) {\n    this._state = state;\n    if (state) {\n      if (this._animationFadeOutPlayer) {\n        this._animationFadeOutPlayer.destroy();\n        this._animationFadeOutPlayer = undefined;\n      }\n      this.hide();\n    } else {\n      if (this._animationFadeInPlayer) {\n        this._animationFadeInPlayer.destroy();\n        this._animationFadeInPlayer = undefined;\n      }\n      this.show();\n    }\n  }\n\n  /**\n   * fadeIn?: function\n   * Method to be executed when fadeIn animation ends.\n   */\n  @Output('fadeIn') onFadeIn: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * fadeOut?: function\n   * Method to be executed when fadeOut animation ends.\n   */\n  @Output('fadeOut') onFadeOut: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Binds native 'aria-expanded' attribute.\n   */\n  @HostBinding('attr.aria-expanded')\n  get ariaExpandedBinding(): boolean {\n    return !this._state;\n  }\n\n  /**\n   * Binds native 'aria-hidden' attribute.\n   */\n  @HostBinding('attr.aria-hidden')\n  get ariaHiddenBinding(): boolean {\n    return this._state;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _element: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _animationBuilder: AnimationBuilder) {\n    this._defaultDisplay = this._element.nativeElement.style.display;\n  }\n\n  /**\n   * Hides element: starts animation and adds \"display:'none'\" style at the end.\n   */\n  hide(): void {\n    this._animationFadeInPlayer = this._animationBuilder.build(animation([\n      style({\n        opacity: AUTO_STYLE,\n        display: AUTO_STYLE,\n      }),\n      animate(this.duration + 'ms ease-out', style({opacity: '0'})),\n    ])).create(this._element.nativeElement);\n    this._animationFadeInPlayer.onDone(() => {\n      this._onFadeInDone();\n    });\n    this._animationFadeInPlayer.play();\n  }\n\n  /**\n   * Shows element: sets \"display:[default]\" so animation is shown.\n   */\n  show(): void {\n    this._renderer.setStyle(this._element.nativeElement, 'display', this._defaultDisplay);\n    this._changeDetectorRef.markForCheck();\n    this._animationFadeOutPlayer = this._animationBuilder.build(animation([\n      style({\n        opacity: '0',\n        display: 'none',\n      }),\n      animate(this.duration + 'ms ease-in', style({opacity: AUTO_STYLE})),\n    ])).create(this._element.nativeElement);\n    this._animationFadeOutPlayer.onDone(() => {\n      this._onFadeOutDone();\n    });\n    this._animationFadeOutPlayer.play();\n  }\n\n  private _onFadeInDone(): void {\n    if (this._animationFadeInPlayer) {\n      this._animationFadeInPlayer.destroy();\n      this._animationFadeInPlayer = undefined;\n      this._renderer.setStyle(this._element.nativeElement, 'display', 'none');\n      this._changeDetectorRef.markForCheck();\n      this.onFadeIn.emit();\n    }\n  }\n\n  private _onFadeOutDone(): void {\n    if (this._animationFadeOutPlayer) {\n      this._animationFadeOutPlayer.destroy();\n      this._animationFadeOutPlayer = undefined;\n      this._changeDetectorRef.markForCheck();\n      this.onFadeOut.emit();\n    }\n  }\n}\n",
    "import { Directive, ElementRef, Input, HostBinding, Renderer2, ChangeDetectorRef } from '@angular/core';\nimport { animate, AnimationBuilder, AnimationPlayer, AUTO_STYLE, style, animation } from '@angular/animations';\n\n@Directive({\n  selector: '[tdToggle]',\n})\nexport class TdToggleDirective {\n\n  private _state: boolean;\n  private _defaultOverflow: string;\n  private _defaultDisplay: string;\n  private _animationShowPlayer: AnimationPlayer;\n  private _animationHidePlayer: AnimationPlayer;\n\n  /**\n   * duration?: number\n   * Sets duration of toggle animation in milliseconds.\n   * Defaults to 150 ms.\n   */\n  @Input() duration: number = 150;\n\n  /**\n   * tdToggle: boolean\n   * Toggles element, hides if its 'true', shows if its 'false'.\n   */\n  @Input('tdToggle')\n  set state(state: boolean) {\n    this._state = state;\n    if (state) {\n      if (this._animationShowPlayer) {\n        this._animationShowPlayer.destroy();\n        this._animationShowPlayer = undefined;\n      }\n      this.hide();\n    } else {\n      if (this._animationHidePlayer) {\n        this._animationHidePlayer.destroy();\n        this._animationHidePlayer = undefined;\n      }\n      this.show();\n    }\n  }\n\n  /**\n   * Binds native 'aria-expanded' attribute.\n   */\n  @HostBinding('attr.aria-expanded')\n  get ariaExpandedBinding(): boolean {\n    return !this._state;\n  }\n\n  /**\n   * Binds native 'aria-hidden' attribute.\n   */\n  @HostBinding('attr.aria-hidden')\n  get ariaHiddenBinding(): boolean {\n    return this._state;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _element: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _animationBuilder: AnimationBuilder) {\n    this._defaultDisplay = this._element.nativeElement.style.display;\n    this._defaultOverflow = this._element.nativeElement.style.overflow;\n  }\n\n  /**\n   * Hides element: sets \"display:[default]\" so animation is shown,\n   * starts animation and adds \"display:'none'\" style at the end.\n   */\n  hide(): void {\n    this._animationHidePlayer = this._animationBuilder.build(animation([\n      style({\n        height: AUTO_STYLE,\n        display: AUTO_STYLE,\n      }),\n      animate(this.duration + 'ms ease-in', style({height: '0'})),\n    ])).create(this._element.nativeElement);\n    this._renderer.setStyle(this._element.nativeElement, 'overflow', 'hidden');\n    this._changeDetectorRef.markForCheck();\n    this._animationHidePlayer.onDone(() => {\n      this._onHideDone();\n    });\n    this._animationHidePlayer.play();\n  }\n\n  /**\n   * Shows element: sets \"display:[default]\" so animation is shown,\n   * starts animation and adds \"overflow:[default]\" style again at the end.\n   */\n  show(): void {\n    this._renderer.setStyle(this._element.nativeElement, 'display', this._defaultDisplay);\n    this._changeDetectorRef.markForCheck();\n    this._animationShowPlayer = this._animationBuilder.build(animation([\n      style({\n        height: '0',\n        display: 'none',\n      }),\n      animate(this.duration + 'ms ease-out', style({height: AUTO_STYLE})),\n    ])).create(this._element.nativeElement);\n    this._renderer.setStyle(this._element.nativeElement, 'overflow', 'hidden');\n    this._animationShowPlayer.onDone(() => {\n      this._onShowDone();\n    });\n    this._animationShowPlayer.play();\n  }\n\n  private _onHideDone(): void {\n    if (this._animationHidePlayer) {\n      this._animationHidePlayer.destroy();\n      this._animationHidePlayer = undefined;\n      this._renderer.setStyle(this._element.nativeElement, 'overflow', this._defaultOverflow);\n      this._renderer.setStyle(this._element.nativeElement, 'display', 'none');\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  private _onShowDone(): void {\n    if (this._animationShowPlayer) {\n      this._animationShowPlayer.destroy();\n      this._animationShowPlayer = undefined;\n      this._renderer.setStyle(this._element.nativeElement, 'overflow', this._defaultOverflow);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdNotificationCountComponent } from './notification-count.component';\n\nconst TD_NOTIFICATIONS: Type<any>[] = [\n  TdNotificationCountComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_NOTIFICATIONS,\n  ],\n  exports: [\n    TD_NOTIFICATIONS,\n  ],\n})\nexport class CovalentNotificationsModule {\n\n}\n",
    "import { Component, Input, HostBinding, ChangeDetectionStrategy,\n         ViewChild, ElementRef, AfterContentInit } from '@angular/core';\n\nexport enum TdNotificationCountPositionY {\n  Top = 'top',\n  Bottom = 'bottom',\n  Center = 'center',\n}\n\nexport enum TdNotificationCountPositionX {\n  Before = 'before',\n  After = 'after',\n  Center = 'center',\n}\n\n@Component({\n  selector: 'td-notification-count',\n  styles: [`:host {\n  position: relative;\n  display: block;\n  text-align: center;\n  min-width: 40px;\n  height: 40px; }\n  :host.td-notification-hidden {\n    min-width: 0; }\n\n.td-notification-count {\n  line-height: 21px;\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  font-size: 10px;\n  font-weight: 600;\n  border-radius: 50%;\n  z-index: 1; }\n  .td-notification-count.td-notification-center-x {\n    margin-left: auto;\n    margin-right: auto;\n    left: 0;\n    right: 0; }\n  .td-notification-count.td-notification-center-y {\n    margin-top: auto;\n    margin-bottom: auto;\n    top: 0;\n    bottom: 0; }\n  .td-notification-count.td-notification-top {\n    top: 0; }\n  .td-notification-count.td-notification-bottom {\n    bottom: 0; }\n  .td-notification-count.td-notification-before {\n    left: 0; }\n  .td-notification-count.td-notification-after {\n    right: 0; }\n  .td-notification-count.td-notification-no-count {\n    width: 8px;\n    height: 8px; }\n    .td-notification-count.td-notification-no-count.td-notification-top {\n      top: 8px; }\n    .td-notification-count.td-notification-no-count.td-notification-bottom {\n      bottom: 8px; }\n    .td-notification-count.td-notification-no-count.td-notification-before {\n      left: 8px; }\n    .td-notification-count.td-notification-no-count.td-notification-after {\n      right: 8px; }\n  ::ng-deep [dir='rtl'] .td-notification-count.td-notification-before {\n    right: 0;\n    left: auto; }\n  ::ng-deep [dir='rtl'] .td-notification-count.td-notification-after {\n    left: 0;\n    right: auto; }\n  ::ng-deep [dir='rtl'] .td-notification-count.td-notification-no-count.td-notification-before {\n    right: 8px;\n    left: auto; }\n  ::ng-deep [dir='rtl'] .td-notification-count.td-notification-no-count.td-notification-after {\n    left: 8px;\n    right: auto; }\n\n.td-notification-content, .td-notification-content ::ng-deep > * {\n  line-height: 40px; }\n`],\n  template: `<div #content class=\"td-notification-content\">\n  <ng-content></ng-content>\n</div>\n<div *ngIf=\"show\"\n     class=\"td-notification-count mat-{{color}}\"\n     [class.td-notification-top]=\"positionY === 'top'\"\n     [class.td-notification-bottom]=\"positionY === 'bottom'\"\n     [class.td-notification-before]=\"positionX === 'before'\"\n     [class.td-notification-after]=\"positionX === 'after'\"\n     [class.td-notification-center-y]=\"positionY === 'center'\"\n     [class.td-notification-center-x]=\"positionX === 'center'\"\n     [class.td-notification-no-count]=\"noCount\">\n  {{noCount ? '' : notificationsDisplay}}\n</div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdNotificationCountComponent implements AfterContentInit {\n\n  private _notifications: number | boolean = 0;\n  private _positionY: TdNotificationCountPositionY;\n  private _positionX: TdNotificationCountPositionX;\n\n  /**\n   * Div content wrapper of `ng-content`.\n   */\n  @ViewChild('content') content: ElementRef;\n\n  /**\n   * color?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the notification tip. Defaults to \"warn\"\n   */\n  @Input() color: 'primary' | 'accent' | 'warn' = 'warn';\n\n  /**\n   * positionX?: TdNotificationCountPositionX or \"before\" | \"after\" | \"center\"\n   * Sets the X position of the notification tip.\n   * Defaults to \"after\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionX(positionX: TdNotificationCountPositionX) {\n    this._positionX = positionX;\n  }\n  get positionX(): TdNotificationCountPositionX {\n    return this._positionX;\n  }\n\n  /**\n   * positionY?: TdNotificationCountPositionY or \"top\" | \"bottom\" | \"center\"\n   * Sets the Y position of the notification tip.\n   * Defaults to \"top\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionY(positionY: TdNotificationCountPositionY) {\n    this._positionY = positionY;\n  }\n  get positionY(): TdNotificationCountPositionY {\n    return this._positionY;\n  }\n\n  /**\n   * notifications?: number | boolean\n   * Number for the notification count. Shows component only if the input is a positive number or 'true'\n   */\n  @Input()\n  set notifications(notifications: number | boolean) {\n    this._notifications = notifications;\n  }\n\n  @HostBinding('class.td-notification-hidden')\n  get hideHost(): boolean {\n    return !this.show && !this._hasContent();\n  }\n\n  /**\n   * Sets the component in its 'noCount' state if [notifications] is a boolean 'true'.\n   * Makes the notification tip show without a count.\n   */\n  get noCount(): string | boolean {\n    return this._notifications === true;\n  }\n\n  /**\n   * Notification display string when a count is available.\n   * Anything over 99 gets set as 99+\n   */\n  get notificationsDisplay(): string {\n    if (this._notifications > 99) {\n      return '99+';\n    }\n    return this._notifications.toString();\n  }\n\n  /**\n   * Shows notification tip only when [notifications] is true or a positive integer.\n   */\n  get show(): boolean {\n    return this._notifications === true || (!isNaN(<any>this._notifications) && this._notifications > 0);\n  }\n\n  /**\n   * Check if [positionX] and [positionY] have been set as inputs, else use defaults depending on component content.\n   */\n  ngAfterContentInit(): void {\n    if (!this._positionX) {\n      this.positionX = this._hasContent() ? TdNotificationCountPositionX.After : TdNotificationCountPositionX.Center;\n    }\n    if (!this._positionY) {\n      this.positionY = this._hasContent() ? TdNotificationCountPositionY.Top : TdNotificationCountPositionY.Center;\n    }\n  }\n\n  /**\n   * Method to check if element has any kind of content (elements or text)\n   */\n  private _hasContent(): boolean {\n    if (this.content) {\n      let contentElement: HTMLElement = this.content.nativeElement;\n      return contentElement && (contentElement.children.length > 0 || !!contentElement.textContent.trim());\n    }\n    return false;\n  }\n\n}\n",
    "import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\nimport { TdVirtualScrollContainerComponent } from './virtual-scroll-container.component';\n\nconst TD_VIRTUAL_SCROLL: Type<any>[] = [\n  TdVirtualScrollRowDirective,\n  TdVirtualScrollContainerComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_VIRTUAL_SCROLL,\n  ],\n  exports: [\n    TD_VIRTUAL_SCROLL,\n  ],\n})\nexport class CovalentVirtualScrollModule {\n\n}\n",
    "import { Component, Directive, Input, EventEmitter, ContentChild, AfterViewInit, ViewChild,\n         ChangeDetectionStrategy, ChangeDetectorRef, QueryList, ViewChildren, ElementRef, HostListener,\n         Renderer2, AfterViewChecked, OnDestroy, TrackByFunction } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\n\nconst TD_VIRTUAL_OFFSET: number = 2;\n\n@Component({\n  selector: 'td-virtual-scroll-container',\n  styles: [`:host {\n  display: block;\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n  position: relative; }\n`],\n  template: `<div [style.height.px]=\"totalHeight\"></div>\n<div [style.transform]=\"offsetTransform\"\n      [style.position]=\"'absolute'\"\n      [style.width.%]=\"100\">\n  <ng-template let-row\n                let-index=\"index\"\n                ngFor\n                [ngForOf]=\"virtualData\"\n                [ngForTrackBy]=\"trackBy\">\n    <div #rowElement\n         [style.width.%]=\"100\">\n      <ng-template *ngIf=\"_rowTemplate\"\n                  [ngTemplateOutlet]=\"_rowTemplate.templateRef\"\n                  [ngTemplateOutletContext]=\"{row: row,\n                                      index: (fromRow + index),\n                                      first: (fromRow + index) === 0,\n                                      last: (fromRow + index) === (data.length - 1),\n                                      odd: ((fromRow + index + 1) % 2) === 1,\n                                      even: ((fromRow + index + 1) % 2) === 0}\">\n      </ng-template>\n    </div>\n  </ng-template>\n</div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdVirtualScrollContainerComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\n\n  private _rowChangeSubs: Subscription;\n  private _initialized: boolean = false;\n\n  private _totalHeight: number = 0;\n  private _hostHeight: number = 0;\n  private _scrollVerticalOffset: number = 0;\n  private _offsetTransform: SafeStyle;\n\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  private _data: any[];\n  private _virtualData: any[];\n\n  /**\n   * data: any[]\n   * List of items to virtually iterate on.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    if (this._initialized) {\n      this._calculateVirtualRows();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  @ViewChildren('rowElement') _rows: QueryList<ElementRef>;\n\n  @ContentChild(TdVirtualScrollRowDirective) _rowTemplate: TdVirtualScrollRowDirective;\n\n  get rowHeight(): number {\n    if (this._rows && this._rows.toArray()[0]) {\n      return this._rows.toArray()[0].nativeElement.getBoundingClientRect().height;\n    }\n    return 0;\n  }\n\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _domSanitizer: DomSanitizer,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this._rowChangeSubs = this._rows.changes.subscribe(() => {\n      this._calculateVirtualRows();\n    });\n    this._initialized = true;\n    this._calculateVirtualRows();\n  }\n\n  ngAfterViewChecked(): void {\n    let newHostHeight: number = this._elementRef.nativeElement.getBoundingClientRect().height;\n    if (this._hostHeight !== newHostHeight) {\n      this._hostHeight = newHostHeight;\n      if (this._initialized) {\n        this._calculateVirtualRows();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._rowChangeSubs) {\n      this._rowChangeSubs.unsubscribe();\n    }\n  }\n\n  /**\n   * trackBy?: TrackByFunction\n   * This accepts the same trackBy function [ngFor] does.\n   * https://angular.io/api/core/TrackByFunction\n   */\n  @Input('trackBy') trackBy: TrackByFunction<any> =  (index: number, item: any) => {\n    return item;\n  }\n\n  @HostListener('scroll', ['$event'])\n  handleScroll(event: Event): void {\n    let element: HTMLElement = (<HTMLElement>event.target);\n    if (element) {\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._scrollVerticalOffset = verticalScroll;\n        if (this._initialized) {\n          this._calculateVirtualRows();\n        }\n      }\n    }\n  }\n\n  /**\n   * Method to refresh and recalculate the virtual rows\n   * e.g. after changing the [data] content\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Method to scroll to a specific row of the list.\n   */\n  scrollTo(row: number): void {\n    this._elementRef.nativeElement.scrollTop = row * this.rowHeight;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the start of the list.\n   */\n  scrollToStart(): void {\n    this.scrollTo(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the end of the list.\n   */\n  scrollToEnd(): void {\n    this.scrollTo(this.totalHeight / this.rowHeight);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _calculateVirtualRows(): void {\n    if (this._data) {\n      this._totalHeight = this._data.length * this.rowHeight;\n      let fromRow: number = Math.floor((this._scrollVerticalOffset / this.rowHeight)) - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n      let range: number = Math.floor((this._hostHeight / this.rowHeight)) + (TD_VIRTUAL_OFFSET * 2);\n      let toRow: number = range + this.fromRow;\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    if (this._scrollVerticalOffset > (TD_VIRTUAL_OFFSET * this.rowHeight)) {\n      offset = this.fromRow * this.rowHeight;\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle('translateY(' + (offset - this.totalHeight) + 'px)');\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n}\n",
    "import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({selector: '[tdVirtualScrollRow]'})\nexport class TdVirtualScrollRowDirective extends TemplatePortalDirective {\n\n  constructor(templateRef: TemplateRef<any>,\n              viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n  \n}\n",
    "import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdPagingBarComponent } from './paging-bar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TdPagingBarComponent,\n  ],\n  exports: [\n    TdPagingBarComponent,\n  ],\n})\nexport class CovalentPagingModule {\n\n}\n",
    "import { Component, Input, Output, EventEmitter, OnInit, Optional, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Dir } from '@angular/cdk/bidi';\n\nexport interface IPageChangeEvent {\n  page: number;\n  maxPage: number;\n  pageSize: number;\n  total: number;\n  fromRow: number;\n  toRow: number;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-paging-bar',\n  template: `<div class=\"td-paging-bar\" (change)=\"$event.stopPropagation()\" >\n  <ng-content></ng-content>\n  <div class=\"td-paging-bar-navigation\">\n    <button mat-icon-button class=\"td-paging-bar-first-page\" type=\"button\" *ngIf=\"firstLast\" [disabled]=\"isMinPage()\" (click)=\"firstPage()\">\n      <mat-icon>{{ isRTL ? 'skip_next' : 'skip_previous' }}</mat-icon>\n    </button>\n    <button mat-icon-button class=\"td-paging-bar-prev-page\" type=\"button\" [disabled]=\"isMinPage()\" (click)=\"prevPage()\">\n      <mat-icon>{{ isRTL ? 'navigate_next' : 'navigate_before' }}</mat-icon>\n    </button>\n    <ng-template *ngIf=\"pageLinkCount > 0\" let-link let-index=\"index\" ngFor [ngForOf]=\"pageLinks\">\n      <button class=\"td-paging-bar-link-page\" mat-icon-button type=\"button\" [color]=\"page === link ? 'accent' : ''\" (click)=\"navigateToPage(link)\">{{link}}</button>\n    </ng-template>\n    <button mat-icon-button class=\"td-paging-bar-next-page\" type=\"button\" [disabled]=\"isMaxPage()\" (click)=\"nextPage()\">\n      <mat-icon>{{ isRTL ? 'navigate_before' : 'navigate_next' }}</mat-icon>\n    </button>\n    <button mat-icon-button class=\"td-paging-bar-last-page\" type=\"button\" *ngIf=\"firstLast\" [disabled]=\"isMaxPage()\" (click)=\"lastPage()\">\n      <mat-icon>{{ isRTL ? 'skip_previous' : 'skip_next' }}</mat-icon>\n    </button>\n  </div>\n</div>`,\n  styles: [`:host {\n  display: block; }\n  :host .td-paging-bar {\n    height: 48px;\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -ms-flex-line-pack: center;\n        align-content: center;\n    max-width: 100%;\n    -webkit-box-pack: end;\n        -ms-flex-pack: end;\n            justify-content: flex-end; }\n    :host .td-paging-bar ::ng-deep > * {\n      margin: 0 10px; }\n    :host .td-paging-bar [mat-icon-button] {\n      font-size: 12px;\n      font-weight: normal; }\n`],\n})\nexport class TdPagingBarComponent implements OnInit {\n\n  private _pageSize: number = 50;\n  private _total: number = 0;\n  private _page: number = 1;\n  private _fromRow: number = 1;\n  private _toRow: number = 1;\n  private _initialized: boolean = false;\n  private _pageLinks: number[] = [];\n  private _pageLinkCount: number = 0;\n  // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n  private _hitEnd: boolean = false;\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n  private _hitStart: boolean = false;\n\n  /**\n   * firstLast?: boolean\n   * Shows or hides the first and last page buttons of the paging bar. Defaults to 'false'\n   */\n  @Input('firstLast') firstLast: boolean = true;\n\n  /**\n   * initialPage?: number\n   * Sets starting page for the paging bar. Defaults to '1'\n   */\n  @Input('initialPage') initialPage: number = 1;\n\n  /**\n   * pageLinkCount?: number\n   * Amount of page navigation links for the paging bar. Defaults to '0'\n   */\n  @Input('pageLinkCount')\n  set pageLinkCount(pageLinkCount: number) {\n    this._pageLinkCount = coerceNumberProperty(pageLinkCount);\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageLinkCount(): number {\n    return this._pageLinkCount;\n  }\n\n  /**\n   * pageSize?: number\n   * Selected page size for the pagination. Defaults 50.\n   */\n  @Input('pageSize')\n  set pageSize(pageSize: number) {\n    this._pageSize = coerceNumberProperty(pageSize);\n    this._page = 1;\n    if (this._initialized) {\n      this._handleOnChange();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  /**\n   * total: number\n   * Total rows for the pagination.\n   */\n  @Input('total')\n  set total(total: number) {\n    this._total = coerceNumberProperty(total);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get total(): number {\n    return this._total;\n  }\n\n  /**\n   * pageLinks: number[]\n   * Returns the pageLinks in an array\n   */\n  get pageLinks(): number[] {\n    return this._pageLinks;\n  }\n\n  /**\n   * range: string\n   * Returns the range of the rows.\n   */\n  get range(): string {\n    return `${!this._toRow ? 0 : this._fromRow}-${this._toRow}`;\n  }\n\n  /**\n   * page: number\n   * Returns the current page.\n   */\n  get page(): number {\n    return this._page;\n  }\n\n  /**\n   * page: number\n   * Returns the max page for the current pageSize and total.\n   */\n  get maxPage(): number {\n    return Math.ceil(this._total / this._pageSize);\n  }\n\n  /**\n   * change?: function\n   * Method to be executed when page size changes or any button is clicked in the paging bar.\n   * Emits an [IPageChangeEvent] implemented object.\n   */\n  @Output('change') onChange: EventEmitter<IPageChangeEvent> = new EventEmitter<IPageChangeEvent>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._page = coerceNumberProperty(this.initialPage);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._initialized = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * navigateToPage?: function\n   * Navigates to a specific valid page. Returns 'true' if page is valid, else 'false'.\n   */\n  navigateToPage(page: number): boolean {\n    if (page === 1 || (page >= 1 && page <= this.maxPage)) {\n      this._page = coerceNumberProperty(Math.floor(page));\n      this._handleOnChange();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * firstPage?: function\n   * Navigates to the first page. Returns 'true' if page is valid, else 'false'.\n   */\n  firstPage(): boolean {\n    return this.navigateToPage(1);\n  }\n\n  /**\n   * prevPage?: function\n   * Navigates to the previous page. Returns 'true' if page is valid, else 'false'.\n   */\n  prevPage(): boolean {\n    return this.navigateToPage(this._page - 1);\n  }\n\n  /**\n   * nextPage?: function\n   * Navigates to the next page. Returns 'true' if page is valid, else 'false'.\n   */\n  nextPage(): boolean {\n    return this.navigateToPage(this._page + 1);\n  }\n\n  /**\n   * lastPage?: function\n   * Navigates to the last page. Returns 'true' if page is valid, else 'false'.\n   */\n  lastPage(): boolean {\n    return this.navigateToPage(this.maxPage);\n  }\n\n  isMinPage(): boolean {\n    return this._page <= 1;\n  }\n\n  isMaxPage(): boolean {\n    return this._page >= this.maxPage;\n  }\n\n  private _calculateRows(): void {\n    let top: number = (this._pageSize * this._page);\n    this._fromRow = (this._pageSize * (this._page - 1)) + 1;\n    this._toRow = this._total > top ? top : this._total;\n  }\n\n  /**\n   * _calculatePageLinks?: function\n   * Calculates the page links that should be shown to the user based on the current state of the paginator\n   */\n  private _calculatePageLinks(): void {\n    // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n    if (this.isMaxPage()) {\n      this._hitEnd = true;\n      this._hitStart = false;\n    }\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n    if (this.isMinPage()) {\n      this._hitEnd = false;\n      this._hitStart = true;\n    }\n    // If the pageLinkCount goes above max possible pages based on perpage setting then reset it to maxPage\n    let actualPageLinkCount: number = this.pageLinkCount;\n    if (this.pageLinkCount > this.maxPage) {\n      actualPageLinkCount = this.maxPage;\n    }\n    // reset the pageLinks array\n    this._pageLinks = [];\n    // fill in the array with the pageLinks based on the current selected page\n    let middlePageLinks: number = Math.floor(actualPageLinkCount / 2);\n    for (let x: number = 0; x < actualPageLinkCount; x++) {\n      // don't go past the maxPage in the pageLinks\n      // have to handle even and odd pageLinkCounts differently so can still lead to the next numbers\n      if ((actualPageLinkCount % 2 === 0 && (this.page + middlePageLinks > this.maxPage)) ||\n          (actualPageLinkCount % 2 !== 0 && (this.page + middlePageLinks >= this.maxPage))) {\n        this._pageLinks[x] = this.maxPage - (actualPageLinkCount - (x + 1));\n      // if the selected page is after the middle then set that page as middle and get the correct balance on left and right\n      // special handling when there are only 2 pageLinks to just drop to next if block so can lead to next numbers when moving to right\n      // when moving to the left then go into this block\n      } else if ((actualPageLinkCount > 2 || actualPageLinkCount <= 2 && this._hitEnd) && (this.page - middlePageLinks) > 0) {\n        this._pageLinks[x] = (this.page - middlePageLinks) + x;\n      // if the selected page is before the middle then set the pages based on the x index leading up to and after selected page\n      } else if ((this.page - middlePageLinks) <= 0) {\n        this._pageLinks[x] = x + 1;\n      // other wise just set the array in order starting from the selected page\n      } else {\n        this._pageLinks[x] = this.page + x;\n      }\n    }\n  }\n\n  private _handleOnChange(): void {\n    this._calculateRows();\n    this._calculatePageLinks();\n    let event: IPageChangeEvent = {\n      page: this._page,\n      maxPage: this.maxPage,\n      pageSize: this._pageSize,\n      total: this._total,\n      fromRow: this._fromRow,\n      toRow: this._toRow,\n    };\n    this._changeDetectorRef.markForCheck();\n    this.onChange.emit(event);\n  }\n\n}\n"
  ],
  "names": [
    "MatIconModule",
    "CommonModule",
    "NgModule",
    "Input",
    "ViewChild",
    "ElementRef",
    "TdCollapseAnimation",
    "query",
    "Component",
    "mixinDisableRipple",
    "mixinDisabled",
    "Output",
    "ViewContainerRef",
    "TemplatePortal",
    "EventEmitter",
    "TemplateRef",
    "Directive",
    "TemplatePortalDirective",
    "transition",
    "animate",
    "AUTO_STYLE",
    "state",
    "style",
    "trigger",
    "ChangeDetectionStrategy",
    "MatInput",
    "ChangeDetectorRef",
    "Dir",
    "Optional",
    "mixinControlValueAccessor",
    "MatDividerModule",
    "Renderer2",
    "NgZone",
    "BehaviorSubject$1",
    "MatProgressSpinnerModule",
    "MatProgressBarModule",
    "Injectable",
    "DomSanitizer",
    "Inject",
    "forwardRef",
    "Router",
    "HostListener",
    "MatSidenav",
    "PortalModule",
    "MatButtonModule",
    "NG_VALUE_ACCESSOR",
    "coerceBooleanProperty",
    "MatRippleModule",
    "SkipSelf",
    "MatDialog",
    "MatDialogConfig",
    "HostBinding",
    "ViewChildren",
    "DOWN_ARROW",
    "UP_ARROW",
    "ENTER",
    "Subject",
    "Subject$1",
    "merge",
    "toPromise",
    "LEFT_ARROW",
    "DELETE",
    "RIGHT_ARROW",
    "BACKSPACE",
    "toPromise$1",
    "timer$1",
    "debounceTime$1",
    "ESCAPE",
    "TAB",
    "debounceTime",
    "FormControl",
    "Validators",
    "Pipe",
    "LOCALE_ID",
    "DecimalPipe",
    "animation",
    "coerceNumberProperty"
  ],
  "mappings": "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"
}
