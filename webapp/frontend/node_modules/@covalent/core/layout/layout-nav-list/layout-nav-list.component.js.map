{"version":3,"file":"layout-nav-list.component.js","sourceRoot":"","sources":["../../../../../src/platform/core/layout/layout-nav-list/layout-nav-list.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACtE,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AAEzC,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AASvD;IAuFE,kCAAgC,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QA9D/C;;;;;WAKG;QACa,UAAK,GAAW,SAAS,CAAC;QAE1C;;;;;;;;WAQG;QACY,SAAI,GAA6B,MAAM,CAAC;QAEvD;;;;;;;;WAQG;QACc,WAAM,GAAY,IAAI,CAAC;QAExC;;;;;;;WAOG;QACoB,iBAAY,GAAW,OAAO,CAAC;IAwBJ,CAAC;IAXnD,sBAAI,kDAAY;QAJhB;;;WAGG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC;QAC9B,CAAC;;;OAAA;IAKD,sBAAI,mDAAa;QAHjB;;WAEG;aACH;YACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC;QAClD,CAAC;;;OAAA;IAID,wDAAqB,GAArB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IAED;;OAEG;IACI,yCAAM,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAED;;OAEG;IACI,uCAAI,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED;;OAEG;IACI,wCAAK,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAhHsB;QAAtB,SAAS,CAAC,UAAU,CAAC;0CAAU,UAAU;6DAAC;IAOpB;QAAtB,KAAK,CAAC,cAAc,CAAC;;kEAAsB;IAM7B;QAAd,KAAK,CAAC,MAAM,CAAC;;0DAAc;IAQb;QAAd,KAAK,CAAC,MAAM,CAAC;;0DAAc;IAQZ;QAAf,KAAK,CAAC,OAAO,CAAC;;2DAA2B;IAW3B;QAAd,KAAK,CAAC,MAAM,CAAC;;0DAAyC;IAWtC;QAAhB,KAAK,CAAC,QAAQ,CAAC;;4DAAwB;IAUjB;QAAtB,KAAK,CAAC,cAAc,CAAC;;kEAAgC;IAO5B;QAAzB,KAAK,CAAC,iBAAiB,CAAC;;qEAAyB;IAtEvC,wBAAwB;QALpC,SAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE,CAAC,kCAAkC,CAAE;YAChD,WAAW,EAAE,kCAAkC;SAChD,CAAC;QAwFa,mBAAA,QAAQ,EAAE,CAAA;iDAAkB,MAAM;OAvFpC,wBAAwB,CAoHpC;IAAD,+BAAC;CAAA,AApHD,IAoHC;SApHY,wBAAwB","sourcesContent":["import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss' ],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '350px';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<void> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<void> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<void> {\n    return this.sidenav.close();\n  }\n\n}\n"]}