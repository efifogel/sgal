{"version":3,"file":"steps.component.js","sourceRoot":"","sources":["../../../../src/platform/core/steps/steps.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output } from '@angular/core';\nimport { OnDestroy, AfterContentInit } from '@angular/core';\nimport { EventEmitter, ContentChildren, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { TdStepComponent } from './step.component';\n\nexport interface IStepChangeEvent {\n  newStep: TdStepComponent;\n  prevStep: TdStepComponent;\n}\n\nexport enum StepMode {\n  Vertical = <any>'vertical',\n  Horizontal = <any>'horizontal',\n}\n\n@Component({\n  selector: 'td-steps',\n  styleUrls: ['./steps.component.scss' ],\n  templateUrl: './steps.component.html',\n})\nexport class TdStepsComponent implements OnDestroy, AfterContentInit {\n\n  private _subcriptions: Subscription[];\n  private _mode: StepMode = StepMode.Vertical;\n  private _steps: QueryList<TdStepComponent>;\n\n  @ContentChildren(TdStepComponent)\n  set stepsContent(steps: QueryList<TdStepComponent>) {\n    if (steps) {\n      this._steps = steps;\n      this._registerSteps();\n    }\n  }\n\n  get steps(): TdStepComponent[] {\n    return this._steps.toArray();\n  }\n  prevStep: TdStepComponent;\n\n  /**\n   * mode?: StepMode or [\"vertical\" | \"horizontal\"]\n   * Defines if the mode of the [TdStepsComponent].  Defaults to [StepMode.Vertical | \"vertical\"]\n   */\n  @Input('mode')\n  set mode(mode: StepMode) {\n    switch (mode) {\n      case StepMode.Horizontal:\n        this._mode = StepMode.Horizontal;\n        break;\n      default:\n        this._mode = StepMode.Vertical;\n    }\n  }\n  get mode(): StepMode {\n    return this._mode;\n  }\n\n  /**\n   * stepChange?: function\n   * Method to be executed when [onStepChange] event is emitted.\n   * Emits an [IStepChangeEvent] implemented object.\n   */\n  @Output('stepChange') onStepChange: EventEmitter<IStepChangeEvent> = new EventEmitter<IStepChangeEvent>();\n\n  /**\n   * Executed after content is initialized, loops through any [TdStepComponent] children elements,\n   * assigns them a number and subscribes as an observer to their [onActivated] event.\n   */\n  ngAfterContentInit(): void {\n    this._registerSteps();\n  }\n\n  /**\n   * Unsubscribes from [TdStepComponent] children elements when component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._deregisterSteps();\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Horizontal | 'horizontal'], else 'false'.\n   */\n  isHorizontal(): boolean {\n    return this._mode === StepMode.Horizontal;\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Vertical | 'vertical'], else 'false'.\n   */\n  isVertical(): boolean {\n    return this._mode === StepMode.Vertical;\n  }\n\n  areStepsActive(): boolean {\n    return this._steps.filter((step: TdStepComponent) => {\n      return step.active;\n    }).length > 0;\n  }\n\n  /**\n   * Wraps previous and new [TdStepComponent] numbers in an object that implements [IStepChangeEvent]\n   * and emits [onStepChange] event.\n   */\n  private _onStepSelection(step: TdStepComponent): void {\n    if (this.prevStep !== step) {\n      let prevStep: TdStepComponent = this.prevStep;\n      this.prevStep = step;\n      let event: IStepChangeEvent = {\n        newStep: step,\n        prevStep: prevStep,\n      };\n      this._deactivateAllBut(step);\n      this.onStepChange.emit(event);\n    }\n  }\n\n  /**\n   * Loops through [TdStepComponent] children elements and deactivates them ignoring the one passed as an argument.\n   */\n  private _deactivateAllBut(activeStep: TdStepComponent): void {\n    this._steps.filter((step: TdStepComponent) => step !== activeStep)\n    .forEach((step: TdStepComponent) => {\n      step.active = false;\n    });\n  }\n\n  private _registerSteps(): void {\n    this._subcriptions = [];\n    this._steps.toArray().forEach((step: TdStepComponent) => {\n      let subscription: Subscription = step.onActivated.asObservable().subscribe(() => {\n        this._onStepSelection(step);\n      });\n      this._subcriptions.push(subscription);\n    });\n  }\n\n  private _deregisterSteps(): void {\n    if (this._subcriptions) {\n      this._subcriptions.forEach((subs: Subscription) => {\n        subs.unsubscribe();\n      });\n      this._subcriptions = undefined;\n    }\n  }\n}\n"]}