#VRML V2.0 utf8
DEF CONFIG Configuration {}
DEF SIM Simulation {}

ColorBackground { color 0.5 0.5 0.5 1 }

Viewpoint {
  type "SIMPLE"
  radiusScale 0.74
  fieldOfView 0.5
  positionTranslation 0.4 0 0
}

DEF SWITCH_KEY SingleKeySensor {
  boolean FALSE
  key "H"
  numberOfStates 2
}

DEF EXAMINE_NAV NavigationInfo { type [ "EXAMINE" "ANY" ] }
DEF DRAW_DUAL_MINK_KEY SingleKeySensor { key "c" }

DEF ROBOT_NAVIGATION NavigationInfo {
  type [ "TRANSFORM" ]
  translation 3 0 0
  rotation 1 -1 0 0.5
}

DEF DRAW_DUAL_ROBOT_KEY SingleKeySensor { key "d" }
DEF FLATTEN_ROBOT_KEY SingleKeySensor { key "f" }

DEF ROBOT_TRANSFORMER CoordinateTransformer {
  rotation 1 -1 0 0.5
  translation 3 0 0
  coord DEF ROBOT_COORD Coordinate {
     point [-1 -1 -1,
	     1 -1 -1,
	     1  1 -1,
	    -1  1 -1,
	    -1 -1  1,
	     1 -1  1,
	     1  1  1,
	    -1  1  1
	   ]
  }
}

DEF OBSTACLE_NAVIGATION NavigationInfo {
  type [ "TRANSFORM" ]
  translation -3 0 0
  rotation 0 1 0 0.1
}

DEF DRAW_DUAL_OBSTACLE_KEY SingleKeySensor { key "e" }
DEF FLATTEN_OBSTACLE_KEY SingleKeySensor { key "g" }

DEF OBSTACLE_TRANSFORMER CoordinateTransformer {
  translation -3 0 0
  rotation 0 1 0 0.1
  coord DEF OBSTACLE_COORD Coordinate {
    point [-1 -0.73 -0.73,
	   0 -0.73 1,
	   1 -0.73 -0.73,
	   0, 1, 0]
  }
}

DEF COORD_ADDER CoordinateMinkowski {
  coord1 USE ROBOT_COORD
  coord2 USE OBSTACLE_COORD
}

Transform {
  rotation 1 -1 0 0.3
  children [
    DEF TRANSFORM_ROBOT Transform {
      children [
	DEF SELECT_ROBOT TouchSensor { enabled TRUE }
	Shape {
	  appearance Appearance {
	    material Material { diffuseColor 0.6 0.3 0.2 }
	  }
	  geometry DEF ROBOT CubicalGaussianMap {
	    drawDual FALSE
	    dualLineColor 0.6 0.3 0.2
	    coord USE ROBOT_COORD
	    coordIndex [3 2 1 0 -1 4 5 6 7 -1
			2 6 5 1 -1 0 4 7 3 -1
			7 6 2 3 -1 0 1 5 4 -1
		       ]
	  }
	}
       ]
    }

    DEF TRANSFORM_OBSTACLE Transform {
      children [
	DEF SELECT_OBSTACLE TouchSensor { enabled TRUE }
	Shape {
	  appearance Appearance {
	    material Material { diffuseColor 0.2 0.3 0.6 }
	  }
	  geometry DEF OBSTACLE CubicalGaussianMap {
	    drawDual FALSE
	    dualLineColor 0.2 0.3 0.6
	    coord USE OBSTACLE_COORD
	    coordIndex [2 1 0 -1, 0 1 3 -1, 1 2 3 -1 2 0 3 -1]
	  }
	}
       ]
    }

    DEF MINK_SWITCH Switch {
      whichChoice 0
      children [
	Shape {
	  appearance Appearance {
	    material Material { diffuseColor 0.4 0.4 0.4 }
	  }
	  geometry DEF MINK CubicalGaussianMap {
	    drawDual FALSE
	    dualLineWidth 2
	    dualLineColor1 0.6 0.3 0.2
	    dualLineColor2 0.2 0.3 0.6
	    geometries [
              USE ROBOT
              USE OBSTACLE
	     ]
	  }
	}
       ]
    }
    DEF MINK_CH_SWITCH Switch {
      whichChoice -1
      children [
	Shape {
	  appearance Appearance {
	    material Material { diffuseColor 0.4 0.4 0.4 }
	  }
	  geometry DEF MINK_CH ExactPolyhedron {
	    convexHull TRUE
	  }
	}
       ]
    }
   ]
}

ROUTE DRAW_DUAL_ROBOT_KEY.state TO ROBOT.drawDual
ROUTE ROBOT_NAVIGATION.rotation TO ROBOT_TRANSFORMER.rotation
ROUTE ROBOT_NAVIGATION.translation TO ROBOT_TRANSFORMER.translation
ROUTE ROBOT_TRANSFORMER.coord_changed TO ROBOT.coord
ROUTE SELECT_ROBOT.isOver TO ROBOT_NAVIGATION.set_bind
ROUTE FLATTEN_ROBOT_KEY.press TO ROBOT_NAVIGATION.set_bind

ROUTE DRAW_DUAL_OBSTACLE_KEY.state TO OBSTACLE.drawDual
ROUTE OBSTACLE_NAVIGATION.rotation TO OBSTACLE_TRANSFORMER.rotation
ROUTE OBSTACLE_NAVIGATION.translation TO OBSTACLE_TRANSFORMER.translation
ROUTE OBSTACLE_TRANSFORMER.coord_changed TO OBSTACLE.coord
ROUTE SELECT_OBSTACLE.isOver TO OBSTACLE_NAVIGATION.set_bind
ROUTE FLATTEN_OBSTACLE_KEY.press TO OBSTACLE_NAVIGATION.set_bind

ROUTE DRAW_DUAL_MINK_KEY.state TO MINK.drawDual

ROUTE SIM.start TO ROBOT_TRANSFORMER.execute
ROUTE SIM.start TO OBSTACLE_TRANSFORMER.execute

ROUTE ROBOT_TRANSFORMER.coord_changed TO COORD_ADDER.coord1
ROUTE OBSTACLE_TRANSFORMER.coord_changed TO COORD_ADDER.coord2
ROUTE COORD_ADDER.coord_changed TO MINK_CH.coord

ROUTE SIM.start TO COORD_ADDER.execute

ROUTE SWITCH_KEY.intState TO MINK_SWITCH.whichChoice
